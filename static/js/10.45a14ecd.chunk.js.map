{"version":3,"sources":["views/Home/components/CardValue.tsx","utils/lotteryUtils.ts","hooks/useTickets.ts","views/Home/components/CardBusdValue.tsx","hooks/useBuyLottery.ts","contexts/PastLotteryDataContext.tsx","views/Lottery/components/Hero.tsx","utils/getLotteryRoundData.ts","hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/components/Loading.tsx","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","views/Lottery/components/ClaimPrizesCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx"],"names":["CardValue","value","decimals","fontSize","lineHeight","prefix","bold","color","useCountUp","start","end","duration","separator","undefined","countUp","update","updateValue","useRef","useEffect","current","style","multiCall","abi","calls","a","web3","getWeb3NoAccount","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","res","length","i","newCalls","slice","calldata","map","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","lotteryContract","price","numbersList","account","BigNumber","times","DEFAULT_TOKEN_DECIMAL","toString","send","from","on","tx","transactionHash","console","error","getTickets","ticketsContract","customLotteryNum","issueIndex","getTicketsAmount","calls1","Array","apply","options","address","ticketAbi","tokenIds","id","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","eq","push","calls3","tickets","getLotteryStatus","balanceOf","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","rewards","finalTokenIds","r","getTotalClaim","drawed","calls4","claim","reduce","p","c","sum","BIG_ZERO","getTotalRewards","getMax","maxNumber","getLotteryIssueIndex","getMatchingRewardLength","matchNumber","historyAmount","amount","div","LOTTERY_TICKET_PRICE","toNumber","getWinningNumbers","numbers","parseInt","historyNumbers","winningNumbers","useTotalClaim","useState","claimAmount","setClaimAmount","claimLoading","setClaimLoading","useWeb3React","useLotteryTicket","useLottery","useLastUpdated","lastUpdated","setLastUpdated","fetchBalance","useCallback","useWinningNumbers","setWinningNumbers","fastRefresh","useRefresh","useTickets","lotteryNumber","setTickets","CardBusdValue","props","useMultiClaimLottery","lotteryTicketContract","onMultiClaim","txHash","useMultiBuyLottery","onMultiBuy","useMaxNumber","max","setMax","fetchMax","React","createContext","mostRecentLotteryNumber","historyError","historyData","Title","styled","Heading","attrs","as","scale","ComeBack","Text","StyledHero","theme","mediaQueries","sm","StyledContainer","Container","LeftWrapper","lg","RightWrapper","Hero","t","useTranslation","mt","external","href","src","alt","getLotteryRoundData","fetch","response","json","data","Error","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","useContext","PastLotteryDataContext","roundData","fetchRecentLotteryData","Wrapper","SearchWrapper","InputWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","type","inputMode","min","isWarning","onChange","currentTarget","disabled","PastRoundCardError","message","IconWrapper","LotteryCardHeading","valueToDisplay","children","Icon","flexDirection","defaultProps","RewardP","TicketsList","colors","primary","StyledButton","Button","spacing","UserTicketsModal","myTicketNumbers","onDismiss","winNumbers","rewardMatch","number","n","listItems","emoji","join","key","title","TICKETS","variant","onClick","ExternalLinkWrap","LinkExternal","TicketCard","contractLink","ticketsLength","useModal","onPresentMyTickets","width","UnlockButton","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","toFixed","threeMatchesAmount","twoMatchesAmount","burnAmount","cakeBusdPrice","usePriceCakeBusd","getCakeBusdValue","multipliedBy","toLocaleString","gt","formatLotteryDate","lotteryDate","date","Date","dateString","toDateString","hours","getUTCHours","monthAndDay","split","splice","Timestamp","timeValue","CardHeading","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match2Ticket","match3Ticket","poolSize","mb","num","TicketRound","PancakeRoundIcon","PastLotteryActions","PastRoundCard","StyledLoading","Loading","StyledCardBody","CardBody","PastLotteryRoundViewer","isInitialized","state","setState","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","Bar","InnerWrapper","HistoryChart","showLast","isDark","useTheme","getDataArray","kind","rawData","dataPoint","reverse","Number","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","maxRotation","beginAtZero","autoSkipPadding","userCallback","useMemo","tooltips","mode","intersect","cornerRadius","backgroundColor","xPadding","yPadding","caretSize","titleFontFamily","titleFontSize","titleMarginBottom","bodyFontFamily","bodyFontSize","bodySpacing","beforeBody","callbacks","tooltipItem","yLabel","labelColor","chart","config","datasetIndex","cardBorder","legend","scales","yAxes","position","xAxes","fallback","justifyContent","LegendItem","Circle","isPoolSize","Legend","LabelWrapper","PastDrawsHistoryCard","setShowLast","textTransform","Select","option","WinningsWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","onSuccess","requestedClaim","setRequestedClaim","handleClaim","winnings","getBalanceNumber","marginRight","TextWrapper","StyledText","Image","img","md","NoPrizesContent","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledHeading","UnlockWalletCard","ClaimPrizesCard","handleSuccess","Cards","BaseLayout","SecondCardColumnWrapper","BunnyImageWrapper","PastDrawsPage","Lottery","setHistoryData","setHistoryError","currentLotteryNumber","setCurrentLotteryNumber","setMostRecentLotteryNumber","previousLotteryNumber","getInitialLotteryIndex","Page","Provider"],"mappings":"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","file":"static/js/10.45a14ecd.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@pancakeswap/uikit'\n\nexport interface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  lineHeight?: string\n  prefix?: string\n  bold?: boolean\n  color?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({\n  value,\n  decimals,\n  fontSize = '40px',\n  lineHeight = '1',\n  prefix = '',\n  bold = true,\n  color = 'text',\n}) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\n      {prefix}\n      {countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","/* eslint-disable no-await-in-loop */\nimport BigNumber from 'bignumber.js'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport ticketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { DEFAULT_TOKEN_DECIMAL, LOTTERY_TICKET_PRICE } from 'config'\nimport { AbiItem } from 'web3-utils'\nimport { getMulticallAddress } from './addressHelpers'\nimport { BIG_ZERO } from './bigNumber'\n\nexport const multiCall = async (abi, calls) => {\n  const web3 = getWeb3NoAccount()\n  const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n  let res = []\n  if (calls.length > 100) {\n    let i = 0\n    while (i < calls.length / 100) {\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n      const { returnData } = await multi.methods.aggregate(calldata).call()\n      i++\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\n    }\n  } else {\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\n  }\n  return res\n}\n\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\n  try {\n    return lotteryContract.methods\n      .multiBuy(new BigNumber(price).times(DEFAULT_TOKEN_DECIMAL).toString(), numbersList)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\n  const issueIndex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\n  const length = await getTicketsAmount(ticketsContract, account)\n\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n  const ticketIssues = await multiCall(ticketAbi, calls2)\n\n  const finalTokenids = []\n  ticketIssues.forEach(async (ticketIssue, i) => {\n    if (new BigNumber(ticketIssue).eq(issueIndex)) {\n      finalTokenids.push(tokenIds[i])\n    }\n  })\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\n  const tickets = await multiCall(ticketAbi, calls3)\n\n  await getLotteryStatus(lotteryContract)\n  return tickets\n}\n\nexport const getTicketsAmount = async (ticketsContract, account) => {\n  return ticketsContract.methods.balanceOf(account).call()\n}\n\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\n  await lotteryContract.methods.issueIndex().call()\n  const length = await getTicketsAmount(ticketsContract, account)\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n  const claimedStatus = await multiCall(ticketAbi, calls2)\n\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\n\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n  const rewards = await multiCall(lotteryAbi, calls3)\n\n  let finalTokenIds = []\n  rewards.forEach((r, i) => {\n    if (r > 0) {\n      finalTokenIds.push(unClaimedIds[i])\n    }\n  })\n\n  if (finalTokenIds.length > 200) {\n    finalTokenIds = finalTokenIds.slice(0, 200)\n  }\n\n  try {\n    return lotteryContract.methods\n      .multiClaim(finalTokenIds)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\n  try {\n    const issueIndex = await lotteryContract.methods.issueIndex().call()\n    const length = await getTicketsAmount(ticketsContract, account)\n    // eslint-disable-next-line prefer-spread\n    const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n      ticketsContract.options.address,\n      'tokenOfOwnerByIndex',\n      [account, i],\n    ])\n    const res = await multiCall(ticketAbi, calls1)\n    const tokenIds = res.map((id) => id.toString())\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n    const ticketIssues = await multiCall(ticketAbi, calls2)\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n    const claimedStatus = await multiCall(ticketAbi, calls3)\n\n    const drawed = await getLotteryStatus(lotteryContract)\n\n    const finalTokenIds = []\n    ticketIssues.forEach(async (ticketIssue, i) => {\n      // eslint-disable-next-line no-empty\n      if (!drawed && ticketIssue.toString() === issueIndex) {\n      } else if (!claimedStatus[i][0]) {\n        finalTokenIds.push(tokenIds[i])\n      }\n    })\n\n    const calls4 = finalTokenIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n\n    const rewards = await multiCall(lotteryAbi, calls4)\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BIG_ZERO)\n\n    return claim\n  } catch (err) {\n    console.error(err)\n  }\n  return BIG_ZERO\n}\n\nexport const getTotalRewards = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return lotteryContract.methods.getTotalRewards(issueIndex).call()\n}\n\nexport const getMax = async (lotteryContract) => {\n  return lotteryContract.methods.maxNumber().call()\n}\n\nexport const getLotteryIssueIndex = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return issueIndex\n}\n\nexport const getLotteryStatus = async (lotteryContract) => {\n  return lotteryContract.methods.drawed().call()\n}\n\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\n  let issueIndex = await lotteryContract.methods.issueIndex().call()\n  const drawed = await lotteryContract.methods.drawed().call()\n  if (!drawed) {\n    issueIndex -= 1\n  }\n  try {\n    const amount = await lotteryContract.methods.historyAmount(issueIndex, 5 - matchNumber).call()\n\n    return new BigNumber(amount).div(DEFAULT_TOKEN_DECIMAL).div(LOTTERY_TICKET_PRICE).toNumber()\n  } catch (err) {\n    console.error(err)\n  }\n  return 0\n}\n\nexport const getWinningNumbers = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  const numbers = []\n  const drawed = await lotteryContract.methods.drawed().call()\n\n  if (!drawed && parseInt(issueIndex, 10) === 0) {\n    return [0, 0, 0, 0]\n  }\n  if (!drawed) {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIndex - 1, i).call()).toString())\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\n    }\n  }\n  return numbers\n}\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useRefresh from './useRefresh'\nimport {\n  getTotalRewards,\n  getTotalClaim,\n  getMatchingRewardLength,\n  getWinningNumbers,\n  getTickets,\n} from '../utils/lotteryUtils'\nimport useLastUpdated from './useLastUpdated'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWeb3React()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(BIG_ZERO)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract)\n      setRewards(new BigNumber(res))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(BIG_ZERO)\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWeb3React()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, fetchBalance, lotteryContract, ticketsContract, lastUpdated])\n\n  return { claimLoading, claimAmount, setLastUpdated }\n}\n\nexport const useWinningNumbers = () => {\n  const [winningNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract)\n      setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winningNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbers = await getMatchingRewardLength(lotteryContract, numbers)\n      setMatchingNumbers(matchedNumbers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n\n  return matchingNumbers\n}\n\nexport default useTickets\n","import React from 'react'\nimport CardValue, { CardValueProps } from './CardValue'\n\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\n  return (\n    <CardValue fontSize=\"14px\" lineHeight=\"1.1\" color=\"textSubtle\" prefix=\"~$\" bold={false} decimals={2} {...props} />\n  )\n}\n\nexport default CardBusdValue\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\n\nexport const useMultiClaimLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useLottery()\n  const lotteryTicketContract = useLotteryTicket()\n\n  const handleClaim = useCallback(async () => {\n    try {\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\n      return txHash\n    } catch (e) {\n      return false\n    }\n  }, [account, lotteryContract, lotteryTicketContract])\n\n  return { onMultiClaim: handleClaim }\n}\n\nexport const useMultiBuyLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useLottery()\n\n  const handleBuy = useCallback(\n    async (amount: string, numbers: Array<any>) => {\n      try {\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\n        return txHash\n      } catch (e) {\n        return false\n      }\n    },\n    [account, lotteryContract],\n  )\n\n  return { onMultiBuy: handleBuy }\n}\n\nexport const useMaxNumber = () => {\n  const [max, setMax] = useState(5)\n  const lotteryContract = useLottery()\n\n  const fetchMax = useCallback(async () => {\n    const maxNumber = await getMax(lotteryContract)\n    setMax(maxNumber)\n  }, [lotteryContract])\n\n  useEffect(() => {\n    if (lotteryContract) {\n      fetchMax()\n    }\n  }, [lotteryContract, fetchMax])\n\n  return max\n}\n","import React from 'react'\n\nexport interface PastLotteryDataState {\n  mostRecentLotteryNumber: number\n  currentLotteryNumber: number\n  historyError: boolean\n  historyData: Array<any>\n}\n\nexport default React.createContext({\n  mostRecentLotteryNumber: 0,\n  historyError: false,\n  historyData: [],\n} as PastLotteryDataState)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, LinkExternal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/layout/Container'\n\nconst Title = styled(Heading).attrs({ as: 'h1', scale: 'xl' })`\n  color: #ffffff;\n  margin-bottom: 24px;\n  text-shadow: 2px 2px 2px #00000040;\n`\n\nconst ComeBack = styled(Text)`\n  background: -webkit-linear-gradient(#ffd800, #eb8c00);\n  font-size: 24px;\n  font-weight: 600;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`\n\nconst StyledHero = styled.div`\n  background-image: linear-gradient(#7645d9, #452a7a);\n  max-height: max-content;\n  overflow: hidden;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: 256px;\n  }\n`\n\nconst StyledContainer = styled(Container)`\n  display: flex;\n\n  flex-direction: column-reverse;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst LeftWrapper = styled.div`\n  flex: 1;\n  padding-right: 0;\n  padding-bottom: 40px;\n  padding-top: 40px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-right: 32px;\n  }\n`\n\nconst RightWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  padding-left: 0;\n\n  & img {\n    width: 80%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n    padding-left: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 32px;\n    & img {\n      margin-top: -25px;\n    }\n  }\n`\n\nconst Hero = () => {\n  const { t } = useTranslation()\n\n  return (\n    <StyledHero>\n      <StyledContainer>\n        <LeftWrapper>\n          <Title>{t('The Lottery Is Changing!')}</Title>\n          <ComeBack>{t('Come back soon!')}</ComeBack>\n          <LinkExternal\n            bold\n            mt={20}\n            external\n            href=\"https://voting.pancakeswap.finance/#/pancake/proposal/QmU8pcbmBrfbfVQXMMxmkExDq3mYq4s5cbBuFe6uCZzdmX\"\n          >\n            {t('Learn more')}\n          </LinkExternal>\n        </LeftWrapper>\n        <RightWrapper>\n          <img src=\"/images/tombola.png\" alt=\"lottery bunny\" />\n        </RightWrapper>\n      </StyledContainer>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","export type DataResponse = {\n  lotteryNumber: number\n  lotteryDate: string\n  lotteryNumbers: number[]\n  poolSize: number\n  burned: number\n  contractLink: string\n  jackpotTicket: number\n  match2Ticket: number\n  match3Ticket: number\n  match4Ticket: number\n  poolJackpot: number\n  poolMatch3: number\n  poolMatch2: number\n  poolMatch1: number | null\n\n  // TODO: Fill in the error type\n  error: any\n}\n\n/**\n * Get data for a specific lottery\n */\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\n  try {\n    const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\n    const data = await response.json()\n\n    return data\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport default getLotteryRoundData\n","import { useContext, useEffect, useState } from 'react'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\n\ntype GetRecentLotteryRoundDataReturn = {\n  isLoading: boolean\n  data: DataResponse\n  mostRecentLotteryNumber: number\n  error: any\n}\n\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(null)\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  useEffect(() => {\n    const fetchRecentLotteryData = async () => {\n      try {\n        setIsLoading(true)\n\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\n        setData(roundData)\n      } catch (err) {\n        setError(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (mostRecentLotteryNumber > 0) {\n      fetchRecentLotteryData()\n    }\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\n\n  return { isLoading, data, mostRecentLotteryNumber, error }\n}\n\nexport default useGetRecentLotteryRoundData\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface PastLotterySearcherProps {\n  initialLotteryNumber: number\n  onSubmit: (num: number) => void\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst SearchWrapper = styled.div`\n  position: relative;\n`\nconst InputWrapper = styled.div`\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  /* Firefox */\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n`\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translate(0%, -50%);\n  width: auto;\n`\n\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\n  const [isError, setIsError] = useState(false)\n  const { t } = useTranslation()\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n    onSubmit(lotteryNumber)\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    if (evt.currentTarget.value) {\n      const value = parseInt(evt.currentTarget.value, 10)\n\n      // The max value will always be the initialLotteryNumber which equals\n      // the latest lottery round\n      setIsError(value > initialLotteryNumber)\n      setLotteryNumber(value)\n    } else {\n      setLotteryNumber(initialLotteryNumber)\n    }\n  }\n\n  return (\n    <Wrapper>\n      <Text>{t('Select lottery number:')}</Text>\n      <form onSubmit={handleSubmit}>\n        <SearchWrapper>\n          <InputWrapper>\n            <Input\n              value={lotteryNumber}\n              type=\"number\"\n              inputMode=\"numeric\"\n              min=\"0\"\n              isWarning={isError}\n              max={initialLotteryNumber}\n              onChange={handleChange}\n            />\n          </InputWrapper>\n          <ButtonWrapper>\n            <Button type=\"submit\" scale=\"sm\" disabled={isError}>\n              {t('Search')}\n            </Button>\n          </ButtonWrapper>\n        </SearchWrapper>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default PastLotterySearcher\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\n\ninterface PastRoundCardErrorProps {\n  error: {\n    message: string\n  }\n}\n\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\n  return <Text p=\"24px\">{error.message}</Text>\n}\n\nexport default PastRoundCardError\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text } from '@pancakeswap/uikit'\n\ninterface HeadingProps {\n  valueToDisplay?: string\n  children?: string\n  Icon?: React.ComponentType\n}\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\n  return (\n    <Flex {...props}>\n      {Icon && (\n        <IconWrapper>\n          <Icon />\n        </IconWrapper>\n      )}\n      <Flex flexDirection=\"column\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {children}\n        </Text>\n        <Heading scale=\"lg\">{valueToDisplay}</Heading>\n      </Flex>\n    </Flex>\n  )\n}\n\nLotteryCardHeading.defaultProps = {\n  valueToDisplay: '',\n  Icon: () => <div />,\n  children: '',\n}\n\nexport default LotteryCardHeading\n","import React, { useCallback } from 'react'\nimport { Button, Modal } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useWinningNumbers } from 'hooks/useTickets'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface UserTicketsModalProps {\n  myTicketNumbers: Array<any>\n  from?: string\n  onDismiss?: () => void\n}\n\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\n  const winNumbers = useWinningNumbers()\n  const { t } = useTranslation()\n  const rewardMatch = useCallback(\n    (number) => {\n      let n = 0\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\n        // eslint-disable-next-line eqeqeq\n        if (winNumbers[i] == number[i]) n++\n      }\n      return n\n    },\n    [winNumbers],\n  )\n\n  const listItems = myTicketNumbers.map((number, index) => {\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        <RewardP key={index}>\n          {emoji}\n          {number.toString()}\n          {emoji}\n        </RewardP>\n      )\n    }\n    // eslint-disable-next-line react/no-array-index-key\n    return <p key={index}>{number.toString()}</p>\n  })\n\n  return (\n    <Modal title={t('My Tickets (Total: %TICKETS%)', { TICKETS: myTicketNumbers.length })} onDismiss={onDismiss}>\n      <TicketsList>\n        <h2>{listItems}</h2>\n      </TicketsList>\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\n        {t('Close')}\n      </StyledButton>\n    </Modal>\n  )\n}\n\nconst RewardP = styled.div`\n  color: #ff8c28;\n`\n\nconst TicketsList = styled.div`\n  text-align: center;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[2]}px;\n`\n\nexport default UserTicketsModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, LinkExternal, useModal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useTickets from 'hooks/useTickets'\nimport UnlockButton from 'components/UnlockButton'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 24px;\n\n  & > div {\n    flex: 1;\n    width: 100%;\n  }\n`\n\nconst ExternalLinkWrap = styled(LinkExternal)`\n  align-items: center;\n  display: flex;\n  height: 48px;\n  justify-content: center;\n  text-decoration: none;\n  width: 100%;\n`\n\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\n  const { t } = useTranslation()\n  const tickets = useTickets(lotteryNumber)\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return (\n      <Wrapper>\n        <UnlockButton />\n      </Wrapper>\n    )\n  }\n\n  return (\n    <Wrapper>\n      <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} width=\"100%\">\n        {t('View your tickets')}\n      </Button>\n      <ExternalLinkWrap href={contractLink}>{t('View on BscScan')}</ExternalLinkWrap>\n    </Wrapper>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Heading, Text } from '@pancakeswap/uikit'\nimport { BigNumber } from 'bignumber.js'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport CardBusdValue from '../../Home/components/CardBusdValue'\n\nexport interface PrizeGridProps {\n  lotteryPrizeAmount?: number\n  pastDraw?: boolean\n  jackpotMatches?: number\n  twoTicketMatches?: number\n  threeTicketMatches?: number\n}\n\nconst Grid = styled.div<{ pastDraw?: boolean }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\n  grid-template-rows: repeat(4, auto);\n`\n\nconst RightAlignedText = styled(Text)`\n  text-align: right;\n`\n\nconst RightAlignedHeading = styled(Heading)`\n  text-align: right;\n`\n\nconst GridItem = styled.div<{ marginBottom?: string }>`\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\n`\n\nconst PastDrawGridItem = styled(GridItem)`\n  transform: translate(-40%, 0%);\n`\n\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\n  lotteryPrizeAmount = 0,\n  pastDraw = false,\n  jackpotMatches,\n  twoTicketMatches,\n  threeTicketMatches,\n}) => {\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const { t } = useTranslation()\n  const cakeBusdPrice = usePriceCakeBusd()\n\n  const getCakeBusdValue = (amount: number) => {\n    return new BigNumber(amount).multipliedBy(cakeBusdPrice).toNumber()\n  }\n\n  return (\n    <Grid pastDraw={pastDraw}>\n      <GridItem>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('No. Matched')}\n        </Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n            {t('Winners')}\n          </RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n          {t('Prize Pot')}\n        </RightAlignedText>\n      </GridItem>\n      {/* 4 matches row */}\n      <GridItem>\n        <Heading scale=\"md\">4</Heading>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedHeading scale=\"md\">{jackpotMatches}</RightAlignedHeading>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedHeading scale=\"md\">\n          {fourMatchesAmount.toLocaleString()}\n          {!pastDraw && cakeBusdPrice.gt(0) && <CardBusdValue value={getCakeBusdValue(fourMatchesAmount)} />}\n        </RightAlignedHeading>\n      </GridItem>\n      {/* 3 matches row */}\n      <GridItem>\n        <Text bold>3</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {threeMatchesAmount.toLocaleString()}\n          {!pastDraw && cakeBusdPrice.gt(0) && <CardBusdValue value={getCakeBusdValue(threeMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n      {/* 2 matches row */}\n      <GridItem>\n        <Text>2</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {twoMatchesAmount.toLocaleString()}\n          {!pastDraw && cakeBusdPrice.gt(0) && <CardBusdValue value={getCakeBusdValue(twoMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n      {/* Burn row */}\n      <GridItem marginBottom=\"0\">\n        <Text>{t(pastDraw ? 'Burned' : 'To burn')}:</Text>\n      </GridItem>\n      {pastDraw ? (\n        <>\n          <GridItem marginBottom=\"0\" />\n          <GridItem marginBottom=\"0\">\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n          </GridItem>\n        </>\n      ) : (\n        <GridItem marginBottom=\"0\">\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n        </GridItem>\n      )}\n    </Grid>\n  )\n}\n\nexport default PrizeGrid\n","const formatLotteryDate = (lotteryDate: string) => {\n  if (!lotteryDate) {\n    return {}\n  }\n\n  const date = new Date(lotteryDate)\n\n  const dateString = date.toDateString()\n  const hours = date.getUTCHours()\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\n\n  return { hours, monthAndDay }\n}\n\nexport default formatLotteryDate\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\nimport formatLotteryDate from '../helpers/formatLotteryDate'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`\n\nconst Timestamp = ({ timeValue }) => {\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\n\n  return (\n    <Wrapper>\n      <Text fontSize=\"14px\">\n        {monthAndDay}, {hours}:00 UTC\n      </Text>\n    </Wrapper>\n  )\n}\n\nexport default Timestamp\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport LotteryCardHeading from '../LotteryCardHeading'\nimport PastLotteryActions from './PastLotteryActions'\nimport PrizeGrid from '../PrizeGrid'\nimport Timestamp from '../Timestamp'\n\ninterface PastRoundCardDetailsProps {\n  data: DataResponse\n}\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\n  const { t } = useTranslation()\n\n  const {\n    contractLink,\n    jackpotTicket,\n    lotteryDate,\n    lotteryNumber,\n    lotteryNumbers,\n    match2Ticket,\n    match3Ticket,\n    poolSize,\n  } = data\n\n  return (\n    !data.error &&\n    data && (\n      <>\n        <CardBody>\n          <CardHeading>\n            <Timestamp timeValue={lotteryDate} />\n            <Heading scale=\"md\" mb=\"24px\">\n              {t('Round #%num%', { num: lotteryNumber })}\n            </Heading>\n            <TopLotteryCardHeading\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\n              Icon={TicketRound}\n            >\n              {t('Winning numbers')}\n            </TopLotteryCardHeading>\n            <LotteryCardHeading valueToDisplay={`${poolSize.toLocaleString()} CAKE`} Icon={PancakeRoundIcon}>\n              {t('Total prizes')}\n            </LotteryCardHeading>\n          </CardHeading>\n        </CardBody>\n        <CardFooter>\n          <PrizeGrid\n            lotteryPrizeAmount={poolSize}\n            jackpotMatches={jackpotTicket}\n            twoTicketMatches={match2Ticket}\n            threeTicketMatches={match3Ticket}\n            pastDraw\n          />\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\n        </CardFooter>\n      </>\n    )\n  )\n}\n\nexport default PastRoundCardDetails\n","import React from 'react'\nimport { Card } from '@pancakeswap/uikit'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport PastRoundCardError from './PastRoundCardError'\nimport PastRoundCardDetails from './PastRoundCardDetails'\n\ninterface PastRoundCardProps {\n  error: {\n    message: string\n  }\n  data: DataResponse\n}\n\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\n}\n\nexport default PastRoundCard\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Loading: React.FC = () => <StyledLoading />\n\nconst StyledLoading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@pancakeswap/uikit'\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\nimport { useTranslation } from 'contexts/Localization'\nimport useGetRecentLotteryRoundData from 'hooks/useGetRecentLotteryRoundData'\nimport PastLotterySearcher from './PastLotterySearcher'\nimport PastRoundCard from './PastRoundCard'\nimport Loading from '../Loading'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 552px; // height of final card\n`\n\nconst PastLotteryRoundViewer = () => {\n  const [state, setState] = useState({\n    roundData: null,\n    error: { message: null, type: null },\n    isInitialized: false,\n    isLoading: true,\n  })\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\n  const { t } = useTranslation()\n  const { roundData, error, isInitialized, isLoading } = state\n\n  useEffect(() => {\n    if (initialLotteryData) {\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\n    }\n  }, [initialLotteryData, setState])\n\n  const handleSubmit = async (lotteryNumber: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true,\n    }))\n\n    getLotteryRoundData(lotteryNumber)\n      .then((data) => {\n        if (data.error) {\n          setState((prevState) => ({\n            ...prevState,\n            error: {\n              message: t('The lottery number you provided does not exist'),\n              type: 'out of range',\n            },\n            isLoading: false,\n            isInitialized: true,\n          }))\n        } else {\n          setState((prevState) => ({\n            ...prevState,\n            error: { message: null, type: null },\n            roundData: data,\n            isLoading: false,\n            isInitialized: true,\n          }))\n        }\n      })\n      .catch(() => {\n        setState((prevState) => ({\n          ...prevState,\n          error: { message: t('Error fetching data'), type: 'api' },\n          isLoading: false,\n          isInitialized: true,\n        }))\n      })\n  }\n\n  return (\n    <Wrapper>\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\n      {!isInitialized || isLoading ? (\n        <Card>\n          <StyledCardBody>\n            <Loading />\n          </StyledCardBody>\n        </Card>\n      ) : (\n        <PastRoundCard error={error} data={roundData} />\n      )}\n    </Wrapper>\n  )\n}\n\nexport default PastLotteryRoundViewer\n","import React, { lazy, Suspense, useContext, useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport Loading from '../Loading'\n\nconst Line = lazy(() => import('./LineChartWrapper'))\nconst Bar = lazy(() => import('./BarChartWrapper'))\n\nconst InnerWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\ninterface HistoryChartProps {\n  showLast: 'max' | number\n}\n\nconst HistoryChart: React.FC<HistoryChartProps> = ({ showLast }) => {\n  const { t } = useTranslation()\n  const { isDark } = useTheme()\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\n  const getDataArray = (kind) => {\n    const rawData = historyData\n      .map((dataPoint) => {\n        return dataPoint[kind]\n      })\n      .reverse()\n\n    return showLast === 'max' ? rawData : rawData.slice(Number(showLast) * -1)\n  }\n\n  const lineStyles = ({ color }) => {\n    return {\n      borderColor: color,\n      fill: false,\n      borderWidth: 2,\n      pointRadius: 0,\n      pointHitRadius: 10,\n    }\n  }\n\n  const chartData = () => {\n    return {\n      labels: getDataArray('lotteryNumber'),\n      datasets: [\n        {\n          label: t('Pool Size'),\n          data: getDataArray('poolSize'),\n          yAxisID: 'y-axis-pool',\n          ...lineStyles({ color: '#7A6EAA' }),\n        },\n        {\n          label: t('Burned'),\n          data: getDataArray('burned'),\n          yAxisID: 'y-axis-burned',\n          ...lineStyles({ color: '#1FC7D4' }),\n        },\n      ],\n    }\n  }\n\n  const axesStyles = ({ color, lineHeight, prefix = '' }) => {\n    return {\n      borderCapStyle: 'round',\n      gridLines: { display: false },\n      ticks: {\n        fontFamily: 'Kanit, sans-serif',\n        fontColor: color,\n        fontSize: 12,\n        lineHeight,\n        maxRotation: 0,\n        beginAtZero: true,\n        autoSkipPadding: 15,\n        userCallback: (value) => {\n          return `${prefix}${value.toLocaleString()}`\n        },\n      },\n    }\n  }\n\n  const options = useMemo(() => {\n    return {\n      tooltips: {\n        mode: 'index',\n        intersect: false,\n        cornerRadius: 16,\n        backgroundColor: '#27262c',\n        xPadding: 16,\n        yPadding: 16,\n        caretSize: 6,\n        titleFontFamily: 'Kanit, sans-serif',\n        titleFontSize: 16,\n        titleMarginBottom: 8,\n        bodyFontFamily: 'Kanit, sans-serif',\n        bodyFontSize: 16,\n        bodySpacing: 8,\n        beforeBody: '##',\n        callbacks: {\n          title: (tooltipItem) => {\n            return `${t('Round #%num%', { num: tooltipItem[0].label })}`\n          },\n          label: (tooltipItem) => {\n            return ` ${tooltipItem.yLabel.toLocaleString()} CAKE`\n          },\n          labelColor: (tooltipItem, chart) => {\n            return {\n              borderColor: chart.config.data.datasets[tooltipItem.datasetIndex].cardBorder,\n              backgroundColor: chart.config.data.datasets[tooltipItem.datasetIndex].borderColor,\n            }\n          },\n        },\n      },\n      legend: { display: false },\n      scales: {\n        yAxes: [\n          {\n            type: 'linear',\n            position: 'left',\n            id: 'y-axis-pool',\n            ...axesStyles({ color: '#7A6EAA', lineHeight: 1.6 }),\n          },\n          {\n            type: 'linear',\n            position: 'right',\n            id: 'y-axis-burned',\n            ...axesStyles({ color: '#1FC7D4', lineHeight: 1.5 }),\n          },\n        ],\n        xAxes: [\n          {\n            ...axesStyles({ color: isDark ? '#FFFFFF' : '#452A7A', lineHeight: 1, prefix: '#' }),\n          },\n        ],\n      },\n    }\n  }, [isDark, t])\n\n  return (\n    <>\n      {historyError && (\n        <InnerWrapper>\n          <Text>{t('Error fetching data')}</Text>\n        </InnerWrapper>\n      )}\n      {!historyError && historyData.length > 1 ? (\n        <Suspense\n          fallback={\n            <Flex justifyContent=\"center\">\n              <Loading />\n            </Flex>\n          }\n        >\n          {showLast === 50 || showLast === 100 ? (\n            <Bar data={chartData()} options={options} />\n          ) : (\n            <Line data={chartData()} options={options} type=\"line\" />\n          )}\n        </Suspense>\n      ) : (\n        <InnerWrapper>\n          <Loading />\n        </InnerWrapper>\n      )}\n    </>\n  )\n}\n\nexport default HistoryChart\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 24px 0 24px;\n`\n\nconst LegendItem = styled.div`\n  display: flex;\n  margin-right: 18px;\n  align-items: center;\n`\n\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  background-color: ${({ isPoolSize, theme }) => (isPoolSize ? '#7A6EAA' : theme.colors.primary)};\n  margin-right: 6px;\n`\n\nconst Legend = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <LegendItem>\n        <Circle isPoolSize />\n        <Text>{t('Pool Size')}</Text>\n      </LegendItem>\n      <LegendItem>\n        <Circle />\n        <Text>{t('Burned')}</Text>\n      </LegendItem>\n    </Wrapper>\n  )\n}\n\nexport default Legend\n","import React, { useState } from 'react'\nimport { Heading, Card, CardBody, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport HistoryChart from './HistoryChart'\nimport Legend from './Legend'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  flex-direction: column-reverse;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-wrap: nowrap;\n    flex-direction: row;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  margin-top: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n  }\n\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst PastDrawsHistoryCard: React.FC = () => {\n  const { t } = useTranslation()\n  const [showLast, setShowLast] = useState<'max' | number>(50)\n  const handleShowLastChange = (option: OptionProps): void => {\n    setShowLast(option.value)\n  }\n\n  return (\n    <Card>\n      <CardBody>\n        <Heading scale=\"md\">{t('History')}</Heading>\n        <Wrapper>\n          <Legend />\n          <LabelWrapper>\n            <Text textTransform=\"uppercase\">{t('Show Last')}</Text>\n            <Select\n              options={[\n                {\n                  label: '50',\n                  value: 50,\n                },\n                {\n                  label: '100',\n                  value: 100,\n                },\n                {\n                  label: '200',\n                  value: 200,\n                },\n                {\n                  label: t('Max'),\n                  value: 'max',\n                },\n              ]}\n              onChange={handleShowLastChange}\n            />\n          </LabelWrapper>\n        </Wrapper>\n        <HistoryChart showLast={showLast} />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default PastDrawsHistoryCard\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Won, useModal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\nimport Loading from '../Loading'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst WinningsWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst StyledCardActions = styled.div`\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[1]}px;\n`\n\ninterface PrizesWonContentProps {\n  onSuccess: () => void\n}\n\nconst PrizesWonContent: React.FC<PrizesWonContentProps> = ({ onSuccess }) => {\n  const [requestedClaim, setRequestedClaim] = useState(false)\n  const { t } = useTranslation()\n  const { claimLoading, claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        onSuccess()\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim, onSuccess])\n\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\n\n  return (\n    <StyledCardContentInner>\n      <IconWrapper>\n        <Won />\n      </IconWrapper>\n      <Heading as=\"h3\" scale=\"lg\" color=\"secondary\">\n        {t('You won!')}\n      </Heading>\n      {claimLoading && <Loading />}\n      {!claimLoading && (\n        <>\n          <WinningsWrapper>\n            <Heading as=\"h4\" scale=\"xl\" style={{ marginRight: '6px' }}>\n              {winnings}\n            </Heading>\n            <Heading as=\"h4\" scale=\"lg\">\n              CAKE\n            </Heading>\n          </WinningsWrapper>\n        </>\n      )}\n      <StyledCardActions>\n        <Button width=\"100%\" disabled={requestedClaim} onClick={handleClaim}>\n          {t('Collect')}\n        </Button>\n      </StyledCardActions>\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n        {t('View your tickets')}\n      </StyledButton>\n    </StyledCardContentInner>\n  )\n}\n\nexport default PrizesWonContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, useModal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTickets from 'hooks/useTickets'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst StyledText = styled(Text)`\n  padding-left: 12px;\n`\n\nconst Image = styled.img`\n  margin-right: 6px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 20px;\n  }\n`\nconst StyledButton = styled(Button)`\n  padding: 0 12px;\n  height: unset;\n`\n\nconst NoPrizesContent: React.FC = () => {\n  const { t } = useTranslation()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  return (\n    <Wrapper>\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\n      <TextWrapper>\n        <StyledText color=\"textDisabled\">{t('Sorry, no prizes to collect')}</StyledText>\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n          {t('View your tickets')}\n        </StyledButton>\n      </TextWrapper>\n    </Wrapper>\n  )\n}\n\nexport default NoPrizesContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@pancakeswap/uikit'\nimport PrizesWonContent from './PrizesWonContent'\nimport NoPrizesContent from './NoPrizesContent'\n\nconst StyledCard = styled(Card)`\n  ${(props) =>\n    props.isDisabled\n      ? `  \n        margin-top: 16px;\n        background-color: unset;\n        box-shadow: unset;\n        border: 1px solid ${props.theme.colors.textDisabled};\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\ninterface YourPrizesCardProps {\n  isAWin: boolean\n  onSuccess: () => void\n}\n\nconst YourPrizesCard: React.FC<YourPrizesCardProps> = ({ isAWin, onSuccess }) => {\n  return (\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\n      <CardBody>{isAWin ? <PrizesWonContent onSuccess={onSuccess} /> : <NoPrizesContent />}</CardBody>\n    </StyledCard>\n  )\n}\n\nexport default YourPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Ticket } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport UnlockButton from 'components/UnlockButton'\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n  max-height: 196px;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst IconWrapper = styled.div`\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst UnlockWalletCard = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Card isActive>\n      <StyledCardBody>\n        <IconWrapper>\n          <Ticket />\n        </IconWrapper>\n        <div>\n          <StyledHeading scale=\"md\">{t('Unlock wallet to access lottery')}</StyledHeading>\n          <UnlockButton />\n        </div>\n      </StyledCardBody>\n    </Card>\n  )\n}\n\nexport default UnlockWalletCard\n","import React, { useCallback } from 'react'\nimport { Box } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport YourPrizesCard from './YourPrizesCard'\nimport UnlockWalletCard from './UnlockWalletCard'\n\nconst ClaimPrizesCard = () => {\n  const { account } = useWeb3React()\n  const { claimAmount, setLastUpdated } = useTotalClaim()\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  const handleSuccess = useCallback(() => {\n    setLastUpdated()\n  }, [setLastUpdated])\n\n  return (\n    <Box mb=\"32px\">\n      {!account ? <UnlockWalletCard /> : <YourPrizesCard isAWin={isAWin} onSuccess={handleSuccess} />}\n    </Box>\n  )\n}\n\nexport default ClaimPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BaseLayout } from '@pancakeswap/uikit'\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\nimport ClaimPrizesCard from './components/ClaimPrizesCard'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: column;\n`\n\nconst BunnyImageWrapper = styled.div`\n  display: flex;\n  margin-top: 32px;\n  justify-content: center;\n`\n\nconst PastDrawsPage: React.FC = () => {\n  return (\n    <>\n      <ClaimPrizesCard />\n      <Cards>\n        <PastLotteryRoundViewer />\n        <SecondCardColumnWrapper>\n          <PastDrawsHistoryCard />\n          <BunnyImageWrapper>\n            <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" />\n          </BunnyImageWrapper>\n        </SecondCardColumnWrapper>\n      </Cards>\n    </>\n  )\n}\n\nexport default PastDrawsPage\n","import React, { useState, useEffect } from 'react'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\nimport { useLottery } from 'hooks/useContract'\nimport Page from 'components/layout/Page'\nimport Hero from './components/Hero'\nimport PastDrawsPage from './PastDrawsPage'\n\nconst Lottery: React.FC = () => {\n  const lotteryContract = useLottery()\n  const [historyData, setHistoryData] = useState([])\n  const [historyError, setHistoryError] = useState(false)\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\n\n  useEffect(() => {\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\n      .then((response) => response.json())\n      .then((data) => setHistoryData(data))\n      .catch(() => {\n        setHistoryError(true)\n      })\n  }, [])\n\n  useEffect(() => {\n    const getInitialLotteryIndex = async () => {\n      const index = await getLotteryIssueIndex(lotteryContract)\n      const previousLotteryNumber = index - 1\n\n      setCurrentLotteryNumber(index)\n      setMostRecentLotteryNumber(previousLotteryNumber)\n    }\n\n    if (lotteryContract) {\n      getInitialLotteryIndex()\n    }\n  }, [lotteryContract])\n\n  return (\n    <>\n      <Hero />\n      <Page>\n        <PastLotteryDataContext.Provider\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\n        >\n          <PastDrawsPage />\n        </PastLotteryDataContext.Provider>\n      </Page>\n    </>\n  )\n}\n\nexport default Lottery\n"],"sourceRoot":""}