{"version":3,"sources":["config/constants/tokens.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","views/Pools/components/ToggleView/ToggleView.tsx","hooks/useEagerConnect.ts","style/Global.tsx","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/ToastListener/index.tsx","components/EasterEgg/EasterEgg.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","hooks/cakeVault/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/HelpButton.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","App.tsx","Providers.tsx","index.tsx","hooks/useApprove.ts","state/teams/index.tsx","config/constants/nfts.ts","utils/makeBatchRequest.ts","config/constants/endpoints.ts","components/UnlockButton.tsx","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","hooks/useRefresh.ts","hooks/useAuth.ts","components/Tags.tsx","utils/getRpcUrl.ts","utils/wallet.ts","utils/web3React.ts","config/constants/index.ts","config/constants/teams.ts","contexts/Localization/helpers.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","state/teams/helpers.ts","state/pools/helpers.ts","config/constants/campaigns.ts","utils/bscscan.ts","config/constants/meta.ts","components/layout/Page.tsx","config/constants/contracts.ts","utils/addressHelpers.ts","components/layout/Container.tsx","utils/collectibles.ts","hooks/useStake.ts","config/constants/ifo.ts","state/block/index.ts","state/collectibles/index.ts","utils/formatBalance.ts","components/ApyCalculatorModal/index.tsx","state/achievements/helpers.ts","state/achievements/index.ts","utils/farmsPriceHelpers.ts","contexts/ThemeContext.tsx","contexts/ToastsContext/Provider.tsx","hooks/useTabVisibility.ts","contexts/RefreshContext.tsx","utils/bigNumber.ts","hooks/usePersistState.ts","state/hooks.ts","config/index.ts","utils/achievements.ts","utils/latinise.ts","state/predictions/index.ts","hooks/useLastUpdated.ts","components/Balance.tsx","components/PageLoader.tsx","utils/getTimePeriods.ts","utils/settings.ts","utils/contractHelpers.ts","utils/apr.ts","components/Select/Select.tsx","hooks/useUnstake.ts","hooks/useHarvest.ts","routerHistory.ts","hooks/useContract.ts","utils/farmHelpers.ts","views/Pools/helpers.tsx","components/layout/Flex.tsx","hooks/usePreviousValue.ts","hooks/useDelayedUnmount.ts","components/PageHeader/PageHeader.tsx","state/index.ts","components/SearchInput/SearchInput.tsx","hooks/useWeb3.ts","utils/multicall.ts","utils/web3.ts","state/actions.ts","utils/callHelpers.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","config/constants/pools.ts","hooks/useToast.ts","state/types.ts","state/predictions/helpers.ts","state/predictions/queries.ts","config/constants/types.ts","config/localization/languages.ts","hooks/useTheme.ts","config/constants/farms.ts","utils/compoundApyHelpers.ts"],"names":["tokens","bnb","symbol","projectLink","cake","address","56","97","decimals","txl","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","wbnb","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","busd","eth","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","hotcross","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","kalm","deri","well","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","isActive","Number","points","profileContract","getProfileContract","getUsername","a","fetch","process","response","ok","json","username","getProfile","methods","hasRegistered","call","profile","getUserProfile","getTeam","team","getNftByTokenId","nft","Cookies","set","avatar","images","sm","domain","secure","expires","initialState","isInitialized","isLoading","data","profileSlice","createSlice","name","reducers","profileFetchStart","state","profileFetchSucceeded","_state","action","payload","profileFetchFailed","profileClear","addPoints","actions","fetchProfile","dispatch","ViewMode","_binanceChainListener","Promise","resolve","Object","defineProperty","window","get","this","bsc","useEagerConnect","login","useAuth","useEffect","connectorId","localStorage","getItem","connectorLocalStorageKey","isConnectorBinanceChain","ConnectorNames","BSC","isBinanceChainDefined","Reflect","has","then","GlobalStyle","createGlobalStyle","theme","colors","background","config","t","label","icon","href","items","Menu","props","account","useWeb3React","logout","useTheme","isDark","toggleTheme","cakePriceUsd","usePriceCakeBusd","useProfile","useTranslation","currentLanguage","setLanguage","currentLang","code","langs","languageList","setLang","toNumber","links","image","undefined","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","error","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","history","nextState","replaceState","location","reload","fallback","React","Component","ToastListener","useToast","toasts","remove","onRemove","id","EasterEgg","useState","show","setShow","startFalling","useCallback","useKonamiCheatCode","onAnimationEnd","memo","AprRow","pool","performanceFee","stakingToken","earningToken","isFinished","apr","earningTokenPrice","isAutoVault","tooltipContent","useTooltip","placement","targetRef","tooltip","tooltipVisible","getAprData","earningsPercentageToDisplay","roundingDecimals","compoundFrequency","apyModalLink","BASE_EXCHANGE_URL","useModal","ApyCalculatorModal","tokenPrice","linkLabel","linkHref","earningTokenSymbol","onPresentApyModal","alignItems","justifyContent","ref","width","height","Balance","fontSize","isDisabled","value","unit","bold","onClick","variant","scale","color","PromotedGradient","keyframes","StyledCard","styled","Card","isPromoted","css","primaryBright","secondary","card","isDesktop","mediaQueries","StyledCardInner","Box","radii","ExpandedWrapper","Flex","ExpandedFooter","currentBlock","useBlock","useCakeVault","totalCakeInVault","fees","totalStaked","contractAddress","sousId","tokenAddress","getAddress","poolContractAddress","cakeVaultContractAddress","getCakeVaultAddress","imageSrc","BASE_URL","toLowerCase","isMetaMaskInScope","ethereum","isMetaMask","isManualCakePool","getPoolBlockInfo","shouldShowBlockCountdown","blocksUntilStart","blocksRemaining","hasPoolStarted","blocksToDisplay","flexDirection","mb","small","getBalanceNumber","manualCakeTotalMinusAutoVault","BigNumber","minus","getTotalStakedBalance","ml","textTransform","BASE_BSC_SCAN_URL","p","registerToken","ExpandableButtonWrapper","Footer","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","Wrapper","CardHeader","backgroundDisabled","gradients","StyledCardHeader","stakingTokenSymbol","isStaking","poolImageSrc","toLocaleLowerCase","isCakePool","src","alt","ApprovalAction","stakingTokenContract","useERC20","useSousApprove","handleApprove","requestedApproval","endIcon","spin","disabled","StyledLink","Link","NotEnoughTokensModal","tokenSymbol","onDismiss","title","headerBackground","cardHeader","mt","as","external","StyledButton","Button","PercentageButton","children","StakeModal","isBnbPool","stakingTokenBalance","stakingTokenPrice","isRemovingStake","userData","stakingLimit","onStake","useSousStake","onUnstake","useSousUnstake","enableEmergencyWithdraw","toastSuccess","toastError","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","stakedBalance","gt","usdValueStaked","formatNumber","times","fullDecimalStakeAmount","getDecimalAmount","plus","handleChangePercent","sliderPercent","percentageOfStakingMax","dividedBy","multipliedBy","amountToStake","getFullDisplayBalance","handleConfirmClick","style","textAlign","amount","token","minWidth","onUserInput","input","convertedInput","percentage","Math","floor","min","currencyValue","isWarning","balance","max","onValueChanged","valueLabel","step","parseFloat","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","gte","prefix","mr","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","onReward","useSousHarvest","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","activeIndex","onItemClick","index","pb","HarvestActions","earnings","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","display","InlineText","Text","CardActions","harvest","poolCategory","PoolCategory","BINANCE","allowance","BIG_ZERO","pendingReward","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","text","UnlockButton","CardFooter","VaultApprovalAction","setLastUpdated","useVaultApprove","useWithdrawalFeeTimer","lastDepositedTime","userShares","withdrawalFeePeriod","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","Date","now","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","setInterval","prevSeconds","clearInterval","WithdrawalFeeTimer","getTimePeriods","days","hours","minutes","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","withdrawalFee","feeAsDecimal","fee","parseInt","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","toFixed","VaultStakeModal","stakingMax","useAppDispatch","cakeVaultContract","useCakeVaultContract","pricePerFullShare","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","convertCakeToShares","triggerWithdrawAllThreshold","sharesRemaining","sharesAsBigNumber","lte","withdrawAll","send","from","on","fetchCakeVaultUserData","console","message","withdraw","toString","handleDeposit","deposit","BIG_TEN","pow","HasSharesActions","convertSharesToCake","cakeAsBigNumber","cakeAsNumberBalance","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","useCheckVaultApprovalStatus","isVaultApproved","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","cakeAtLastUserAction","lastUserActionTime","getCakeVaultEarnings","hasAutoEarnings","autoCakeToDisplay","autoUsdToDisplay","lastActionInMs","toLocaleString","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isXl","useMatchBreakpoints","isVaultUserDataLoading","performanceFeeAsDecimal","RecentCakeProfitRow","VaultCardActions","Container","div","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","PoolTabButtons","stakedOnly","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","url","isExact","isXs","isSm","viewModeToggle","liveOrFinishedSwitch","to","stakedOnlySwitch","checked","onChange","prev","Divider","BountyModal","cakeBountyToDisplay","dollarBountyToDisplay","totalPendingCakeHarvest","callFee","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","tooltipPadding","right","gas","DEFAULT_GAS_LIMIT","BountyCard","estimatedCakeBountyReward","estimatedDollarBountyReward","useMemo","hasFetchedDollarBounty","hasFetchedCakeBounty","fontWeight","onPresentBountyModal","ButtonText","xs","HelpButton","px","BaseCell","CellContent","StyledCell","NameCell","hasVaultShares","iconFile","showStakedTag","subtitle","showSubtitle","role","HelpIconWrapper","EarningsCell","userDataLoaded","labelText","asset","event","stopPropagation","Apr","showIcon","openRoiModal","md","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","endBlock","renderBlocks","flex","getBscScanBlockCountdownUrl","e","showLoading","ArrowIcon","ChevronDownIcon","toggled","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","displayBalance","actionTitle","pt","alignSelf","lineHeight","marginTop","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","expandAnimation","collapseAnimation","StyledActionPanel","dropdown","lg","InfoSection","ActionPanel","breakpoints","isMd","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","maxWidth","Harvest","Stake","StyledRow","PoolRow","isLg","setExpanded","shouldRenderActionPanel","useDelayedUnmount","ExpandActionCell","StyledTable","StyledTableBorder","cardBorder","ScrollButtonContainer","PoolsTable","pools","tableWrapperEl","useRef","map","key","current","scrollIntoView","behavior","CardLayout","FlexLayout","PoolControls","SearchSortContainer","ControlStretch","Pools","useLocation","usePools","poolsWithoutAutoVault","usePersistState","localStorageKey","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","searchQuery","setSearchQuery","sortOption","setSortOption","accountHasVaultShares","cakePool","find","partition","finishedPools","openPools","stakedOnlyFinishedPools","filter","isGreaterThan","stakedOnlyOpenPools","length","usePollFarmsData","useFetchCakeVault","useFetchPublicPoolsData","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","showFinishedPools","pathname","includes","poolsToShow","chosenPools","lowercaseQuery","latinise","poolsToSort","orderBy","sortPools","slice","cardLayout","tableLayout","PageHeader","Page","Select","options","option","SearchInput","target","placeholder","Home","lazy","Farms","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","EXPONENTIAL_AT","DECIMAL_PLACES","App","usePollBlockNumber","useFetchProfile","usePollCoreFarmData","Global","PageLoader","path","exact","component","iterations","Providers","getLibrary","store","ThemeContext","RefreshContext","ReactDOM","render","StrictMode","document","getElementById","useApprove","lpContract","masterChefContract","useMasterchef","onApprove","approve","tx","setRequestedApproval","sousChefContract","useSousChef","updateUserAllowance","cakeContract","useCake","ethers","constants","MaxUint256","setIsVaultApproved","useLastUpdated","lastUpdated","currentAllowance","checkApprovalStatus","useLotteryApprove","lotteryContract","useLottery","useIfoApprove","tokenContract","spenderAddress","teamsList","reduce","accum","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","getTeams","teams","IPFS_GATEWAY","nftSources","NftType","PANCAKE","identifierKey","MIXIE","Nfts","description","ipfs","sortOrder","identifier","type","variationId","video","webm","mp4","blur","makeBatchRequest","calls","batch","getWeb3NoAccount","BatchRequest","promises","reject","add","request","err","result","execute","all","GRAPH_API_PROFILE","GRAPH_API_PREDICTION","ARCHIVED_NODE","onPresentConnectModal","useWalletModal","priceHelperLps","pid","lpSymbol","lpAddresses","quoteToken","fetchFarm","farm","lpAddress","params","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","tokenAmountTotal","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","lpTotalInQuoteToken","masterchefABI","info","totalAllocPoint","allocPoint","_hex","poolWeight","toJSON","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","getFarmFromTokenSymbol","farms","preferredQuoteTokens","farmsWithTokenSymbol","filterFarmsByQuoteToken","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","Boolean","quoteTokenInBusd","getFarmQuoteTokenPrice","BIG_ONE","fetchFarmsPrices","bnbBusdFarm","farmsWithPrices","baseTokenPrice","quoteTokenPrice","busdPrice","fetchFarmUserAllowances","masterChefAddress","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","farmsConfig","loadArchivedFarmsData","nonArchivedFarms","isArchivedPid","fetchFarmsPublicDataAsync","createAsyncThunk","pids","farmsWithPriceHelpers","concat","priceHelperLpsConfig","farmsWithoutHelperLps","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","extraReducers","builder","addCase","fulfilled","liveFarmData","farmData","forEach","userDataEl","findIndex","useRefresh","useContext","fastRefresh","fast","slowRefresh","slow","activate","deactivate","connectorID","connector","connectorsByName","UnsupportedChainIdError","setupNetwork","removeItem","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","walletconnect","close","CoreTag","outline","startIcon","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","nodes","getNodeUrl","randomIndex","random","provider","chainId","method","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","tokenImage","tokenAdded","rpcUrl","injected","InjectedConnector","supportedChainIds","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","Injected","WalletConnect","textColor","users","LS_KEY","fetchLocale","locale","getLanguageCodeFromLS","EN","isFetching","languageMap","Map","translations","LanguageContext","createContext","LanguageProvider","codeFromStorage","languages","setState","enLocale","currentLocale","prevState","fetchInitialLocales","language","setItem","translate","translatedText","match","interpolatedText","keys","dataKey","templateKey","RegExp","replace","Provider","languageContext","Error","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","i","push","teamData","onChainTeamData","transformUserData","transformPool","rest","getTokenPricesFromFarm","prices","quoteTokenAddress","campaigns","badge","campaignMap","campaign","getBscScanAddressUrl","getBscScanTransactionUrl","transactionHash","getBscScanBlockNumberUrl","block","DEFAULT_META","StyledPage","PageMeta","cakePriceUsdDisplay","minimumFractionDigits","maximumFractionDigits","pageMeta","getCustomMeta","pageTitle","join","property","content","MAINNET_CHAIN_ID","getCakeAddress","addresses","getMulticallAddress","getWbnbAddress","getLotteryAddress","getLotteryTicketAddress","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getPredictionsAddress","getChainlinkOracleAddress","getIdentifierKeyFromAddress","nftSource","values","nftSourceEntry","getTokenUrl","tokenUri","startsWith","getAddressByType","getTokenUriData","contract","getErc721Contract","tokenURI","uriDataResponse","uriData","isUsingBnb","handleStake","stake","sousStakeBnb","sousStake","updateUserStakedBalance","updateUserBalance","useStake","txHash","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","currency","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","version","blockSlice","initialBlock","setBlock","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","walletNft","balanceOf","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","pending","association","getBalanceAmount","decimalsToAppear","number","minPrecision","maxPrecision","Grid","GridItem","GridHeaderItem","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand1D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","tokenEarnedPerThousand365D","num","getRoi","amountEarned","amountInvested","freq","getUserPointIncreaseEvents","gql","user","getAchievements","pointIncreaseEvents","userPoint","campaignMeta","getAchievementTitle","getAchievementDescription","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","achievements","preferredFarm","some","CACHE_KEY","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","stringify","dark","light","ToastsContext","ToastsProvider","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","toastTypes","DANGER","toastInfo","INFO","SUCCESS","toastWarning","WARNING","useTabVisibility","tabVisibleRef","onVisibilityChange","hidden","addEventListener","removeEventListener","RefreshContextProvider","setSlow","setFast","interval","BIG_NINE","defaultOptions","hydrate","identity","dehydrate","initialValue","userOptions","valueFromLS","setValue","includeArchive","web3","farmToFetch","getBlockNumber","blockNumber","useFarms","useSelector","useFarmFromPid","f","useFarmUser","useBusdPriceFromPid","useLpTokenPrice","farmTokenPriceInUsd","lpTokenPrice","overallValueOfAllTokensInFarm","totalLpTokens","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","fetchPoolsUserDataAsync","fetchCakeVaultPublicData","fetchCakeVaultFees","cakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","totalCakeInVaultAsString","estimatedCakeBountyRewardAsString","totalPendingCakeHarvestAsString","userSharesAsString","cakeAtLastUserActionAsString","hasProfile","useTeam","useTeams","useFetchAchievements","useAchievements","usePriceBnbBusd","cakeBnbFarm","useInitialBlock","useIsHistoryPaneOpen","predictions","isHistoryPaneOpen","useIsChartPaneOpen","isChartPaneOpen","useGetRounds","rounds","useGetSortedRounds","roundData","useGetCurrentEpoch","currentEpoch","useGetIntervalBlocks","intervalBlocks","useGetTotalIntervalBlocks","bufferBlocks","useGetPredictionsStatus","status","useGetHistoryFilter","historyFilter","useGetCurrentRoundBlockNumber","currentRoundStartBlockNumber","useGetMinBetAmount","minBetAmount","useGetIsFetchingHistory","isFetchingHistory","useGetHistoryByAccount","bets","useGetBetByRoundId","roundId","useBetCanClaim","bet","getCanClaim","useGetLastOraclePrice","lastOraclePrice","useGetCollectibles","collectibles","identifiers","tokenIds","nftsInWallet","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_ADD_LIQUIDITY_URL","LOTTERY_MAX_NUMBER_OF_TICKETS","LOTTERY_TICKET_PRICE","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_PRICE","TESTNET_CHAIN_ID","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","ifoCampaignAddresses","pointCenterContract","getPointCenterIfoContract","checkClaimStatuses","claimStatuses","claimStatus","claimableIfoData","claimableIfoDataItem","ifoCampaign","Latinise","latin_map","τ","Τ","x","PredictionStatus","INITIAL","HistoryFilter","ALL","fetchBet","getBet","transformBetResponse","fetchRoundBet","getBetHistory","round","betResponses","betResponse","fetchCurrentBets","roundIds","round_in","fetchHistory","claimed","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","initialize","updateMarketData","market","newRoundData","makeRoundData","incomingCurrentRound","maxBy","epoch","newestRound","futureRound","transformRoundResponse","makeFutureRoundResponse","startBlock","paused","PAUSED","LIVE","setCurrentEpoch","markBetAsCollected","accountBets","markPositionAsEntered","setLastOraclePrice","betData","currentBet","rejected","setStateLastUpdated","previousLastUpdated","usePreviousValue","previousValue","start","end","duration","separator","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","seconds","delta","abs","timeLeft","years","months","GAS_SETTINGS","default","reallyfast","getDefaultSettings","gasPrice","getStorageKey","getSettings","settingsFromLs","getContract","abi","amountInGwei","_web3","web3NoAccount","Contract","getBep20Contract","bep20Abi","erc721Abi","getLpContract","lpTokenAbi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","poolsConfig","sousChefBnb","sousChef","getSouschefV2Contract","sousChefV2","pointCenterIfo","getCakeContract","cakeAbi","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryContract","lotteryAbi","getLotteryTicketContract","lotteryTicketAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getPoolApr","rewardTokenPrice","tokenPerBlock","totalRewardPricePerYear","totalStakingTokenInPool","isNaN","isFinite","getFarmApr","poolLiquidityUsd","DropDownHeader","shadows","inset","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","boxShadow","DropDownList","ul","ListItem","li","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","containerSize","setContainerSize","toggling","offsetWidth","offsetHeight","selectedIndex","handleUnstake","unstake","sousEmergencyUnstake","sousUnstake","updateUserPendingReward","useUnstake","useHarvest","farmPid","handleHarvest","soushHarvestBnb","soushHarvest","createBrowserHistory","useIfoV1Contract","useWeb3","useIfoV2Contract","useERC721","useBunnyFactory","useLotteryTicket","usePointCenterIfoContract","useBunnySpecialContract","useClaimRefundContract","useTradingCompetitionContract","useEasterNftContract","usePredictionsContract","useChainlinkOracleContract","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","cakeAsDisplayBalance","amountInShares","sharesAsNumberBalance","sharesAsDisplayBalance","isHighValueToken","autoCakeProfit","autoUsdProfit","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","setTimeout","clearTimeout","Outer","bubblegum","Inner","configureStore","devTools","reducer","achievementsReducer","blockReducer","farmsReducer","poolsReducer","predictionsReducer","profileReducer","teamsReducer","collectiblesReducer","useDispatch","StyledInput","Input","InputWrapper","onChangeCallback","setToggled","searchText","setSearchText","debouncedOnChange","debounce","onBlur","library","refEth","Web3","setweb3","multi","MultiCallAbi","itf","Interface","calldata","encodeFunctionData","aggregate","returnData","res","decodeFunctionResult","multicallv2","tryAggregate","requireSuccess","RPC_URL","getRpcUrl","httpProvider","providers","HttpProvider","timeout","getWeb3WithArchivedNodeProvider","archivedHttpProvider","enterStaking","leaveStaking","emergencyWithdraw","Token","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","stakingLimits","bnbPools","nonMasterPools","masterChefABI","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingCake","fetchPublicVaultData","getPricePerFullShare","calculateHarvestCakeRewards","calculateTotalPendingCakeRewards","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","withdrawFee","withdrawFeePeriod","fetchVaultUser","userContractResponse","getState","blockLimits","totalStakings","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","earningTokenAddress","setPoolsPublicData","stakingLimitData","stakingTokenBalances","setPoolsUserData","updatePoolsUserData","field","publicVaultInfo","vaultFees","PoolsSlice","livePoolsData","livePoolData","userPoolData","CORE","COMMUNITY","toastContext","BetPosition","Result","numberOrNull","valueNum","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalBets","totalAmount","bearBets","bullBets","bearAmount","bullAmount","position","hash","BULL","BEAR","claimedHash","totalBNB","roundResponse","positionResponse","getRoundResult","CANCELED","roundResultPosition","WIN","LOSE","getUnclaimedWinningBets","getStaticPredictionsData","isPaused","getMarketData","marketResponse","where","first","skip","betId","PoolIds","StyledThemeContext","isCommunity","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount"],"mappings":"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CACEj4B,GAAI,YACJspB,KAAM,MACNvgB,MAAO,SACPkvB,MAAO,kBAET,CACEj4B,GAAI,YACJspB,KAAM,MACNvgB,MAAO,QACPkvB,MAAO,eAET,CACEj4B,GAAI,YACJspB,KAAM,MACNvgB,MAAO,QACPkvB,MAAO,iBAET,CACEj4B,GAAI,YACJspB,KAAM,MACNvgB,MAAO,QACPkvB,MAAO,eAET,CACEj4B,GAAI,YACJspB,KAAM,aACNvgB,MAAO,wBACPkvB,MAAO,4BAET,CACEj4B,GAAI,YACJspB,KAAM,aACNvgB,MAAO,uBACPkvB,MAAO,2BAET,CACEj4B,GAAI,YACJspB,KAAM,aACNvgB,MAAO,uBACPkvB,MAAO,2BAET,CACEj4B,GAAI,YACJspB,KAAM,aACNvgB,MAAO,uBACPkvB,MAAO,2BAET,CACEj4B,GAAI,YACJspB,KAAM,aACNvgB,MAAO,2BACPkvB,MAAO,+BAET,CACEj4B,GAAI,YACJspB,KAAM,aACNvgB,MAAO,0BACPkvB,MAAO,8BAET,CACEj4B,GAAI,YACJspB,KAAM,aACNvgB,MAAO,yBACPkvB,MAAO,6BAET,CACEj4B,GAAI,YACJspB,KAAM,aACNvgB,MAAO,yBACPkvB,MAAO,6BAET,CACEj4B,GAAI,YACJspB,KAAM,aACNvgB,MAAO,yBACPkvB,MAAO,6BAET,CACEj4B,GAAI,YACJspB,KAAM,aACNvgB,MAAO,6BACPkvB,MAAO,iCAET,CACEj4B,GAAI,YACJspB,KAAM,aACNvgB,MAAO,0BACPkvB,MAAO,8BAET,CACEj4B,GAAI,YACJspB,KAAM,aACNvgB,MAAO,yBACPkvB,MAAO,6BAET,CACEj4B,GAAI,YACJspB,KAAM,aACNvgB,MAAO,yBACPkvB,MAAO,6BAET,CACEj4B,GAAI,YACJspB,KAAM,aACNvgB,MAAO,yBACPkvB,MAAO,6BAET,CACEj4B,GAAI,YACJspB,KAAM,aACNvgB,MAAO,6BACPkvB,MAAO,kCAQEC,EAAc,IAAIhD,IAE/B8C,EAAUhH,SAAQ,SAACmH,GACjBD,EAAY/+B,IAAIg/B,EAASn4B,GAAIm4B,O,iCCj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","file":"static/js/main.10c6a158.chunk.js","sourcesContent":["const tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'CAKE',\n    address: {\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1ffd0b47127fdd4097e54521c9e2c7f0d66aafc5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xc9849e6fdb743d08faee3e34dd2d1bc69ea11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xac51066d7bec65dc4589368da368b212745d63e8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211ffbe424b90e25a15531ca322adf1559779e45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8cd6e29d3686d24d3c2018cee54621ea0f89313b',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519ea49c997f50ceffa444d240fb655e89248aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764d4f0fa5e64729f5a6c3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cb485212f996a9dbb85a9a75d898f94d38da6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670b735ed92734f5628692f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xeca41281c24451168a37211f0bc2b8645af45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7a9f28eb62c791422aa23ceae1da9c847cbec9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26a5dfab467d4f58fb266648cae769503cec9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87f74415190425ccd873048c708f8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678e42cebeb63f23197d726b29b1cb20d0064e5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92d7756c60dcfd4c689290e8a9f4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xf35262a9d427f96d2437379ef090db986eae5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3cb086f8a16f34bee3ca72fad36f7db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71de20e0c4616e7fcbfdd3f875d568492cbe4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859bf77cbe8699013d6dbc7c2b926aaf307f830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474a89358b2c2265883df993b12f0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64c582698b8572aaf765bdc426ac3aefb6b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xd41fdb03ba84762dd66a0af1a6c8540ff1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45a1dcce3d36d080f74d1aed37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490ab09a0f526cc7305822ac65f2ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xc7d8d35eba58a0935ff2d5a33df105dd9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9fb8ddeabbfeae36a813ffb2a702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbf7c81fff98bbe61b40ed186e4afd6ddd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541e619858737031a1244a5d0cd47e5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55dab735aa8260af3cedada18b5f70c72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086a075b3130bac19e4c6dee1d2e3fe8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650b139471520656b9e7aa7a5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5ac52ee5b2a633895292ff6d8a89bb9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdff8cb622790b7f92686c722b02cab55592f152c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72faa679e1008ad8382959ff48e392042a8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80d5f92c2c8c682070c95495313ddb680b267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25e9d05365c867e59c1904e7463af9f312296f9e',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05e45ad22150677a017fbd94b84fbb63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xf21768ccbc73ea5b6fd3c687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91a0713155003fc4dce0afa871b508b3b715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xc40c9a843e1c6d01b7578284a9028854f6683b1b',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xbc5609612b7c44bef426de600b5fd1379db2ecf1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4bd17003473389a42daf6a0a729f6fdb328bbbd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870a18b6e42b01ef1ad8a2302ef50b7132054f',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728c5bac3c3e370e372fc4671f9ef6916b814d8b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4b0f1812e5df2a09796481ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037f6f6be66832de4e7516be52826bc3cbcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xe64f5cb844946c1f102bd25bbd87a5ab4ae89fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0da6ed8b13214ff28e9ca979dd37439e8a88f6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xa1303e6199b319a891b79685f0537d289af1fc83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbfa0841f7a90c4ce6643f651756ee340991f99d5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xa8c2b8eec3d368c0253ad3dae65a5f2bbb89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2b726b1145a4773f68593cf171187d8ebe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47bead2563dcbf3bf2c9407fea4dc236faba485a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbe53436df28ff0aee54275c13b40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950bcc74888a40ffa2593c5798f11fc9124c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52ce071bd9b1c4b00a0b92d298c512478cad67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n      97: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xca3f508b8e4dd382ee878a314789373d80a5190a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xb2bd0749dbe21f623d9baba856d3b0f0e1bfec9c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378e573c6be1ac2f97fcdf00515d0aa91b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665cbb7b2485a8855a139b75d5e34ab0db94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xad6caeb32cd2c308980a548bd0bc5aa4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fb708fc5732dec1afc8d8556423a2edccbd6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x55d398326f99059ff775485246999027b3197955',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0eb3a705fc54725037cc9e008bdede697f62f335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x7f70642d88cf1c4a3a7abb072b53b929b653eda5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x16939ef78684453bfdfb47825f8a5f714f12623a',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8ff795a6f4d97e7887c79bea79aba5cc76444adf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'http://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1a5ae2a3bf98aeaf342d26b30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xbf5140a22578168fd562dccf235e5d43a02ce9b1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xae9269f27437f0fcbc232d39ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986d5c77c65e5801a5caa4fae80089f870a71da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1f7216fdb338247512ec99715587bb97bbf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173f350d916358af3e218bdf2178494beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacb0ab6fb34d24e8a67bfa14bf4d95d4c7af92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5b6dcf557e2abe2323c48445e8cc948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xed28a457a5a76596ac48d87c0f577020f6ea1c4c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857b222fc79e1cbbf8ca5f78cb133d1b7cf34bbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39f0edda668c58371e519af37ca705f2bfcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86abcb37c3a4b64f74f59301aff131a1becc787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684adaf3fcfe9cfb5cede3abf02f0cdd1012e3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3fda9383a84c05ec8f7630fe10adf1fac13241cc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42f6f551ae042cbe50c739158b4f0cac0edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7c17c8bed8d14bacce824d020f994f4880d6ab3b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xcd40f2670cf58720b694968698a5514e924f742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xe1d1f66215998786110ba0102ef558b22224c016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8c3e16576d9bd68766f3836d9a33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebc94a44727b3f3531c0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04c747b40be4d535fc83d09939fb0f626f32800b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6f769e65c14ebd1f68817f5f1dcdb61cfa2d6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xa7f552078dcc247c2684336020c03648500c6d9f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xc13b7a43223bb9bf4b69bd68ab20ca1b79d81c75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227e22102fe3322098e4cbfe18cfebd57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0f9e4d49f25de22c2202af916b681fbb3790497b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5e6689c9c8b02be7c49912ef19e79cf24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xc0eff7749b125444953ef89682201fb8c6a917cd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4cfbbdfbd5bf0814472ff35c72717bd095ada055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159e9b0ac6c80e824f7eea748a32a0ae2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1d1eb8e8293222e1a29d2c0e4ce6c0acfd89aaac',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5a3f4a8008c4ccdd1b942b121c8b1944f1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cd1075682b0fccaadd0ca629e138e64015ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8f0528ce5ef7b51152a59745befdd91d97091d2f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fcb2f3dbee7df45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857e191354dbea0b714d78bc59e57c411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595f9da7b868b1822194faed312235e43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85eac5ac2f758618dfa09bdbe0cf174e7d574d5b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaef0d72a118ce24fee3cd1d43d383897d05b4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8d46ec87a3af86a1db6c189afa6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xf218184af829cf2b0019f8e6f0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xba2ae424d960c26247dd6c32edc70b295c744c43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aae4580057187923aec331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04baf95fd4c52fd09a56d840baee0ab8d7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09fbc8dcd557b5c88cea6946a8b404a',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xbbeb90cfb6fafa1f69aa130b7341089abeef5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396bfc8a2f84748701167c2d622f041a1d7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3a21356793b49154fd3bbe91cbc2a16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810ee35443639348adbbc467b33310d2ab43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32eb035b786898c00bb1c64d8c6f8e7a46d5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xabae871b7e3b67aeec6b46ae9fe1a91660aadac5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6cd57764fa743756f7a6ce3358cc83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5f84ce30dc3cf7909101c69086c50de191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016e85a25aeb13065688cafb43044c2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xbd2949f67dcdc549c6ebe98696449fa79d988a9f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xdae6c2a48bfaa66b43815c5548b10800919c993e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xa1434f1fc3f437fa33f7a781e041961c0205b5da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9f882567a62a5560d147d64871776eea72df41d3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xa2120b9e674d3fc3875f415a7df52e382f141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  'ampl-bsc-mp': {\n    symbol: 'AMPL-BSC-mp',\n    address: {\n      56: '0xdb021b1b247fe2f1fa57e0a87c748cc1e321f07f',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n}\n\nexport default tokens\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.methods.hasRegistered(address).call()) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.methods.getUserProfile(address).call()\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: t('Trade'),\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: t('Exchange'),\n        href: 'https://exchange.pancakeswap.finance/#/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: 'https://exchange.pancakeswap.finance/#/pool',\n      },\n      {\n        label: t('LP Migration'),\n        href: 'https://v1exchange.pancakeswap.finance/#/migrate',\n      },\n      {\n        label: t('V1 Liquidity (Old)'),\n        href: 'https://v1exchange.pancakeswap.finance/#/pool',\n      },\n    ],\n  },\n  {\n    label: t('Farms'),\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: t('Pools'),\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  {\n    label: t('Prediction (BETA)'),\n    icon: 'PredictionsIcon',\n    href: '/prediction',\n  },\n  {\n    label: t('Lottery'),\n    icon: 'TicketIcon',\n    href: '/lottery',\n  },\n  {\n    label: t('Collectibles'),\n    icon: 'NftIcon',\n    href: '/collectibles',\n  },\n  {\n    label: t('Team Battle'),\n    icon: 'TeamBattleIcon',\n    href: '/competition',\n  },\n  {\n    label: t('Teams & Profile'),\n    icon: 'GroupsIcon',\n    items: [\n      {\n        label: t('Leaderboard'),\n        href: '/teams',\n      },\n      {\n        label: t('Task Center'),\n        href: '/profile/tasks',\n      },\n      {\n        label: t('Your Profile'),\n        href: '/profile',\n      },\n    ],\n  },\n  {\n    label: t('Info'),\n    icon: 'InfoIcon',\n    items: [\n      {\n        label: t('Overview'),\n        href: 'https://pancakeswap.info',\n      },\n      {\n        label: t('Tokens'),\n        href: 'https://pancakeswap.info/tokens',\n      },\n      {\n        label: t('Pairs'),\n        href: 'https://pancakeswap.info/pairs',\n      },\n      {\n        label: t('Accounts'),\n        href: 'https://pancakeswap.info/accounts',\n      },\n    ],\n  },\n  {\n    label: t('IFO'),\n    icon: 'IfoIcon',\n    href: '/ifo',\n  },\n  {\n    label: t('More'),\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: t('Contact'),\n        href: 'https://docs.pancakeswap.finance/contact-us',\n      },\n      {\n        label: t('Voting'),\n        href: 'https://voting.pancakeswap.finance',\n      },\n      {\n        label: t('Github'),\n        href: 'https://github.com/pancakeswap',\n      },\n      {\n        label: t('Docs'),\n        href: 'https://docs.pancakeswap.finance',\n      },\n      {\n        label: t('Blog'),\n        href: 'https://pancakeswap.medium.com',\n      },\n      {\n        label: t('Merch'),\n        href: 'https://pancakeswap.creator-spring.com/',\n      },\n    ],\n  },\n]\n\nexport default config\n","import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useAuth from 'hooks/useAuth'\nimport { usePriceCakeBusd, useProfile } from 'state/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { getAprData } from 'views/Pools/helpers'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink =\n    stakingToken.address &&\n    `${BASE_EXCHANGE_URL}/#/swap?outputCurrency=${stakingToken.address[process.env.REACT_APP_CHAIN_ID]}`\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink || BASE_EXCHANGE_URL}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n          <IconButton onClick={onPresentApyModal} variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled, { css, keyframes } from 'styled-components'\nimport { Card, Box } from '@pancakeswap/uikit'\n\nconst PromotedGradient = keyframes`\n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\ninterface PromotedStyleCardProps {\n  isDesktop: boolean\n}\n\nexport const StyledCard = styled(Card)<{ isPromoted?: PromotedStyleCardProps; isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\n\n  ${({ isPromoted, theme }) =>\n    isPromoted\n      ? css`\n          background: linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary});\n          padding: 1px 1px 3px 1px;\n          background-size: 400% 400%;\n        `\n      : `background: ${(props) => props.theme.card.background};`}\n\n  ${({ isPromoted }) =>\n    isPromoted &&\n    isPromoted.isDesktop &&\n    css`\n      animation: ${PromotedGradient} 3s ease infinite;\n    `}\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport const StyledCardInner = styled(Box)`\n  background: ${({ theme }) => theme.card.background};\n  border-radius: ${({ theme }) => theme.radii.card};\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { useBlock, useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const { stakingToken, earningToken, totalStaked, contractAddress, sousId, isAutoVault } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const imageSrc = `${BASE_URL}/images/tokens/${earningToken.symbol.toLowerCase()}.png`\n  const isMetaMaskInScope = !!(window as WindowChain).ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked ? (\n            <>\n              <Balance fontSize=\"14px\" value={getTotalStakedBalance()} />\n              <Text ml=\"4px\" fontSize=\"14px\">\n                {stakingToken.symbol}\n              </Text>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n        </Flex>\n      </Flex>\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('End') : t('Start')}:</Text>\n          <Flex alignItems=\"center\">\n            {blocksRemaining || blocksUntilStart ? (\n              <Balance color=\"primary\" fontSize=\"14px\" value={blocksToDisplay} decimals={0} />\n            ) : (\n              <Skeleton width=\"54px\" height=\"21px\" />\n            )}\n            <Text ml=\"4px\" color=\"primary\" small textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Flex>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal bold={false} small href={earningToken.projectLink}>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            bold={false}\n            small\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningTokenSymbol, stakingTokenSymbol, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `cake-cakevault.svg`\n    : `${earningTokenSymbol}-${stakingTokenSymbol}.svg`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        <Image src={`/images/pools/${poolImageSrc}`} alt={earningTokenSymbol} width={64} height={64} />\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useSousApprove } from 'hooks/useApprove'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useSousApprove(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href={BASE_EXCHANGE_URL}>\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport PercentageButton from './PercentageButton'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.symbol}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href={BASE_EXCHANGE_URL}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport { useSousStake } from 'hooks/useStake'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: string\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake CAKE into pool.')}</Text>\n      <Text>{t('Harvest: collect CAKE and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          <Text fontSize=\"12px\" color=\"textSubtle\">{`~${earningsDollarValue || 0} USD`}</Text>\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const earningsDollarValue = formatNumber(earningTokenDollarBalance)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningsDollarValue}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex flexDirection=\"column\" mb=\"16px\">\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          {isLoading ? (\n            <Skeleton width=\"80px\" height=\"48px\" />\n          ) : (\n            <>\n              {hasEarnings ? (\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n              ) : (\n                <Heading color=\"textDisabled\">0</Heading>\n              )}\n              {earningTokenPrice !== 0 && (\n                <Text fontSize=\"12px\" color={hasEarnings ? 'textSubtle' : 'textDisabled'}>\n                  ~\n                  {hasEarnings ? (\n                    <Balance\n                      display=\"inline\"\n                      fontSize=\"12px\"\n                      color=\"textSubtle\"\n                      decimals={2}\n                      value={earningTokenDollarBalance}\n                      unit=\" USD\"\n                    />\n                  ) : (\n                    '0 USD'\n                  )}\n                </Text>\n              )}\n            </>\n          )}\n        </Flex>\n        <Flex>\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard, StyledCardInner } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardInner>\n        <StyledCardHeader\n          isStaking={accountHasStakedBalance}\n          earningTokenSymbol={earningToken.symbol}\n          stakingTokenSymbol={stakingToken.symbol}\n          isFinished={isFinished && sousId !== 0}\n        />\n        <CardBody>\n          <AprRow pool={pool} />\n          <Flex mt=\"24px\" flexDirection=\"column\">\n            {account ? (\n              <CardActions pool={pool} stakedBalance={stakedBalance} />\n            ) : (\n              <>\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                  {t('Start earning')}\n                </Text>\n                <UnlockButton />\n              </>\n            )}\n          </Flex>\n        </CardBody>\n        <CardFooter pool={pool} account={account} />\n      </StyledCardInner>\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from 'hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'hooks/cakeVault/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'hooks/cakeVault/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked =\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      cakeVaultContract.methods\n        .withdrawAll()\n        .send({ from: account })\n        .on('sending', () => {\n          setPendingTx(true)\n        })\n        .on('receipt', () => {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        })\n        .on('error', (error) => {\n          console.error(error)\n          // Remove message from toast before prod\n          toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n          setPendingTx(false)\n        })\n    } else {\n      cakeVaultContract.methods\n        .withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString())\n        // .toString() being called to fix a BigNumber error in prod\n        // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n        .send({ from: account })\n        .on('sending', () => {\n          setPendingTx(true)\n        })\n        .on('receipt', () => {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        })\n        .on('error', (error) => {\n          console.error(error)\n          // Remove message from toast before prod\n          toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n          setPendingTx(false)\n        })\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    cakeVaultContract.methods\n      .deposit(convertedStakeAmount.toString())\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      .send({ from: account })\n      .on('sending', () => {\n        setPendingTx(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      })\n      .on('error', (error) => {\n        console.error(error)\n        // Remove message from toast before prod\n        toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n        setPendingTx(false)\n      })\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    setPendingTx(true)\n    // unstaking\n    if (isRemovingStake) {\n      handleWithdrawal(convertedStakeAmount)\n      // staking\n    } else {\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.symbol}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href={BASE_EXCHANGE_URL} variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCheckVaultApprovalStatus } from 'hooks/useApprove'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent CAKE profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport UnlockButton from 'components/UnlockButton'\nimport { useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard, StyledCardInner } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { isXl } = useMatchBreakpoints()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isPromoted={{ isDesktop: isXl }}>\n      <StyledCardInner>\n        <StyledCardHeader\n          isStaking={accountHasSharesStaked}\n          isAutoVault\n          earningTokenSymbol=\"CAKE\"\n          stakingTokenSymbol=\"CAKE\"\n        />\n        <StyledCardBody isLoading={isLoading}>\n          <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\n          <Box mt=\"24px\">\n            <RecentCakeProfitRow />\n          </Box>\n          <Box mt=\"8px\">\n            <UnstakingFeeCountdownRow />\n          </Box>\n          <Flex mt=\"32px\" flexDirection=\"column\">\n            {account ? (\n              <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n            ) : (\n              <>\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                  {t('Start earning')}\n                </Text>\n                <UnlockButton />\n              </>\n            )}\n          </Flex>\n        </StyledCardBody>\n        <CardFooter pool={pool} account={account} />\n      </StyledCardInner>\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  Toggle,\n  Text,\n  Flex,\n  NotificationDot,\n  useMatchBreakpoints,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n      <ButtonMenuItem as={Link} to={`${url}`}>\n        {t('Live')}\n      </ButtonMenuItem>\n      <NotificationDot show={hasStakeInFinishedPools}>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {t('Finished')}\n        </ButtonMenuItem>\n      </NotificationDot>\n    </ButtonMenu>\n  )\n\n  const stakedOnlySwitch = (\n    <Flex mt={['4px', null, 0, null]} ml={[0, null, '24px', null]} justifyContent=\"center\" alignItems=\"center\">\n      <Toggle scale=\"sm\" checked={stakedOnly} onChange={() => setStakedOnly((prev) => !prev)} />\n      <Text ml={['4px', '4px', '8px']}>{t('Staked only')}</Text>\n    </Flex>\n  )\n\n  if (isXs || isSm) {\n    return (\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\" mb=\"24px\">\n        <Flex width=\"100%\" justifyContent=\"space-between\">\n          {viewModeToggle}\n          {liveOrFinishedSwitch}\n        </Flex>\n        {stakedOnlySwitch}\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex\n      alignItems=\"center\"\n      justifyContent={['space-around', 'space-around', 'flex-start']}\n      mb={['24px', '24px', '24px', '0px']}\n    >\n      {viewModeToggle}\n      {liveOrFinishedSwitch}\n      {stakedOnlySwitch}\n    </Flex>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { DEFAULT_GAS_LIMIT } from 'config'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport UnlockButton from 'components/UnlockButton'\nimport Balance from 'components/Balance'\n\ninterface BountyModalProps {\n  cakeBountyToDisplay: number\n  dollarBountyToDisplay: number\n  totalPendingCakeHarvest: BigNumber\n  callFee: number\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({\n  cakeBountyToDisplay,\n  dollarBountyToDisplay,\n  totalPendingCakeHarvest,\n  callFee,\n  onDismiss,\n  TooltipComponent,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    cakeVaultContract.methods\n      .harvest()\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n      .on('sending', () => {\n        setPendingTx(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(t('Bounty collected!'), t('CAKE bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      })\n      .on('error', (error) => {\n        console.error(error)\n        toastError(\n          t('Could not be collected'),\n          t('There may be an issue with your transaction, or another user claimed the bounty first.'),\n        )\n        setPendingTx(false)\n        onDismiss()\n      })\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" CAKE\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" CAKE\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n        >\n          {t('Confirm')}\n        </Button>\n      ) : (\n        <UnlockButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = () => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto CAKE Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto CAKE pool users pending yield', { fee: callFee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(\n    <BountyModal\n      cakeBountyToDisplay={cakeBountyToDisplay}\n      dollarBountyToDisplay={dollarBountyToDisplay}\n      totalPendingCakeHarvest={totalPendingCakeHarvest}\n      callFee={callFee}\n      TooltipComponent={TooltipComponent}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto CAKE Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: block;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  margin-right: 16px;\n  display: flex;\n  justify-content: flex-end;\n\n  &:hover {\n    text-decoration: none;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1;\n  }\n`\n\nconst HelpButton = () => {\n  const { t } = useTranslation()\n  return (\n    <StyledLink external href=\"https://docs.pancakeswap.finance/syrup-pools/syrup-pool\">\n      <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n        <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n          {t('Help')}\n        </ButtonText>\n        <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n      </Button>\n    </StyledLink>\n  )\n}\n\nexport default HelpButton\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, Image, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n  const iconFile = `${earningTokenSymbol}-${stakingTokenSymbol}.svg`.toLocaleLowerCase()\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n\n  if (isAutoVault) {\n    title = t('Auto CAKE')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual CAKE')\n    subtitle = `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <Image src={`/images/pools/${iconFile}`} alt=\"icon\" width={40} height={40} mr=\"8px\" />\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const earningsDollarValue = formatNumber(earningTokenDollarBalance)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent CAKE profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningsDollarValue}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color={hasEarnings ? 'textSubtle' : 'textDisabled'}\n                    decimals={2}\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                    prefix=\"~\"\n                  />\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color={hasEarnings ? 'textSubtle' : 'textDisabled'}>\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, IconButton, Skeleton, FlexProps } from '@pancakeswap/uikit'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink =\n    stakingToken.address &&\n    `${BASE_EXCHANGE_URL}/#/swap?outputCurrency=${stakingToken.address[process.env.REACT_APP_CHAIN_ID]}`\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink || BASE_EXCHANGE_URL}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Flex>\n            <Balance\n              onClick={openRoiModal}\n              fontSize=\"16px\"\n              isDisabled={isFinished}\n              value={isFinished ? 0 : earningsPercentageToDisplay}\n              decimals={2}\n              unit=\"%\"\n            />\n          </Flex>\n          {!isFinished && showIcon && (\n            <Flex>\n              <IconButton\n                onClick={openRoiModal}\n                variant=\"text\"\n                width=\"20px\"\n                height=\"20px\"\n                mr={['-14px', '-14px', '0px']}\n              >\n                <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n              </IconButton>\n            </Flex>\n          )}\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr\n          pool={pool}\n          performanceFee={isAutoVault ? performanceFee : 0}\n          showIcon={!isXs && !isSm}\n          alignItems=\"flex-start\"\n        />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStakedBalance ? (\n          <Flex height=\"100%\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link external href={getBscScanBlockCountdownUrl(endBlock)} onClick={(e) => e.stopPropagation()}>\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const earningsDollarValue = formatNumber(earningTokenDollarBalance)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const displayBalance = hasEarnings ? earningTokenBalance : 0\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningsDollarValue}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent CAKE profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Balance pt=\"8px\" lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={0} />\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={displayBalance} />\n          {hasEarnings ? (\n            <Balance\n              display=\"inline\"\n              fontSize=\"12px\"\n              color={hasEarnings ? 'textSubtle' : 'textDisabled'}\n              decimals={2}\n              value={earningTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          ) : (\n            <Text fontSize=\"12px\" color={hasEarnings ? 'textSubtle' : 'textDisabled'}>\n              0 USD\n            </Text>\n          )}\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCheckVaultApprovalStatus, useSousApprove, useVaultApprove } from 'hooks/useApprove'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useSousApprove(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <UnlockButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_URL } from 'config'\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\nimport { useBlock, useCakeVault } from 'state/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const { sousId, stakingToken, earningToken, totalStaked, endBlock, stakingLimit, isAutoVault } = pool\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!(window as WindowChain).ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const imageSrc = `${BASE_URL}/images/tokens/${earningToken.symbol.toLowerCase()}.png`\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n        <Flex>\n          <Link external href={getBscScanBlockCountdownUrl(endBlock)}>\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Link>\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false}>\n            {t('Info site')}\n          </LinkExternal>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('Project site')}\n          </LinkExternal>\n        </Flex>\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { usePools, useFetchCakeVault, useFetchPublicPoolsData, usePollFarmsData, useCakeVault } from 'state/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled(Flex)`\n  flex-direction: column;\n  margin-bottom: 24px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n\nconst SearchSortContainer = styled(Flex)`\n  gap: 10px;\n  justify-content: space-between;\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_farm_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE)\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  const poolsToShow = () => {\n    let chosenPools = []\n    if (showFinishedPools) {\n      chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n    } else {\n      chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n    }\n\n    if (searchQuery) {\n      const lowercaseQuery = latinise(searchQuery.toLowerCase())\n      chosenPools = chosenPools.filter((pool) =>\n        latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n      )\n    }\n\n    return sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  }\n\n  const cardLayout = (\n    <CardLayout>\n      {poolsToShow().map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={poolsToShow()} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Syrup Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <HelpButton />\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls justifyContent=\"space-between\">\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <SearchSortContainer>\n            <Flex flexDirection=\"column\" width=\"50%\">\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </Flex>\n            <Flex flexDirection=\"column\" width=\"50%\">\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <ControlStretch>\n                <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n              </ControlStretch>\n            </Flex>\n          </SearchSortContainer>\n        </PoolControls>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={loadMoreRef} />\n        <Image\n          mx=\"auto\"\n          mt=\"12px\"\n          src=\"/images/3d-syrup-bunnies.png\"\n          alt=\"Pancake illustration\"\n          width={192}\n          height={184.5}\n        />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollCoreFarmData, useFetchProfile, usePollBlockNumber } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport ToastListener from './components/ToastListener'\nimport PageLoader from './components/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport Pools from './views/Pools'\nimport history from './routerHistory'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route path=\"/prediction\">\n              <Predictions />\n            </Route>\n            {/* Redirect */}\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { getLibrary } from 'utils/web3React'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeContextProvider>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeContextProvider>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { useMasterchef, useCake, useSousChef, useLottery, useCakeVaultContract } from './useContract'\nimport useToast from './useToast'\nimport useLastUpdated from './useLastUpdated'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      if (tx) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), e?.message)\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = () => {\n    cakeContract.methods\n      .approve(cakeVaultContract.options.address, ethers.constants.MaxUint256)\n      .send({ from: account })\n      .on('sending', () => {\n        setRequestedApproval(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\n        setLastUpdated()\n        setRequestedApproval(false)\n      })\n      .on('error', (error) => {\n        console.error(error)\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      })\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.methods.allowance(account, cakeVaultContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWeb3React()\n  const onApprove = useCallback(async () => {\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\n    return tx\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://gateway.pinata.cloud'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import { getWeb3NoAccount } from './web3'\n\n/**\n * Accepts an array of contract method calls and batches them\n *\n * Example:\n *\n * [\n *  contract.method.balanceOf().call,\n *  contract.method.startBlockNumber().call\n * ]\n */\nconst makeBatchRequest = (calls: any[]) => {\n  try {\n    const web3 = getWeb3NoAccount()\n    const batch = new web3.BatchRequest()\n\n    const promises = calls.map((call) => {\n      return new Promise((resolve, reject) => {\n        batch.add(\n          call.request({}, (err, result) => {\n            if (err) {\n              reject(err)\n            } else {\n              resolve(result)\n            }\n          }),\n        )\n      })\n    })\n\n    batch.execute()\n\n    return Promise.all(promises)\n  } catch {\n    return null\n  }\n}\n\nexport default makeBatchRequest\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const ARCHIVED_NODE = process.env.REACT_APP_ARCHIVED_NODE\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst UnlockButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 252)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon, RefreshIcon, AutoRenewIcon, TagProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst BinanceTag: React.FC<TagProps> = (props) => {\n  return (\n    <Tag variant=\"binance\" outline startIcon={<BinanceIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      Binance\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, BinanceTag, DualTag, ManualPoolTag, CompoundingPoolTag }\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = (window as WindowChain).ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress: string,\n  tokenSymbol: string,\n  tokenDecimals: number,\n  tokenImage: string,\n) => {\n  const tokenAdded = await (window as WindowChain).ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: tokenImage,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport Web3 from 'web3'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): Web3 => {\n  return provider\n}\n","export { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { TeamsById, TeamResponse } from 'state/types'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const {\n      0: teamName,\n      2: numberUsers,\n      3: numberPoints,\n      4: isJoinable,\n    } = await profileContract.methods.getTeamProfile(teamId).call()\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers,\n      points: numberPoints,\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.methods.numberTeams().call()\n    const calls = []\n\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push(profileContract.methods.getTeamProfile(i).call)\n    }\n\n    const teamData = (await makeBatchRequest(calls)) as TeamResponse[]\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: Number(numberUsers),\n          points: Number(numberPoints),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { BASE_BSC_SCAN_URL } from 'config'\n\nexport const getBscScanAddressUrl = (address: string) => {\n  return `${BASE_BSC_SCAN_URL}/address/${address}`\n}\n\nexport const getBscScanTransactionUrl = (transactionHash: string) => {\n  return `${BASE_BSC_SCAN_URL}/tx/${transactionHash}`\n}\n\nexport const getBscScanBlockNumberUrl = (block: string | number) => {\n  return `${BASE_BSC_SCAN_URL}/block/${block}`\n}\n\nexport const getBscScanBlockCountdownUrl = (block: string | number) => {\n  return `${BASE_BSC_SCAN_URL}/block/countdown/${block}`\n}\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'PancakeSwap',\n  description:\n    'The most popular AMM on BSC by user count! Earn CAKE through yield farming or win it in the Lottery, then stake it in Syrup Pools to earn more tokens! Initial Farm Offerings (new token launch model pioneered by PancakeSwap), NFTs, and more, on a platform you can trust.',\n  image: 'https://pancakeswap.finance/images/hero.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('PancakeSwap')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('PancakeSwap')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('PancakeSwap')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('PancakeSwap')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('PancakeSwap')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('PancakeSwap')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('Collectibles')} | ${t('PancakeSwap')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('PancakeSwap')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('PancakeSwap')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('Task Center')} | ${t('PancakeSwap')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('PancakeSwap')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","export default {\n  masterChef: {\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\n    56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lottery: {\n    97: '0x99c2EcD51d52c036B00130d882Bc65f20Fdecf9f',\n    56: '0x3C3f2049cc17C136a604bE23cF7E42745edf3b91',\n  },\n  lotteryNFT: {\n    97: '0x8175c10383511b3a1C68f9dB222dc14A19CC950e',\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\n  },\n  lotteryV2: {\n    97: '0x4D8B718b4e617ea49bCe6B508c23353Cc7bADd28',\n    56: '',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\n    97: '',\n  },\n  predictions: {\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\n    97: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\n  },\n  chainlinkOracle: {\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    97: '',\n  },\n}\n","import { MAINNET_CHAIN_ID } from 'config'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[MAINNET_CHAIN_ID]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryAddress = () => {\n  return getAddress(addresses.lottery)\n}\nexport const getLotteryTicketAddress = () => {\n  return getAddress(addresses.lotteryNFT)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.methods.tokenURI(tokenId).call()\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      console.info(txHash)\n    },\n    [account, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, decimals, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[1].lpSymbol,\n  address: farms[1].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenId = await contract.methods.tokenOfOwnerByIndex(account, index).call()\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [Number(tokenId), walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.methods.balanceOf(account).call()\n      const balanceOf = Number(balanceOfResponse)\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, decimalsToAppear?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(decimalsToAppear)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'CAKE',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      <Grid>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('Timeframe')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mr=\"12px\" ml=\"12px\" mb=\"12px\">\n            {t('ROI')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridHeaderItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem style={{ maxWidth: '180px' }}>\n          <Text>{t('365d(APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"center\">\n        <Box mb=\"28px\" maxWidth=\"280px\">\n          <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\">\n            {t(\n              'Calculated based on current rates. Compounding %freq%x daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n              { freq: compoundFrequency.toLocaleString() },\n            )}\n          </Text>\n          {performanceFee > 0 && (\n            <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\">\n              {t('All estimated rates take into account this pool’s %fee%% performance fee', { fee: performanceFee })}\n            </Text>\n          )}\n        </Box>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import { useEffect, useRef } from 'react'\n\nconst useTabVisibility = () => {\n  const tabVisibleRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      tabVisibleRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return { tabVisibleRef }\n}\n\nexport default useTabVisibility\n","import React, { useState, useEffect } from 'react'\nimport useTabVisibility from 'hooks/useTabVisibility'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const { tabVisibleRef } = useTabVisibility()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (tabVisibleRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [tabVisibleRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (tabVisibleRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [tabVisibleRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import BigNumber from 'bignumber.js'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { orderBy } from 'lodash'\nimport { Team } from 'config/constants/types'\nimport Nfts from 'config/constants/nfts'\nimport { farmsConfig } from 'config/constants'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useRefresh from 'hooks/useRefresh'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  setBlock,\n} from './actions'\nimport { State, Farm, Pool, ProfileState, TeamsState, AchievementState, FarmsState } from './types'\nimport { fetchProfile } from './profile'\nimport { fetchTeam, fetchTeams } from './teams'\nimport { fetchAchievements } from './achievements'\nimport { fetchWalletNfts } from './collectibles'\nimport { getCanClaim } from './predictions/helpers'\nimport { transformPool } from './pools/helpers'\nimport { fetchPoolsStakingLimitsAsync } from './pools'\nimport { fetchFarmUserDataAsync, nonArchivedFarms } from './farms'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const web3 = getWeb3NoAccount()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, web3, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n  const web3 = getWeb3NoAccount()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([251, 252]))\n  }, [dispatch, fastRefresh, web3])\n}\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n  const web3 = getWeb3NoAccount()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch, web3])\n}\n\n// Farms\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return a farm for a given token symbol. The farm is filtered based on attempting to return a farm with a quote token from an array of preferred quote tokens\nexport const useFarmFromTokenSymbol = (tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farms = useSelector((state: State) => state.farms.data.filter((farm) => farm.token.symbol === tokenSymbol))\n  const filteredFarm = filterFarmsByQuoteToken(farms, preferredQuoteTokens)\n  return filteredFarm\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useBusdPriceFromToken = (tokenSymbol: string): BigNumber => {\n  const tokenFarm = useFarmFromTokenSymbol(tokenSymbol)\n  const tokenPrice = useBusdPriceFromPid(tokenFarm?.pid)\n  return tokenPrice\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// Pools\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const web3 = getWeb3NoAccount()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh, web3])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const usePoolFromPid = (sousId: number): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return transformPool(pool)\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n\n// Profile\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\n// Teams\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\n// Achievements\n\nexport const useFetchAchievements = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(252)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(251)\n  return new BigNumber(cakeBnbFarm.token.busdPrice)\n}\n\n// Block\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n\n// Predictions\nexport const useIsHistoryPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isHistoryPaneOpen)\n}\n\nexport const useIsChartPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isChartPaneOpen)\n}\n\nexport const useGetRounds = () => {\n  return useSelector((state: State) => state.predictions.rounds)\n}\n\nexport const useGetSortedRounds = () => {\n  const roundData = useGetRounds()\n  return orderBy(Object.values(roundData), ['epoch'], ['asc'])\n}\n\nexport const useGetCurrentEpoch = () => {\n  return useSelector((state: State) => state.predictions.currentEpoch)\n}\n\nexport const useGetIntervalBlocks = () => {\n  return useSelector((state: State) => state.predictions.intervalBlocks)\n}\n\nexport const useGetBufferBlocks = () => {\n  return useSelector((state: State) => state.predictions.bufferBlocks)\n}\n\nexport const useGetTotalIntervalBlocks = () => {\n  const intervalBlocks = useGetIntervalBlocks()\n  const bufferBlocks = useGetBufferBlocks()\n  return intervalBlocks + bufferBlocks\n}\n\nexport const useGetRound = (id: string) => {\n  const rounds = useGetRounds()\n  return rounds[id]\n}\n\nexport const useGetCurrentRound = () => {\n  const currentEpoch = useGetCurrentEpoch()\n  const rounds = useGetSortedRounds()\n  return rounds.find((round) => round.epoch === currentEpoch)\n}\n\nexport const useGetPredictionsStatus = () => {\n  return useSelector((state: State) => state.predictions.status)\n}\n\nexport const useGetHistoryFilter = () => {\n  return useSelector((state: State) => state.predictions.historyFilter)\n}\n\nexport const useGetCurrentRoundBlockNumber = () => {\n  return useSelector((state: State) => state.predictions.currentRoundStartBlockNumber)\n}\n\nexport const useGetMinBetAmount = () => {\n  const minBetAmount = useSelector((state: State) => state.predictions.minBetAmount)\n  return useMemo(() => new BigNumber(minBetAmount), [minBetAmount])\n}\n\nexport const useGetIsFetchingHistory = () => {\n  return useSelector((state: State) => state.predictions.isFetchingHistory)\n}\n\nexport const useGetHistory = () => {\n  return useSelector((state: State) => state.predictions.history)\n}\n\nexport const useGetHistoryByAccount = (account: string) => {\n  const bets = useGetHistory()\n  return bets ? bets[account] : []\n}\n\nexport const useGetBetByRoundId = (account: string, roundId: string) => {\n  const bets = useSelector((state: State) => state.predictions.bets)\n\n  if (!bets[account]) {\n    return null\n  }\n\n  if (!bets[account][roundId]) {\n    return null\n  }\n\n  return bets[account][roundId]\n}\n\nexport const useBetCanClaim = (account: string, roundId: string) => {\n  const bet = useGetBetByRoundId(account, roundId)\n\n  if (!bet) {\n    return false\n  }\n\n  return getCanClaim(bet)\n}\n\nexport const useGetLastOraclePrice = (): BigNumber => {\n  const lastOraclePrice = useSelector((state: State) => state.predictions.lastOraclePrice)\n  return new BigNumber(lastOraclePrice)\n}\n\n// Collectibles\nexport const useGetCollectibles = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\n  const identifiers = Object.keys(data)\n\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletNfts(account))\n    }\n  }, [isInitialized, account, dispatch])\n\n  return {\n    isInitialized,\n    isLoading,\n    tokenIds: data,\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\n  }\n}\n","import BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 10 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeStats.tsx = 20 (40 - Amount sent to burn pool)\n\nexport const CAKE_PER_BLOCK = new BigNumber(40)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://pancakeswap.finance'\nexport const BASE_EXCHANGE_URL = 'https://exchange.pancakeswap.finance'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\nexport const BASE_BSC_SCAN_URL = 'https://bscscan.com'\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 200000\nexport const DEFAULT_GAS_PRICE = 5\nexport const TESTNET_CHAIN_ID = '97'\nexport const MAINNET_CHAIN_ID = '56'\n","import { Campaign } from 'config/constants/types'\nimport { getPointCenterIfoContract } from 'utils/contractHelpers'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport makeBatchRequest from './makeBatchRequest'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: string\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n  const ifoCampaignAddresses = ifoCampaigns.map((ifoItem) => ifoItem.address)\n  const pointCenterContract = getPointCenterIfoContract()\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatuses = (await pointCenterContract.methods\n    .checkClaimStatuses(account, ifoCampaignAddresses)\n    .call()) as boolean[]\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await makeBatchRequest(\n    claimStatuses.reduce((accum, claimStatus, index) => {\n      if (claimStatus === true) {\n        return [...accum, pointCenterContract.methods.ifos(ifoCampaignAddresses[index]).call]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(claimableIfoDataItem.numberPoints),\n      },\n    ]\n  }, [])\n}\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, HistoryFilter, Market, PredictionsState, PredictionStatus, Round } from 'state/types'\nimport {\n  makeFutureRoundResponse,\n  transformRoundResponse,\n  getBetHistory,\n  transformBetResponse,\n  getBet,\n  makeRoundData,\n} from './helpers'\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 2,\n  minBetAmount: '1000000000000000',\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  bets: {},\n}\n\n// Thunks\nexport const fetchBet = createAsyncThunk<{ account: string; bet: Bet }, { account: string; id: string }>(\n  'predictions/fetchBet',\n  async ({ account, id }) => {\n    const response = await getBet(id)\n    const bet = transformBetResponse(response)\n    return { account, bet }\n  },\n)\n\nexport const fetchRoundBet = createAsyncThunk<\n  { account: string; roundId: string; bet: Bet },\n  { account: string; roundId: string }\n>('predictions/fetchRoundBet', async ({ account, roundId }) => {\n  const betResponses = await getBetHistory({\n    user: account.toLowerCase(),\n    round: roundId,\n  })\n\n  // This should always return 0 or 1 bet because a user can only place\n  // one bet per round\n  if (betResponses && betResponses.length === 1) {\n    const [betResponse] = betResponses\n    return { account, roundId, bet: transformBetResponse(betResponse) }\n  }\n\n  return { account, roundId, bet: null }\n})\n\n/**\n * Used to poll the user bets of the current round cards\n */\nexport const fetchCurrentBets = createAsyncThunk<\n  { account: string; bets: Bet[] },\n  { account: string; roundIds: string[] }\n>('predictions/fetchCurrentBets', async ({ account, roundIds }) => {\n  const betResponses = await getBetHistory({\n    user: account.toLowerCase(),\n    round_in: roundIds,\n  })\n\n  return { account, bets: betResponses.map(transformBetResponse) }\n})\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    initialize: (state, action: PayloadAction<PredictionsState>) => {\n      return {\n        ...state,\n        ...action.payload,\n      }\n    },\n    updateMarketData: (state, action: PayloadAction<{ rounds: Round[]; market: Market }>) => {\n      const { rounds, market } = action.payload\n      const newRoundData = makeRoundData(rounds)\n      const incomingCurrentRound = maxBy(rounds, 'epoch')\n\n      if (state.currentEpoch !== incomingCurrentRound.epoch) {\n        // Add new round\n        const newestRound = maxBy(rounds, 'epoch') as Round\n        const futureRound = transformRoundResponse(\n          makeFutureRoundResponse(newestRound.epoch + 2, newestRound.startBlock + state.intervalBlocks),\n        )\n\n        newRoundData[futureRound.id] = futureRound\n      }\n\n      state.currentEpoch = incomingCurrentRound.epoch\n      state.currentRoundStartBlockNumber = incomingCurrentRound.startBlock\n      state.status = market.paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE\n      state.rounds = { ...state.rounds, ...newRoundData }\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    markBetAsCollected: (state, action: PayloadAction<{ account: string; roundId: string }>) => {\n      const { account, roundId } = action.payload\n      const accountBets = state.bets[account]\n\n      if (accountBets && accountBets[roundId]) {\n        accountBets[roundId].claimed = true\n      }\n    },\n    markPositionAsEntered: (state, action: PayloadAction<{ account: string; roundId: string; bet: Bet }>) => {\n      const { account, roundId, bet } = action.payload\n\n      state.bets = {\n        ...state.bets,\n        [account]: {\n          ...state.bets[account],\n          [roundId]: bet,\n        },\n      }\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    // Get unclaimed bets\n    builder.addCase(fetchCurrentBets.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n      const betData = bets.reduce((accum, bet) => {\n        return {\n          ...accum,\n          [bet.round.id]: bet,\n        }\n      }, {})\n\n      state.bets = merge({}, state.bets, {\n        [account]: betData,\n      })\n    })\n\n    // Get round bet\n    builder.addCase(fetchRoundBet.fulfilled, (state, action) => {\n      const { account, roundId, bet } = action.payload\n\n      if (bet) {\n        state.bets = {\n          ...state.bets,\n          [account]: {\n            ...state.bets[account],\n            [roundId]: bet,\n          },\n        }\n      }\n    })\n\n    // Update Bet\n    builder.addCase(fetchBet.fulfilled, (state, action) => {\n      const { account, bet } = action.payload\n      state.history[account] = [...state.history[account].filter((currentBet) => currentBet.id !== bet.id), bet]\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n      state.history[account] = bets\n\n      // Save any fetched bets in the \"bets\" namespace\n      const betData = bets.reduce((accum, bet) => {\n        return {\n          ...accum,\n          [bet.round.id]: bet,\n        }\n      }, {})\n\n      state.bets = merge({}, state.bets, {\n        [account]: betData,\n      })\n    })\n  },\n})\n\n// Actions\nexport const {\n  initialize,\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  updateMarketData,\n  markBetAsCollected,\n  setPredictionStatus,\n  markPositionAsEntered,\n  setLastOraclePrice,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      {prefix && <span>{prefix}</span>}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {unit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nexport default Balance\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_PRICE } from 'config'\nimport { getDecimalAmount } from './formatBalance'\n\nexport interface UserSettings {\n  gasPrice: number\n}\n\nexport const VERSION = 1.01\n\nexport const GAS_SETTINGS = {\n  default: DEFAULT_GAS_PRICE,\n  fast: 10,\n  reallyfast: 15,\n}\n\nexport const getGasPriceInWei = (amountInGwei: number) => {\n  return getDecimalAmount(new BigNumber(amountInGwei), 9)\n}\n\nexport const getDefaultSettings = (): UserSettings => ({\n  gasPrice: GAS_SETTINGS.default,\n})\n\nexport const getStorageKey = (account: string) => {\n  return `pancakeswap_settings_${account}_${VERSION}`\n}\n\nexport const getSettings = (account: string): UserSettings => {\n  try {\n    const settingsFromLs = localStorage.getItem(getStorageKey(account))\n    return settingsFromLs ? JSON.parse(settingsFromLs) : getDefaultSettings()\n  } catch (error) {\n    return getDefaultSettings()\n  }\n}\n\nexport const setSettings = (account: string, newSettings: UserSettings) => {\n  localStorage.setItem(getStorageKey(account), JSON.stringify(newSettings))\n}\n\nexport const setSetting = (account: string, newSetting: Partial<UserSettings>) => {\n  const currentSettings = getSettings(account)\n  setSettings(account, { ...currentSettings, ...newSetting })\n}\n","import Web3 from 'web3'\nimport { AbiItem } from 'web3-utils'\nimport web3NoAccount from 'utils/web3'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryAddress,\n  getLotteryTicketAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport { DEFAULT_GAS_PRICE, TESTNET_CHAIN_ID } from 'config'\nimport { getSettings, getGasPriceInWei } from './settings'\n\nexport const getDefaultGasPrice = () => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  if (chainId === TESTNET_CHAIN_ID) {\n    return 10\n  }\n  return DEFAULT_GAS_PRICE\n}\n\nconst getContract = (abi: any, address: string, web3?: Web3, account?: string) => {\n  const _web3 = web3 ?? web3NoAccount\n  const gasPrice = account ? getSettings(account).gasPrice : getDefaultGasPrice()\n\n  return new _web3.eth.Contract(abi as unknown as AbiItem, address, {\n    gasPrice: getGasPriceInWei(gasPrice).toString(),\n  })\n}\n\nexport const getBep20Contract = (address: string, web3?: Web3) => {\n  return getContract(bep20Abi, address, web3)\n}\nexport const getErc721Contract = (address: string, web3?: Web3) => {\n  return getContract(erc721Abi, address, web3)\n}\nexport const getLpContract = (address: string, web3?: Web3) => {\n  return getContract(lpTokenAbi, address, web3)\n}\nexport const getIfoV1Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV1Abi, address, web3)\n}\nexport const getIfoV2Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV2Abi, address, web3)\n}\nexport const getSouschefContract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), web3)\n}\nexport const getSouschefV2Contract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), web3)\n}\nexport const getPointCenterIfoContract = (web3?: Web3) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), web3)\n}\nexport const getCakeContract = (web3?: Web3) => {\n  return getContract(cakeAbi, getCakeAddress(), web3)\n}\nexport const getProfileContract = (web3?: Web3) => {\n  return getContract(profileABI, getPancakeProfileAddress(), web3)\n}\nexport const getPancakeRabbitContract = (web3?: Web3) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), web3)\n}\nexport const getBunnyFactoryContract = (web3?: Web3) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), web3)\n}\nexport const getBunnySpecialContract = (web3?: Web3) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), web3)\n}\nexport const getLotteryContract = (web3?: Web3) => {\n  return getContract(lotteryAbi, getLotteryAddress(), web3)\n}\nexport const getLotteryTicketContract = (web3?: Web3) => {\n  return getContract(lotteryTicketAbi, getLotteryTicketAddress(), web3)\n}\nexport const getLotteryV2Contract = (web3?: Web3) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), web3)\n}\nexport const getMasterchefContract = (web3?: Web3) => {\n  return getContract(masterChef, getMasterChefAddress(), web3)\n}\nexport const getClaimRefundContract = (web3?: Web3) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), web3)\n}\nexport const getTradingCompetitionContract = (web3?: Web3) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), web3)\n}\nexport const getEasterNftContract = (web3?: Web3) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), web3)\n}\nexport const getCakeVaultContract = (web3?: Web3) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), web3)\n}\nexport const getPredictionsContract = (web3?: Web3) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), web3)\n}\nexport const getChainlinkOracleContract = (web3?: Web3) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), web3)\n}\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (poolWeight: BigNumber, cakePriceUsd: BigNumber, poolLiquidityUsd: BigNumber): number => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const apr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\nexport default null\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = () => setIsOpen(!isOpen)\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstake, sousUnstake, sousEmergencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      console.info(txHash)\n    },\n    [account, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport const useSousUnstake = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (enableEmergencyWithdraw) {\n        const txHash = await sousEmergencyUnstake(sousChefContract, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, decimals, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    return txHash\n  }, [account, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import { useMemo } from 'react'\nimport useWeb3 from 'hooks/useWeb3'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getLotteryContract,\n  getLotteryTicketContract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n} from 'utils/contractHelpers'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV1Contract(address, web3), [address, web3])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV2Contract(address, web3), [address, web3])\n}\n\nexport const useERC20 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getErc721Contract(address, web3), [address, web3])\n}\n\nexport const useCake = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeContract(web3), [web3])\n}\n\nexport const useBunnyFactory = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\n}\n\nexport const usePancakeRabbits = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\n}\n\nexport const useProfile = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getProfileContract(web3), [web3])\n}\n\nexport const useLottery = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryContract(web3), [web3])\n}\n\nexport const useLotteryTicket = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\n}\n\nexport const useLotteryV2Contract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryV2Contract(web3), [web3])\n}\n\nexport const useMasterchef = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getMasterchefContract(web3), [web3])\n}\n\nexport const useSousChef = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\n}\n\nexport const useSousChefV2 = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefV2Contract(id, web3), [id, web3])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\n}\n\nexport const useBunnySpecialContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\n}\n\nexport const useClaimRefundContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getClaimRefundContract(web3), [web3])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getTradingCompetitionContract(web3), [web3])\n}\n\nexport const useEasterNftContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getEasterNftContract(web3), [web3])\n}\n\nexport const useCakeVaultContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeVaultContract(web3), [web3])\n}\n\nexport const usePredictionsContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPredictionsContract(web3), [web3])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getChainlinkOracleContract(web3), [web3])\n}\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  })\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import { configureStore } from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n  },\n})\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n\nexport default store\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t(placeholder)}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport { getWeb3NoAccount } from 'utils/web3'\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3 = () => {\n  const { library } = useWeb3React()\n  const refEth = useRef(library)\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\n      refEth.current = library\n    }\n  }, [library])\n\n  return web3\n}\n\nexport default useWeb3\n","import Web3 from 'web3'\nimport { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  web3?: Web3\n  blockNumber?: number\n  requireSuccess?: boolean\n}\n\nconst multicall = async (abi: any[], calls: Call[], options: MulticallOptions = {}) => {\n  try {\n    const web3 = options.web3 || getWeb3NoAccount()\n    const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\n    const itf = new Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.methods.aggregate(calldata).call(undefined, options.blockNumber)\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\n */\nexport const multicallv2 = async (abi: any[], calls: Call[], options: MulticallOptions = {}) => {\n  const web3 = options.web3 || getWeb3NoAccount()\n  const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.methods\n    .tryAggregate(options.requireSuccess === undefined ? true : options.requireSuccess, calldata)\n    .call(undefined, options.blockNumber)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return {\n      result,\n      data: itf.decodeFunctionResult(calls[i].name, data),\n    }\n  })\n\n  return res\n}\nexport default multicall\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { ARCHIVED_NODE } from 'config/constants/endpoints'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\nconst web3NoAccount = new Web3(httpProvider)\n\nconst getWeb3NoAccount = () => {\n  return web3NoAccount\n}\n\nconst getWeb3WithArchivedNodeProvider = () => {\n  const archivedHttpProvider = new Web3.providers.HttpProvider(ARCHIVED_NODE, { timeout: 10000 } as HttpProviderOptions)\n  return new Web3(archivedHttpProvider)\n}\n\nexport { getWeb3NoAccount, getWeb3WithArchivedNodeProvider }\nexport default web3NoAccount\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\nexport { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } from './teams'\nexport { setBlock } from './block'\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { ethers } from 'ethers'\nimport { Pair, TokenAmount, Token } from '@pancakeswap-libs/sdk'\nimport { getLpContract, getMasterchefContract } from 'utils/contractHelpers'\nimport farms from 'config/constants/farms'\nimport { getAddress, getCakeAddress } from 'utils/addressHelpers'\nimport tokens from 'config/constants/tokens'\nimport pools from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport { multicallv2 } from './multicall'\nimport { getWeb3WithArchivedNodeProvider } from './web3'\nimport { getBalanceAmount } from './formatBalance'\nimport { BIG_TEN, BIG_ZERO } from './bigNumber'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .enterStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({\n      from: account,\n      gas: DEFAULT_GAS_LIMIT,\n      value: new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(),\n    })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, decimals, account) => {\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmergencyUnstake = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking('0')\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT, value: BIG_ZERO })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\nconst cakeBnbPid = 251\nconst cakeBnbFarm = farms.find((farm) => farm.pid === cakeBnbPid)\n\nconst CAKE_TOKEN = new Token(chainId, getCakeAddress(), 18)\nconst WBNB_TOKEN = new Token(chainId, tokens.wbnb.address[chainId], 18)\nconst CAKE_BNB_TOKEN = new Token(chainId, getAddress(cakeBnbFarm.lpAddresses), 18)\n\n/**\n * Returns the total CAKE staked in the CAKE-BNB LP\n */\nexport const getUserStakeInCakeBnbLp = async (account: string, block?: number) => {\n  try {\n    const archivedWeb3 = getWeb3WithArchivedNodeProvider()\n    const masterContract = getMasterchefContract(archivedWeb3)\n    const cakeBnbContract = getLpContract(getAddress(cakeBnbFarm.lpAddresses), archivedWeb3)\n    const totalSupplyLP = await cakeBnbContract.methods.totalSupply().call(undefined, block)\n    const reservesLP = await cakeBnbContract.methods.getReserves().call(undefined, block)\n    const cakeBnbBalance = await masterContract.methods.userInfo(cakeBnbPid, account).call(undefined, block)\n\n    const pair: Pair = new Pair(\n      new TokenAmount(CAKE_TOKEN, reservesLP._reserve0.toString()),\n      new TokenAmount(WBNB_TOKEN, reservesLP._reserve1.toString()),\n    )\n    const cakeLPBalance = pair.getLiquidityValue(\n      pair.token0,\n      new TokenAmount(CAKE_BNB_TOKEN, totalSupplyLP.toString()),\n      new TokenAmount(CAKE_BNB_TOKEN, cakeBnbBalance.amount.toString()),\n      false,\n    )\n\n    return new BigNumber(cakeLPBalance.toSignificant(18))\n  } catch (error) {\n    console.error(`CAKE-BNB LP error: ${error}`)\n    return BIG_ZERO\n  }\n}\n\n/**\n * Gets the cake staked in the main pool\n */\nexport const getUserStakeInCakePool = async (account: string, block?: number) => {\n  try {\n    const archivedWeb3 = getWeb3WithArchivedNodeProvider()\n    const masterContract = getMasterchefContract(archivedWeb3)\n    const response = await masterContract.methods.userInfo(0, account).call(undefined, block)\n\n    return getBalanceAmount(new BigNumber(response.amount))\n  } catch (error) {\n    console.error('Error getting stake in CAKE pool', error)\n    return BIG_ZERO\n  }\n}\n\n/**\n * Returns total staked value of active pools\n */\nexport const getUserStakeInPools = async (account: string, block?: number) => {\n  try {\n    const multicallOptions = {\n      web3: getWeb3WithArchivedNodeProvider(),\n      blockNumber: block,\n      requireSuccess: false,\n    }\n    const eligiblePools = pools\n      .filter((pool) => pool.sousId !== 0)\n      .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n\n    // Get the ending block is eligible pools\n    const endBlockCalls = eligiblePools.map((eligiblePool) => ({\n      address: getAddress(eligiblePool.contractAddress),\n      name: 'bonusEndBlock',\n    }))\n    const startBlockCalls = eligiblePools.map((eligiblePool) => ({\n      address: getAddress(eligiblePool.contractAddress),\n      name: 'startBlock',\n    }))\n    const endBlocks = await multicallv2(sousChefABI, endBlockCalls, multicallOptions)\n    const startBlocks = await multicallv2(sousChefABI, startBlockCalls, multicallOptions)\n\n    // Filter out pools that have ended\n    const activePools = eligiblePools.filter((eligiblePool, index) => {\n      const endBlock = new BigNumber(endBlocks[index])\n      const startBlock = new BigNumber(startBlocks[index])\n\n      return startBlock.lte(block) && endBlock.gte(block)\n    })\n\n    // Get the user info of each pool\n    const userInfoCalls = activePools.map((activePool) => ({\n      address: getAddress(activePool.contractAddress),\n      name: 'userInfo',\n      params: [account],\n    }))\n    const userInfos = await multicallv2(sousChefABI, userInfoCalls, multicallOptions)\n\n    return userInfos.reduce((accum: BigNumber, userInfo) => {\n      return accum.plus(new BigNumber(userInfo.amount._hex))\n    }, new BigNumber(0))\n  } catch (error) {\n    console.error('Error fetching staked values:', error)\n    return BIG_ZERO\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.methods.poolLimitPerUser().call()\n    return new BigNumber(stakingLimit)\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3NoAccount()\nconst masterChefContract = new web3.eth.Contract(masterChefABI as unknown as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingCake('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\nimport makeBatchRequest from 'utils/makeBatchRequest'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const [sharePrice, shares, estimatedCakeBountyReward, totalPendingCakeHarvest] = await makeBatchRequest([\n      cakeVaultContract.methods.getPricePerFullShare().call,\n      cakeVaultContract.methods.totalShares().call,\n      cakeVaultContract.methods.calculateHarvestCakeRewards().call,\n      cakeVaultContract.methods.calculateTotalPendingCakeRewards().call,\n    ])\n    const totalSharesAsBigNumber = new BigNumber(shares as string)\n    const sharePriceAsBigNumber = new BigNumber(sharePrice as string)\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward as string).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest as string).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const [performanceFee, callFee, withdrawalFee, withdrawalFeePeriod] = await makeBatchRequest([\n      cakeVaultContract.methods.performanceFee().call,\n      cakeVaultContract.methods.callFee().call,\n      cakeVaultContract.methods.withdrawFee().call,\n      cakeVaultContract.methods.withdrawFeePeriod().call,\n    ])\n    return {\n      performanceFee: parseInt(performanceFee as string, 10),\n      callFee: parseInt(callFee as string, 10),\n      withdrawalFee: parseInt(withdrawalFee as string, 10),\n      withdrawalFeePeriod: parseInt(withdrawalFeePeriod as string, 10),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.methods.userInfo(account).call()\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime as string,\n      lastUserActionTime: userContractResponse.lastUserActionTime as string,\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.cake,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 1,\n    isFinished: false,\n  },\n  {\n    sousId: 175,\n    stakingToken: tokens.cake,\n    earningToken: tokens['ampl-bsc-mp'],\n    contractAddress: {\n      97: '',\n      56: '0x62dEc3A560D2e8A84D30752bA454f97b26757877',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.398',\n  },\n  {\n    sousId: 174,\n    stakingToken: tokens.cake,\n    earningToken: tokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0x44d1f81e80e43e935d66d65874354ef91e5e49f6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4843',\n  },\n  {\n    sousId: 173,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x4ea43fce546975aae120c9eeceb172500be4a02b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6741',\n  },\n  {\n    sousId: 172,\n    stakingToken: tokens.cake,\n    earningToken: tokens.marsh,\n    contractAddress: {\n      97: '',\n      56: '0x567fd708e788e51b68666b9310ee9df163d60fae',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1108',\n  },\n  {\n    sousId: 171,\n    stakingToken: tokens.cake,\n    earningToken: tokens.mbox,\n    contractAddress: {\n      97: '',\n      56: '0x36f9452083fc9bc469a31e7966b873f402292433',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4803',\n  },\n  {\n    sousId: 170,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ata,\n    contractAddress: {\n      97: '',\n      56: '0xc612680457751d0d01b5d901ad08132a3b001900',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 169,\n    stakingToken: tokens.cake,\n    earningToken: tokens.mx,\n    contractAddress: {\n      97: '',\n      56: '0x336bcd59f2b6eb7221a99f7a50fd03c6bf9a306b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.27777',\n  },\n  {\n    sousId: 168,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bcfx,\n    contractAddress: {\n      97: '',\n      56: '0x2b3974dda76b2d408b7d680a27fbb0393e3cf0e1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6944',\n  },\n  {\n    sousId: 167,\n    stakingToken: tokens.cake,\n    earningToken: tokens.qkc,\n    contractAddress: {\n      97: '',\n      56: '0xfa67f97eeee6de55d179ecabbfe701f27d9a1ed9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '15.9143',\n  },\n  {\n    sousId: 166,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ktn,\n    contractAddress: {\n      97: '',\n      56: '0x48852322a185dc5fc733ff8c8d7c6dcbd2b3b2a2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01215',\n  },\n  {\n    sousId: 165,\n    stakingToken: tokens.cake,\n    earningToken: tokens.mtrg,\n    contractAddress: {\n      97: '',\n      56: '0xf4d0f71698f58f221911515781b05e808a8635cb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.05613',\n  },\n  {\n    sousId: 164,\n    stakingToken: tokens.cake,\n    earningToken: tokens.tusd,\n    contractAddress: {\n      97: '',\n      56: '0x9dceb1d92f7e0361d0766f3d98482424df857654',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.5787',\n  },\n  {\n    sousId: 163,\n    stakingToken: tokens.cake,\n    earningToken: tokens.vrt,\n    contractAddress: {\n      97: '',\n      56: '0xb77f1425ec3a7c78b1a1e892f72332c8b5e8ffcb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '40.5092',\n  },\n  {\n    sousId: 162,\n    stakingToken: tokens.cake,\n    earningToken: tokens.kalm,\n    contractAddress: {\n      97: '',\n      56: '0xb9ff4da0954b300542e722097671ead8cf337c17',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0868',\n  },\n  {\n    sousId: 161,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ez,\n    contractAddress: {\n      97: '',\n      56: '0xb19395702460261e51edf7a7b130109c64f13af9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01736',\n  },\n  {\n    sousId: 160,\n    stakingToken: tokens.cake,\n    earningToken: tokens.kalm,\n    contractAddress: {\n      97: '',\n      56: '0x6e113ecb9ff2d271140f124c2cc5b5e4b5700c9f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    isFinished: true,\n    tokenPerBlock: '0.00868',\n  },\n  {\n    sousId: 159,\n    stakingToken: tokens.cake,\n    earningToken: tokens.popen,\n    contractAddress: {\n      97: '',\n      56: '0x7baf1763ce5d0da8c9d85927f08a8be9c481ce50',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.19097',\n  },\n  {\n    sousId: 158,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x2b8d6c9c62bfc1bed84724165d3000e61d332cab',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.023148',\n  },\n  {\n    sousId: 157,\n    stakingToken: tokens.cake,\n    earningToken: tokens.well,\n    contractAddress: {\n      97: '',\n      56: '0x8a06ff2748edcba3fb4e44a6bfda4e46769e557b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.2025',\n    sortOrder: 999,\n  },\n  {\n    sousId: 156,\n    stakingToken: tokens.cake,\n    earningToken: tokens.deri,\n    contractAddress: {\n      97: '',\n      56: '0x3eba95f5493349bbe0cad33eaae05dc6a7e26b90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '1.6087',\n    sortOrder: 999,\n  },\n  {\n    sousId: 155,\n    stakingToken: tokens.cake,\n    earningToken: tokens.chr,\n    contractAddress: {\n      97: '',\n      56: '0x593edbd14a5b7eec828336accca9c16cc12f04be',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '1.655',\n    sortOrder: 999,\n  },\n  {\n    sousId: 154,\n    stakingToken: tokens.cake,\n    earningToken: tokens.cyc,\n    contractAddress: {\n      97: '',\n      56: '0xD714738837944C3c592477249E8edB724A76e068',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00015914',\n    sortOrder: 999,\n  },\n  {\n    sousId: 153,\n    stakingToken: tokens.cake,\n    earningToken: tokens.xend,\n    contractAddress: {\n      97: '',\n      56: '0x8ea9f2482b2f7b12744a831f81f8d08714adc093',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.31828',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 152,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hget,\n    contractAddress: {\n      97: '',\n      56: '0x8e8125f871eb5ba9d55361365f5391ab437f9acc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.03553',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 151,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hotcross,\n    contractAddress: {\n      97: '',\n      56: '0x0e09205e993f78cd5b3a5df355ae98ee7d0b5834',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: false,\n  },\n  {\n    sousId: 150,\n    stakingToken: tokens.cake,\n    earningToken: tokens.rfox,\n    contractAddress: {\n      97: '',\n      56: '0xf9f00d41b1f4b3c531ff750a9b986c1a530f33d9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n    isFinished: false,\n  },\n  {\n    sousId: 149,\n    stakingToken: tokens.cake,\n    earningToken: tokens.wmass,\n    contractAddress: {\n      97: '',\n      56: '0x4Af531EcD50167a9402Ce921ee6436dd4cFC04FD',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.24942',\n    isFinished: false,\n  },\n  {\n    sousId: 148,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ubxt,\n    contractAddress: {\n      97: '',\n      56: '0x9b4bac2d8f69853aa29cb45478c77fc54532ac22',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.4074',\n    isFinished: false,\n  },\n  {\n    sousId: 147,\n    stakingToken: tokens.cake,\n    earningToken: tokens.btr,\n    contractAddress: {\n      97: '',\n      56: '0x20ee70a07ae1b475cb150dec27930d97915726ea',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.8935',\n    isFinished: false,\n  },\n  {\n    sousId: 146,\n    stakingToken: tokens.cake,\n    earningToken: tokens.τdoge,\n    contractAddress: {\n      97: '',\n      56: '0x017556dffb8c6a52fd7f4788adf6fb339309c81b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.868',\n    isFinished: false,\n  },\n  {\n    sousId: 145,\n    stakingToken: tokens.cake,\n    earningToken: tokens.pmon,\n    contractAddress: {\n      97: '',\n      56: '0xdaa711ecf2ac0bff5c82fceeae96d0008791cc49',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01261',\n    isFinished: false,\n  },\n  {\n    sousId: 144,\n    stakingToken: tokens.cake,\n    earningToken: tokens.one,\n    contractAddress: {\n      97: '',\n      56: '0x74af842ecd0b6588add455a47aa21ed9ba794108',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '57.87',\n    isFinished: false,\n  },\n  {\n    sousId: 143,\n    stakingToken: tokens.cake,\n    earningToken: tokens.fine,\n    contractAddress: {\n      97: '',\n      56: '0x42d41749d6e9a1c5b47e27f690d4531f181b2159',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1342',\n    isFinished: false,\n  },\n  {\n    sousId: 142,\n    stakingToken: tokens.doge,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xbebd44824631b55991fa5f2bf5c7a4ec96ff805b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01388',\n    isFinished: false,\n  },\n  {\n    sousId: 141,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bmxx,\n    contractAddress: {\n      97: '',\n      56: '0x55131f330c886e3f0cae389cedb23766ac9aa3ed',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01331',\n    isFinished: false,\n  },\n  {\n    sousId: 140,\n    stakingToken: tokens.cake,\n    earningToken: tokens.oin,\n    contractAddress: {\n      97: '',\n      56: '0x01453a74a94687fa3f99b80762435855a13664f4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: false,\n  },\n  {\n    sousId: 139,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hyfi,\n    contractAddress: {\n      97: '',\n      56: '0x0032ceb978fe5fc8a5d5d6f5adfc005e76397e29',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.8935',\n    isFinished: false,\n  },\n  {\n    sousId: 138,\n    stakingToken: tokens.cake,\n    earningToken: tokens.kun,\n    contractAddress: {\n      97: '',\n      56: '0x439b46d467402cebc1a2fa05038b5b696b1f4417',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.23148',\n    isFinished: false,\n  },\n  {\n    sousId: 137,\n    stakingToken: tokens.cake,\n    earningToken: tokens.math,\n    contractAddress: {\n      97: '',\n      56: '0x377ae5f933aa4cfa41fa03e2cae8a2befccf53b2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.15798',\n    isFinished: false,\n  },\n  {\n    sousId: 136,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ust,\n    contractAddress: {\n      97: '',\n      56: '0xce3ebac3f549ebf1a174a6ac3b390c179422b5f6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.17361',\n    isFinished: false,\n  },\n  {\n    sousId: 135,\n    stakingToken: tokens.cake,\n    earningToken: tokens.win,\n    contractAddress: {\n      97: '',\n      56: '0xd26dec254c699935c286cd90e9841dcabf1af72d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '462.96',\n    isFinished: false,\n  },\n  {\n    sousId: 134,\n    stakingToken: tokens.cake,\n    earningToken: tokens.trx,\n    contractAddress: {\n      97: '',\n      56: '0x93e2867d9b74341c2d19101b7fbb81d6063cca4d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '4.0509',\n    isFinished: false,\n  },\n  {\n    sousId: 133,\n    stakingToken: tokens.cake,\n    earningToken: tokens.btt,\n    contractAddress: {\n      97: '',\n      56: '0x3b644e44033cff70bd6b771904225f3dd69dfb6d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '79.86',\n    isFinished: false,\n  },\n  {\n    sousId: 132,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lmt,\n    contractAddress: {\n      97: '',\n      56: '0x0a687d7b951348d681f7ed5eea84c0ba7b9566dc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.66145',\n    isFinished: false,\n  },\n  {\n    sousId: 131,\n    stakingToken: tokens.cake,\n    earningToken: tokens.pnt,\n    contractAddress: {\n      97: '',\n      56: '0x417df1c0e6a498eb1f2247f99032a01d4fafe922',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.09548',\n    isFinished: false,\n  },\n  {\n    sousId: 130,\n    stakingToken: tokens.cake,\n    earningToken: tokens.xmark,\n    contractAddress: {\n      97: '',\n      56: '0xdc8943d806f9dd64312d155284abf780455fd345',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0298',\n    isFinished: false,\n  },\n  {\n    sousId: 129,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0xa90a894e5bc20ab2be46c7e033a38f8b8eaa771a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4861',\n    isFinished: true,\n  },\n  {\n    sousId: 128,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hakka,\n    contractAddress: {\n      97: '',\n      56: '0x34ac807e34e534fe426da1e11f816422774aae1c',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: false,\n  },\n  {\n    sousId: 127,\n    stakingToken: tokens.cake,\n    earningToken: tokens.pbtc,\n    contractAddress: {\n      97: '',\n      56: '0x31fa2f516b77c4273168b284ac6d9def5aa6dafb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0000031',\n    isFinished: false,\n  },\n  {\n    sousId: 126,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x7112f8988f075c7784666ab071927ae4109a8076',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.003472',\n    isFinished: false,\n  },\n  {\n    sousId: 125,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bbadger,\n    contractAddress: {\n      97: '',\n      56: '0x126dfbcef85c5bf335f8be99ca4006037f417892',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00265278',\n    isFinished: false,\n  },\n  {\n    sousId: 124,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bdigg,\n    contractAddress: {\n      97: '',\n      56: '0x4f0ad2332b1f9983e8f63cbee617523bb7de5031',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000403',\n    isFinished: false,\n  },\n  {\n    sousId: 123,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x9483ca44324de06802576866b9d296f7614f45ac',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4629',\n    isFinished: false,\n  },\n  {\n    sousId: 122,\n    stakingToken: tokens.cake,\n    earningToken: tokens.xed,\n    contractAddress: {\n      97: '',\n      56: '0x72ceec6e2a142678e703ab0710de78bc819f4ce0',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: false,\n  },\n  {\n    sousId: 121,\n    stakingToken: tokens.cake,\n    earningToken: tokens.cgg,\n    contractAddress: {\n      97: '',\n      56: '0x1c6ed21d3313822ae73ed0d94811ffbbe543f341',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.10918',\n    isFinished: false,\n  },\n  {\n    sousId: 120,\n    stakingToken: tokens.cake,\n    earningToken: tokens.perl,\n    contractAddress: {\n      97: '',\n      56: '0x1ac0d0333640f57327c83053c581340ebc829e30',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n    isFinished: false,\n  },\n  {\n    sousId: 119,\n    stakingToken: tokens.cake,\n    earningToken: tokens.arpa,\n    contractAddress: {\n      97: '',\n      56: '0xc707e5589aeb1dc117b0bb5a3622362f1812d4fc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.949',\n    isFinished: false,\n  },\n  {\n    sousId: 118,\n    stakingToken: tokens.cake,\n    earningToken: tokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0x22106cdcf9787969e1672d8e6a9c03a889cda9c5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.11284',\n    isFinished: false,\n  },\n  {\n    sousId: 117,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dexe,\n    contractAddress: {\n      97: '',\n      56: '0x999b86e8bba3d4f05afb8155963999db70afa97f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.009837',\n    isFinished: true,\n  },\n  {\n    sousId: 116,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dfd,\n    contractAddress: {\n      97: '',\n      56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.46296',\n    isFinished: false,\n  },\n  {\n    sousId: 115,\n    stakingToken: tokens.cake,\n    earningToken: tokens.alpaca,\n    contractAddress: {\n      97: '',\n      56: '0xf73fdeb26a8c7a4abf3809d3db11a06ba5c13d0e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.22743',\n    isFinished: false,\n  },\n  {\n    sousId: 114,\n    stakingToken: tokens.cake,\n    earningToken: tokens.τbtc,\n    contractAddress: {\n      97: '',\n      56: '0xaac7171afc93f4b75e1268d208040b152ac65e32',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000608',\n    isFinished: false,\n  },\n  {\n    sousId: 113,\n    stakingToken: tokens.cake,\n    earningToken: tokens.τbtc,\n    contractAddress: {\n      97: '',\n      56: '0x2c6017269b4324d016ca5d8e3267368652c18905',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000608',\n    isFinished: true,\n  },\n  {\n    sousId: 112,\n    stakingToken: tokens.cake,\n    earningToken: tokens.swingby,\n    contractAddress: {\n      97: '',\n      56: '0x675434c68f2672c983e36cf10ed13a4014720b79',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.21527',\n  },\n  {\n    sousId: 111,\n    stakingToken: tokens.cake,\n    earningToken: tokens.xed,\n    contractAddress: {\n      97: '',\n      56: '0x05d6c2d1d687eacfb5e6440d5a3511e91f2201a8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 110,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hakka,\n    contractAddress: {\n      97: '',\n      56: '0xd623a32da4a632ce01766c317d07cb2cad56949b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 109,\n    stakingToken: tokens.cake,\n    earningToken: tokens.cgg,\n    contractAddress: {\n      97: '',\n      56: '0xdf75f38dbc98f9f26377414e567abcb8d57cca33',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.10918',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 108,\n    stakingToken: tokens.cake,\n    earningToken: tokens.mix,\n    contractAddress: {\n      97: '',\n      56: '0xce64a930884b2c68cd93fc1c7c7cdc221d427692',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3721',\n  },\n  {\n    sousId: 107,\n    stakingToken: tokens.cake,\n    earningToken: tokens.suter,\n    contractAddress: {\n      97: '',\n      56: '0xc1E70edd0141c454b834Deac7ddDeA413424aEf9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '15.3356',\n  },\n  {\n    sousId: 106,\n    stakingToken: tokens.cake,\n    earningToken: tokens.broobee,\n    contractAddress: {\n      97: '',\n      56: '0x189d8228CdfDc404Bd9e5bD65ff958cb5fd8855c',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '14.4675',\n  },\n  {\n    sousId: 105,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hzn,\n    contractAddress: {\n      97: '',\n      56: '0x0196c582216e2463f052E2B07Ef8667Bec9Fb17a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6944',\n  },\n  {\n    sousId: 104,\n    stakingToken: tokens.cake,\n    earningToken: tokens.alpa,\n    contractAddress: {\n      97: '',\n      56: '0x8f84106286c9c8A42bc3555C835E6e2090684ab7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.23495',\n  },\n  {\n    sousId: 103,\n    stakingToken: tokens.cake,\n    earningToken: tokens.perl,\n    contractAddress: {\n      97: '',\n      56: '0xa8d32b31ECB5142f067548Bf0424389eE98FaF26',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 102,\n    stakingToken: tokens.cake,\n    earningToken: tokens.tlm,\n    contractAddress: {\n      97: '',\n      56: '0xC59aa49aE508050c2dF653E77bE13822fFf02E9A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '17.361',\n  },\n  {\n    sousId: 101,\n    stakingToken: tokens.cake,\n    earningToken: tokens.jgn,\n    contractAddress: {\n      97: '',\n      56: '0x14AeA62384789EDA98f444cCb970F6730877d3F9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.08796',\n  },\n  {\n    sousId: 100,\n    stakingToken: tokens.cake,\n    earningToken: tokens.eps,\n    contractAddress: {\n      97: '',\n      56: '0xebb87dF24D65977cbe62538E4B3cFBD5d0308642',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.07716',\n  },\n  {\n    sousId: 99,\n    stakingToken: tokens.cake,\n    earningToken: tokens.arpa,\n    contractAddress: {\n      97: '',\n      56: '0x40918EF8efFF4aA061656013a81E0e5A8A702eA7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.949',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 98,\n    stakingToken: tokens.cake,\n    earningToken: tokens.itam,\n    contractAddress: {\n      97: '',\n      56: '0x44eC1B26035865D9A7C130fD872670CD7Ebac2bC',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.096',\n  },\n  {\n    sousId: 97,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x1329ad151dE6C441184E32E108401126AE850937',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4629',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 96,\n    stakingToken: tokens.cake,\n    earningToken: tokens.tko,\n    contractAddress: {\n      97: '',\n      56: '0x9bbDc92474a7e7321B78dcDA5EF35f4981438760',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n  },\n  {\n    sousId: 95,\n    stakingToken: tokens.cake,\n    earningToken: tokens.apys,\n    contractAddress: {\n      97: '',\n      56: '0x46530d79b238f809e80313e73715b160c66677aF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.09953',\n  },\n  {\n    sousId: 94,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hoo,\n    contractAddress: {\n      97: '',\n      56: '0x47fD853D5baD391899172892F91FAa6d0cd8A2Aa',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.489',\n  },\n  {\n    sousId: 93,\n    stakingToken: tokens.cake,\n    earningToken: tokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0xe25aB6F05BBF6C1be953BF2d7df15B3e01b8e5a5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.11284',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 92,\n    stakingToken: tokens.cake,\n    earningToken: tokens.easy,\n    contractAddress: {\n      97: '',\n      56: '0xEB8Fd597921E3Dd37B0F103a2625F855e2C9b9B5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0072338',\n  },\n  {\n    sousId: 91,\n    stakingToken: tokens.cake,\n    earningToken: tokens.nrv,\n    contractAddress: {\n      97: '',\n      56: '0xABFd8d1942628124aB971937154f826Bce86DcbC',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.15046',\n  },\n  {\n    sousId: 90,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dego,\n    contractAddress: {\n      97: '',\n      56: '0x526d3c204255f807C95a99b69596f2f9f72345e5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00405',\n  },\n  {\n    sousId: 89,\n    stakingToken: tokens.cake,\n    earningToken: tokens.gum,\n    contractAddress: {\n      97: '',\n      56: '0xAa2082BeE04fc518300ec673F9497ffa6F669dB8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.08912',\n  },\n  {\n    sousId: 88,\n    stakingToken: tokens.cake,\n    earningToken: tokens.pbtc,\n    contractAddress: {\n      97: '',\n      56: '0x9096625Bc0d36F5EDa6d44e511641667d89C28f4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0000031',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 87,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dft,\n    contractAddress: {\n      97: '',\n      56: '0x78BD4dB48F8983c3C36C8EAFbEF38f6aC7B55285',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6811',\n  },\n  {\n    sousId: 86,\n    stakingToken: tokens.cake,\n    earningToken: tokens.swth,\n    contractAddress: {\n      97: '',\n      56: '0x35418e14F5aA615C4f020eFBa6e01C5DbF15AdD2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.3148',\n  },\n  {\n    sousId: 85,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x3c7cC49a35942fbD3C2ad428a6c22490cd709d03',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.003472',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 84,\n    stakingToken: tokens.cake,\n    earningToken: tokens.zil,\n    contractAddress: {\n      97: '',\n      56: '0xF795739737ABcFE0273f4Dced076460fdD024Dd9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.0995',\n  },\n  {\n    sousId: 83,\n    stakingToken: tokens.cake,\n    earningToken: tokens.pcws,\n    contractAddress: {\n      97: '',\n      56: '0x06FF8960F7F4aE572A3f57FAe77B2882BE94Bf90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00434',\n  },\n  {\n    sousId: 82,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bbadger,\n    contractAddress: {\n      97: '',\n      56: '0xe4dD0C50fb314A8B2e84D211546F5B57eDd7c2b9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00265278',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 81,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bdigg,\n    contractAddress: {\n      97: '',\n      56: '0xb627A7e33Db571bE792B0b69c5C2f5a8160d5500',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000403',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 80,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lto,\n    contractAddress: {\n      97: '',\n      56: '0xadBfFA25594AF8Bc421ecaDF54D057236a99781e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.2893',\n  },\n  {\n    sousId: 79,\n    stakingToken: tokens.cake,\n    earningToken: tokens.mir,\n    contractAddress: {\n      97: '',\n      56: '0x3e31488f08EBcE6F2D8a2AA512aeFa49a3C7dFa7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01273',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 78,\n    stakingToken: tokens.cake,\n    earningToken: tokens.mir,\n    contractAddress: {\n      97: '',\n      56: '0x453a75908fb5a36d482d5f8fe88eca836f32ead5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01273',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 77,\n    stakingToken: tokens.cake,\n    earningToken: tokens.trade,\n    contractAddress: {\n      97: '',\n      56: '0x509C99D73FB54b2c20689708b3F824147292D38e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4484',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 76,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dusk,\n    contractAddress: {\n      97: '',\n      56: '0xF1bd5673Ea4a1C415ec84fa3E402F2F7788E7717',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4629',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 75,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bifi,\n    contractAddress: {\n      97: '',\n      56: '0xB4C68A1C565298834360BbFF1652284275120D47',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00007234',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 74,\n    stakingToken: tokens.cake,\n    earningToken: tokens.txl,\n    contractAddress: {\n      97: '',\n      56: '0x153e62257F1AAe05d5d253a670Ca7585c8D3F94F',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.434027',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 73,\n    stakingToken: tokens.cake,\n    earningToken: tokens.cos,\n    contractAddress: {\n      97: '',\n      56: '0xF682D186168b4114ffDbF1291F19429310727151',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '5.787',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 72,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bunny,\n    contractAddress: {\n      97: '',\n      56: '0xaDdAE5f4dB84847ac9d947AED1304A8e7D19f7cA',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00289',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 71,\n    stakingToken: tokens.cake,\n    earningToken: tokens.alice,\n    contractAddress: {\n      97: '',\n      56: '0x4C32048628D0d32d4D6c52662FB4A92747782B56',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.14467',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 70,\n    stakingToken: tokens.cake,\n    earningToken: tokens.for,\n    contractAddress: {\n      97: '',\n      56: '0x47642101e8D8578C42765d7AbcFd0bA31868c523',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '2.8935',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 69,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bux,\n    contractAddress: {\n      97: '',\n      56: '0x07F8217c68ed9b838b0b8B58C19c79bACE746e9A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5787',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 68,\n    stakingToken: tokens.cake,\n    earningToken: tokens.nuls,\n    contractAddress: {\n      97: '',\n      56: '0x580DC9bB9260A922E3A4355b9119dB990F09410d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0868',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 67,\n    stakingToken: tokens.cake,\n    earningToken: tokens.belt,\n    contractAddress: {\n      97: '',\n      56: '0x6f0037d158eD1AeE395e1c12d21aE8583842F472',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00868',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 66,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0x423382f989C6C289c8D441000e1045e231bd7d90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4861',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 65,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bfi,\n    contractAddress: {\n      97: '',\n      56: '0x0A595623b58dFDe6eB468b613C11A7A8E84F09b9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0001157',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 64,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dexe,\n    contractAddress: {\n      97: '',\n      56: '0x9E6dA246d369a41DC44673ce658966cAf487f7b2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.009837',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 63,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bel,\n    contractAddress: {\n      97: '',\n      56: '0x2C0f449387b15793B9da27c2d945dBed83ab1B07',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0549',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 62,\n    stakingToken: tokens.tpt,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x0c3D6892aa3b23811Af3bd1bbeA8b0740E8e4528',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0462',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 61,\n    stakingToken: tokens.cake,\n    earningToken: tokens.tpt,\n    contractAddress: {\n      97: '',\n      56: '0x75C91844c5383A68b7d3A427A44C32E3ba66Fe45',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3.616',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 60,\n    stakingToken: tokens.cake,\n    earningToken: tokens.watch,\n    contractAddress: {\n      97: '',\n      56: '0xC58954199E268505fa3D3Cb0A00b7207af8C2D1d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.3472',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 59,\n    stakingToken: tokens.cake,\n    earningToken: tokens.xmark,\n    contractAddress: {\n      97: '',\n      56: '0xA5137e08C48167E363Be8Ec42A68f4F54330964E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0413',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 58,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bmxx,\n    contractAddress: {\n      97: '',\n      56: '0x6F31B87f51654424Ce57E9F8243E27ed13846CDB',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00248',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 57,\n    stakingToken: tokens.cake,\n    earningToken: tokens.iotx,\n    contractAddress: {\n      97: '',\n      56: '0xCE54BA909d23B9d4BE0Ff0d84e5aE83F0ADD8D9a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '6.365',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 56,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bor,\n    contractAddress: {\n      97: '',\n      56: '0x3e677dC00668d69c2A7724b9AFA7363e8A56994e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.000395',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 55,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bopen,\n    contractAddress: {\n      97: '',\n      56: '0x5Ac8406498dC1921735d559CeC271bEd23B294A7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0723',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 54,\n    stakingToken: tokens.sushi,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xb69b6e390cba1F68442A886bC89E955048DAe7E3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0367',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 53,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dodo,\n    contractAddress: {\n      97: '',\n      56: '0xae3001ddb18A6A57BEC2C19D71680437CA87bA1D',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0578',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 52,\n    stakingToken: tokens.cake,\n    earningToken: tokens.swingby,\n    contractAddress: {\n      97: '',\n      56: '0x02aa767e855b8e80506fb47176202aA58A95315a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.13',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 51,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bry,\n    contractAddress: {\n      97: '',\n      56: '0x1c736F4FB20C7742Ee83a4099fE92abA61dFca41',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1157',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 50,\n    stakingToken: tokens.cake,\n    earningToken: tokens.zee,\n    contractAddress: {\n      97: '',\n      56: '0x02861B607a5E87daf3FD6ec19DFB715F1b371379',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1736',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 49,\n    stakingToken: tokens.cake,\n    earningToken: tokens.swgb,\n    contractAddress: {\n      97: '',\n      56: '0x73e4E8d010289267dEe3d1Fc48974B60363963CE',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.899',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 48,\n    stakingToken: tokens.comp,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xE0565fBb109A3f3f8097D8A9D931277bfd795072',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.055',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 47,\n    stakingToken: tokens.comp,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xc3693e3cbc3514d5d07EA5b27A721F184F617900',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.55',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 46,\n    stakingToken: tokens.cake,\n    earningToken: tokens.sfp,\n    contractAddress: {\n      97: '',\n      56: '0x2B02d43967765b18E31a9621da640588f3550EFD',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.6',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 45,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lina,\n    contractAddress: {\n      97: '',\n      56: '0x212bb602418C399c29D52C55100fD6bBa12bea05',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.983',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 44,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lina,\n    contractAddress: {\n      97: '',\n      56: '0x04aE8ca68A116278026fB721c06dCe709eD7013C',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0983',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 43,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lit,\n    contractAddress: {\n      97: '',\n      56: '0x1714bAAE9DD4738CDEA07756427FA8d4F08D9479',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.231',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 42,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hget,\n    contractAddress: {\n      97: '',\n      56: '0xcCD0b93cC6ce3dC6dFaA9DB68f70e5C8455aC5bd',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0138',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 41,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bdo,\n    contractAddress: {\n      97: '',\n      56: '0x9cB24e9460351bC51d4066BC6AEd1F3809b02B78',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.075',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 40,\n    stakingToken: tokens.cake,\n    earningToken: tokens.egld,\n    contractAddress: {\n      97: '',\n      56: '0x2dcf4cDFf4Dd954683Fe0a6123077f8a025b66cF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.001215',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 39,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ust,\n    contractAddress: {\n      97: '',\n      56: '0x6EFa207ACdE6e1caB77c1322CbdE9628929ba88F',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1157',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 38,\n    stakingToken: tokens.cake,\n    earningToken: tokens.wsote,\n    contractAddress: {\n      97: '',\n      56: '0xD0b738eC507571176D40f28bd56a0120E375f73a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.23',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 37,\n    stakingToken: tokens.cake,\n    earningToken: tokens.front,\n    contractAddress: {\n      97: '',\n      56: '0xf7a31366732F08E8e6B88519dC3E827e04616Fc9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.2546',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 36,\n    stakingToken: tokens.cake,\n    earningToken: tokens.helmet,\n    contractAddress: {\n      97: '',\n      56: '0x9F23658D5f4CEd69282395089B0f8E4dB85C6e79',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.81',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 35,\n    stakingToken: tokens.cake,\n    earningToken: tokens.btcst,\n    contractAddress: {\n      97: '',\n      56: '0xB6fd2724cc9c90DD31DA35DbDf0300009dceF97d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.011574',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 34,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bscx,\n    contractAddress: {\n      97: '',\n      56: '0x108BFE84Ca8BCe0741998cb0F60d313823cEC143',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.17361',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 33,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ten,\n    contractAddress: {\n      97: '',\n      56: '0x4A26b082B432B060B1b00A84eE4E823F04a6f69a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.05787',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 32,\n    stakingToken: tokens.cake,\n    earningToken: tokens.balbt,\n    contractAddress: {\n      97: '',\n      56: '0x3cc08B7C6A31739CfEd9d8d38b484FDb245C79c8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4166',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 31,\n    stakingToken: tokens.cake,\n    earningToken: tokens.asr,\n    contractAddress: {\n      97: '',\n      56: '0xd18E1AEb349ef0a6727eCe54597D98D263e05CAB',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 30,\n    stakingToken: tokens.cake,\n    earningToken: tokens.atm,\n    contractAddress: {\n      97: '',\n      56: '0x68C7d180bD8F7086D91E65A422c59514e4aFD638',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 29,\n    stakingToken: tokens.cake,\n    earningToken: tokens.og,\n    contractAddress: {\n      97: '',\n      56: '0xbE65d7e42E05aD2c4ad28769dc9c5b4b6EAff2C7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 28,\n    stakingToken: tokens.cake,\n    earningToken: tokens.reef,\n    contractAddress: {\n      97: '',\n      56: '0x1500fa1afbfe4f4277ed0345cdf12b2c9ca7e139',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '115.74',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 27,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ditto,\n    contractAddress: {\n      97: '',\n      56: '0x624ef5C2C6080Af188AF96ee5B3160Bb28bb3E02',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01157',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 26,\n    stakingToken: tokens.twt,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x0554a5D083Abf2f056ae3F6029e1714B9A655174',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.248',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 24,\n    stakingToken: tokens.cake,\n    earningToken: tokens.juv,\n    contractAddress: {\n      97: '',\n      56: '0x543467B17cA5De50c8BF7285107A36785Ab57E56',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 25,\n    stakingToken: tokens.cake,\n    earningToken: tokens.psg,\n    contractAddress: {\n      97: '',\n      56: '0x65aFEAFaec49F23159e897EFBDCe19D94A86A1B6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 21,\n    stakingToken: tokens.cake,\n    earningToken: tokens.vai,\n    contractAddress: {\n      97: '',\n      56: '0x1AD34D8d4D79ddE88c9B6b8490F8fC67831f2CAe',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.104',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 20,\n    stakingToken: tokens.bnb,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x555Ea72d7347E82C614C16f005fA91cAf06DCB5a',\n    },\n    poolCategory: PoolCategory.BINANCE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 19,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bnb,\n    contractAddress: {\n      97: '',\n      56: '0x326D754c64329aD7cb35744770D56D0E1f3B3124',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0041',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 18,\n    stakingToken: tokens.cake,\n    earningToken: tokens.blink,\n    contractAddress: {\n      97: '',\n      56: '0x42Afc29b2dEa792974d1e9420696870f1Ca6d18b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '23.14',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 17,\n    stakingToken: tokens.cake,\n    earningToken: tokens.blink,\n    contractAddress: {\n      97: '',\n      56: '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '23.14',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 16,\n    stakingToken: tokens.cake,\n    earningToken: tokens.unfi,\n    contractAddress: {\n      97: '',\n      56: '0xFb1088Dae0f03C5123587d2babb3F307831E6367',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02893',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 15,\n    stakingToken: tokens.cake,\n    earningToken: tokens.twt,\n    contractAddress: {\n      97: '',\n      56: '0x9c4EBADa591FFeC4124A7785CAbCfb7068fED2fb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 14,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hard,\n    contractAddress: {\n      97: '',\n      56: '0x90F995b9d46b32c4a1908A8c6D0122e392B3Be97',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.346',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 13,\n    stakingToken: tokens.cake,\n    earningToken: tokens.broobee,\n    contractAddress: {\n      97: '',\n      56: '0xdc8c45b7F3747Ca9CaAEB3fa5e0b5FCE9430646b',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '12.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 12,\n    stakingToken: tokens.cake,\n    earningToken: tokens.stax,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xFF02241a2A1d2a7088A344309400E9fE74772815',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '0.2',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 11,\n    stakingToken: tokens.cake,\n    earningToken: tokens.nar,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xDc938BA1967b06d666dA79A7B1E31a8697D1565E',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '1',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 10,\n    stakingToken: tokens.cake,\n    earningToken: tokens.nya,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x07a0A5B67136d40F4d7d95Bc8e0583bafD7A81b9',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '10',\n    isFinished: true,\n  },\n  {\n    sousId: 9,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ctk,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0x21A9A53936E812Da06B7623802DEc9A1f94ED23a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 8,\n    stakingToken: tokens.cake,\n    earningToken: tokens.twt,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0xe7f9A439Aa7292719aC817798DDd1c4D35934aAF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '20',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 7,\n    stakingToken: tokens.cake,\n    earningToken: tokens.inj,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0xcec2671C81a0Ecf7F8Ee796EFa6DBDc5Cb062693',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.25',\n    sortOrder: 999,\n    isFinished: true,\n  },\n]\n\nexport default pools\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { CampaignType, FarmConfig, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  id: string\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedHash: string\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface RoundData {\n  [key: string]: Round\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport interface BetData {\n  [key: string]: {\n    [key: string]: Bet\n  }\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  lastOraclePrice: string\n  rounds: RoundData\n  history: HistoryData\n  bets: BetData\n}\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { Bet, BetPosition, Market, PredictionStatus, Round, RoundData } from 'state/types'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  MarketResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): RoundResponse => {\n  return {\n    id: epoch.toString(),\n    epoch: epoch.toString(),\n    startBlock: startBlock.toString(),\n    failed: null,\n    startAt: null,\n    lockAt: null,\n    lockBlock: null,\n    lockPrice: null,\n    endBlock: null,\n    closePrice: null,\n    totalBets: '0',\n    totalAmount: '0',\n    bearBets: '0',\n    bullBets: '0',\n    bearAmount: '0',\n    bullAmount: '0',\n    position: null,\n    bets: [],\n  }\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedHash: betResponse.claimedHash,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformMarketResponse = (marketResponse: MarketResponse): Market => {\n  return {\n    id: marketResponse.id,\n    paused: marketResponse.paused,\n    epoch: Number(marketResponse.epoch.epoch),\n  }\n}\n\nexport const makeRoundData = (rounds: Round[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.id]: round,\n    }\n  }, {})\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\n/**\n * Gets static data from the contract\n */\nexport const getStaticPredictionsData = async () => {\n  const { methods } = getPredictionsContract()\n  const [currentEpoch, intervalBlocks, minBetAmount, isPaused, bufferBlocks] = await makeBatchRequest([\n    methods.currentEpoch().call,\n    methods.intervalBlocks().call,\n    methods.minBetAmount().call,\n    methods.paused().call,\n    methods.bufferBlocks().call,\n  ])\n\n  return {\n    status: isPaused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: Number(currentEpoch),\n    intervalBlocks: Number(intervalBlocks),\n    bufferBlocks: Number(bufferBlocks),\n    minBetAmount,\n  }\n}\n\nexport const getMarketData = async (): Promise<{\n  rounds: Round[]\n  market: Market\n}> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getMarketData {\n        rounds(first: 5, orderBy: epoch, orderDirection: desc) {\n          ${getRoundBaseFields()}\n        }\n        market(id: 1) {\n          id\n          paused\n          epoch {\n            epoch\n          }\n        }\n      }\n    `,\n  )) as { rounds: RoundResponse[]; market: MarketResponse }\n\n  return {\n    rounds: response.rounds.map(transformRoundResponse),\n    market: transformMarketResponse(response.market),\n  }\n}\n\nexport const getRound = async (id: string) => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getRound($id: ID!) {\n        round(id: $id) {\n          ${getRoundBaseFields()}\n          bets {\n           ${getBetBaseFields()}\n            user {\n             ${getUserBaseFields()}\n            }\n          }\n        }\n      }\n  `,\n    { id },\n  )\n  return response.round\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedHash: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface MarketResponse {\n  id: string\n  paused: boolean\n  epoch: {\n    epoch: string\n  }\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n  claimedHash\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import { TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeContext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n  {\n    pid: 0,\n    lpSymbol: 'CAKE',\n    lpAddresses: {\n      97: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 251,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n      56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 252,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n  /**\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\n   */\n  {\n    pid: 410,\n    lpSymbol: 'AMPL-BSC-mp-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6e98beb694ff1cdb1ee130edd2b21b0298683d58',\n    },\n    token: tokens['ampl-bsc-mp'],\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 343,\n    lpSymbol: 'ODDZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3c2c77353E2F6AC1578807b6b2336Bf3a3CbB014',\n    },\n    token: tokens.oddz,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 409,\n    lpSymbol: 'ETH-USDC LP',\n    lpAddresses: {\n      97: '',\n      56: '0xEa26B78255Df2bBC31C1eBf60010D78670185bD0',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.usdc,\n  },\n  {\n    pid: 408,\n    lpSymbol: 'BTCB-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD171B26E4484402de70e3Ea256bE5A2630d7e88D',\n    },\n    token: tokens.btcb,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 347,\n    lpSymbol: 'BONDLY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb8b4383B49d451BBeA63BC4421466E1086da6f18',\n    },\n    token: tokens.bondly,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 407,\n    lpSymbol: 'MARSH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x222f93187f15f354d41ff6a7703ef7e18cdd5103',\n    },\n    token: tokens.marsh,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 406,\n    lpSymbol: 'BORING-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xDfA808Da5CFB9ABA5Fb3748FF85888F79174F378',\n    },\n    token: tokens.boring,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 405,\n    lpSymbol: 'MBOX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8FA59693458289914dB0097F5F366d771B7a7C3F',\n    },\n    token: tokens.mbox,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 404,\n    lpSymbol: 'ATA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xef7767677867552cfa699148b96a03358a9be779',\n    },\n    token: tokens.ata,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 403,\n    lpSymbol: 'MX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x41f049d990d38305504631c9835f6f856bf1ba67',\n    },\n    token: tokens.mx,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 402,\n    lpSymbol: 'bCFX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA0387eBeA6be90849c2261b911fBBD52B4C9eAC4',\n    },\n    token: tokens.bcfx,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 401,\n    lpSymbol: 'QKC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8853e3309a31583ea438f7704681f46f0d4d909b',\n    },\n    token: tokens.qkc,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 400,\n    lpSymbol: 'KTN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x48028de4a9b0d3d91180333d796021ec7757ba1b',\n    },\n    token: tokens.ktn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 399,\n    lpSymbol: 'MTRG-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4dcA4D427511bC327639b222DA18FA5e334F686F',\n    },\n    token: tokens.mtrg,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 398,\n    lpSymbol: 'SWG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x226af4e918fcf3e62e5eeec867a3e78aaa7bb01d',\n    },\n    token: tokens.swg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 397,\n    lpSymbol: 'TUSD-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2e28b9b74d6d99d4697e913b82b41ef1cac51c6c',\n    },\n    token: tokens.tusd,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 396,\n    lpSymbol: 'VRT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xef5212ada83ec2cc105c409df10b8806d20e3b35',\n    },\n    token: tokens.vrt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 395,\n    lpSymbol: 'EZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x51bf99bbae59b67e5ce2fa9c17b683384773f8b3',\n    },\n    token: tokens.ez,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 394,\n    lpSymbol: 'KALM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc74f7243766269dec5b85b0ef4af186e909c1b06',\n    },\n    token: tokens.kalm,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 393,\n    lpSymbol: 'pOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1090c996fd1490d15dd7906322ee676a5cc3cf82',\n    },\n    token: tokens.popen,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 335,\n    lpSymbol: 'LIEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa4963B38b271c0D714593063497Fc786Fa4029Ce',\n    },\n    token: tokens.lien,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 392,\n    lpSymbol: 'WELL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1d94cb25895abd6ccfef863c53372bb462aa6b86',\n    },\n    token: tokens.well,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 391,\n    lpSymbol: 'DERI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdc7188ac11e124b1fa650b73ba88bf615ef15256',\n    },\n    token: tokens.deri,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 390,\n    lpSymbol: 'CHR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6045931e511ef7e53a4a817f971e0ca28c758809',\n    },\n    token: tokens.chr,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 389,\n    lpSymbol: 'CAKE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x804678fa97d91B974ec2af3c843270886528a9E6',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 388,\n    lpSymbol: 'CYC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xecf30fbecfa642012f54212a3be92eef1e48edac',\n    },\n    token: tokens.cyc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 387,\n    lpSymbol: 'XEND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcecfc2789af72ed151589a96a59f3a1abc65c3b5',\n    },\n    token: tokens.xend,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 296,\n    lpSymbol: 'HGET-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF74ee1e10e097dc326a2ad004F9Cc95CB71088d3',\n    },\n    token: tokens.hget,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 386,\n    lpSymbol: 'HOTCROSS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf23bad605e94de0e3b60c9718a43a94a5af43915',\n    },\n    token: tokens.hotcross,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 385,\n    lpSymbol: 'RFOX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8e04b3972b5c25766c681dfd30a8a1cbf6dcc8c1',\n    },\n    token: tokens.rfox,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 384,\n    lpSymbol: 'WMASS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xec95ff6281c3ad8e27372fa6675eb337640b8e5e',\n    },\n    token: tokens.wmass,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 383,\n    lpSymbol: 'UBXT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8d3ff27d2ad6a9556b7c4f82f4d602d20114bc90',\n    },\n    token: tokens.ubxt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 381,\n    lpSymbol: 'BTR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbc7ac609fa730239190a70952e64ee1dfc2530ac',\n    },\n    token: tokens.btr,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 380,\n    lpSymbol: 'τDOGE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2030845Ce7d4224523fd2F03Ca20Afe4aAD1D890',\n    },\n    token: tokens.τdoge,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 379,\n    lpSymbol: 'PMON-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcdb0016d97fd0e7ec2c3b78aa4786cbd8e19c14c',\n    },\n    token: tokens.pmon,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 378,\n    lpSymbol: 'ONE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4d057f769d930eafd597b49d6fb2e1009a73a702',\n    },\n    token: tokens.one,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 377,\n    lpSymbol: 'FINE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc309a6d2f1537922e06f15aa2eb21caa1b2eedb6',\n    },\n    token: tokens.fine,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 376,\n    lpSymbol: 'DOGE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xac109c8025f272414fd9e2faa805a583708a017f',\n    },\n    token: tokens.doge,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 310,\n    lpSymbol: 'bMXX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc20A92a1424b29b78DFaF92FD35D4cf8A06419B4',\n    },\n    token: tokens.bmxx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 375,\n    lpSymbol: 'OIN-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6a00e41561ac36a78dba1d09091b0f00c4e53724',\n    },\n    token: tokens.oin,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 374,\n    lpSymbol: 'HYFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0716725d78081a9e0e1ff81516f5415b399e274d',\n    },\n    token: tokens.hyfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 373,\n    lpSymbol: 'KUN-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xea61020e5a128d2bec67d48f7cfbe3408db7e391',\n    },\n    token: tokens.kun,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 372,\n    lpSymbol: 'KUN-QSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4eafbf68a2d50291ffd163d4e00ad0f040aae707',\n    },\n    token: tokens.kun,\n    quoteToken: tokens.qsd,\n  },\n  {\n    pid: 371,\n    lpSymbol: 'MATH-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb7cada0f120ca46745a024e6b9fe907b2fe10cf3',\n    },\n    token: tokens.math,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 370,\n    lpSymbol: 'mCOIN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbcf01a42f6bc42f3cfe81b05519565044d65d22a',\n    },\n    token: tokens.mcoin,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 369,\n    lpSymbol: 'WIN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x894bd57afd8efc93d9171cb585d11d0977557425',\n    },\n    token: tokens.win,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 368,\n    lpSymbol: 'TRX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3cd338c3bb249b6b3c55799f85a589febbbff9dd',\n    },\n    token: tokens.trx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 367,\n    lpSymbol: 'BTT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x946696344e7d4346b223e1cf77035a76690d6a73',\n    },\n    token: tokens.btt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 366,\n    lpSymbol: 'PNT-pBTC LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdaa89d335926628367b47852989bb22ee62ca5de',\n    },\n    token: tokens.pnt,\n    quoteToken: tokens.pbtc,\n  },\n  {\n    pid: 311,\n    lpSymbol: 'xMARK-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xAa40f1AC20AAFcFEE8595Da606D78C503C7e70A3',\n    },\n    token: tokens.xmark,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 365,\n    lpSymbol: 'BTCB-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf45cd219aef8618a92baa7ad848364a158a24f33',\n    },\n    token: tokens.btcb,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 364,\n    lpSymbol: 'LMT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8271d7eafeeb8f24d7c9fe1acce2ae20611972e5',\n    },\n    token: tokens.lmt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 363,\n    lpSymbol: 'DFD-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x029d66f9c0469450b7b4834b8ddc6a1118cec3e1',\n    },\n    token: tokens.dfd,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 362,\n    lpSymbol: 'ALPACA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7752e1fa9f3a2e860856458517008558deb989e3',\n    },\n    token: tokens.alpaca,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 361,\n    lpSymbol: 'τBTC-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8046fa66753928F35f7Db23ae0188ee6743C2FBA',\n    },\n    token: tokens.τbtc,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 304,\n    lpSymbol: 'SWINGBY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4Fd6D315bEf387fAD2322fbc64368fC443F0886D',\n    },\n    token: tokens.swingby,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 360,\n    lpSymbol: 'XED-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa7A0b605343dF36B748FF4B5f7578b3F2D0651CE',\n    },\n    token: tokens.xed,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 359,\n    lpSymbol: 'HAKKA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2C624C9Ecf16Cb81aB85cC2C0B0c5e12A09AFDa6',\n    },\n    token: tokens.hakka,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 358,\n    lpSymbol: 'CGG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0604471c532F9fEBAD3E37190B667f44BD0894b3',\n    },\n    token: tokens.cgg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 357,\n    lpSymbol: 'SUTER-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2d5DB889392Bc3c8B023A8631ca230A033eEA1B8',\n    },\n    token: tokens.suter,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 356,\n    lpSymbol: 'bROOBEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x950FD020F8E4B8C57285EC7020b7a204348dadFa',\n    },\n    token: tokens.broobee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 355,\n    lpSymbol: 'HZN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xDc9a574b9B341D4a98cE29005b614e1E27430E74',\n    },\n    token: tokens.hzn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 354,\n    lpSymbol: 'ALPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4cC442220BE1cE560C1f2573f8CA8f460B3E4172',\n    },\n    token: tokens.alpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 353,\n    lpSymbol: 'PERL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x61010e6CbA3b56ba47E9dFd56Da682daCFe76131',\n    },\n    token: tokens.perl,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 352,\n    lpSymbol: 'TLM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE6b421a4408c82381b226Ab5B6F8C4b639044359',\n    },\n    token: tokens.tlm,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 351,\n    lpSymbol: 'JGN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7275278C94b5e20708380561C4Af98F38dDC6374',\n    },\n    token: tokens.jgn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 350,\n    lpSymbol: 'EPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xddE420cbB3794ebD8FFC3Ac69F9c78e5d1411870',\n    },\n    token: tokens.eps,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 349,\n    lpSymbol: 'ARPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9730c791743300E9f984C9264395ce705A55Da7c',\n    },\n    token: tokens.arpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 348,\n    lpSymbol: 'ITAM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd02DA76c813b9cd4516eD50442923E625f90228f',\n    },\n    token: tokens.itam,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 346,\n    lpSymbol: 'TKO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFFd4B200d3C77A0B691B5562D804b3bd54294e6e',\n    },\n    token: tokens.tko,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 345,\n    lpSymbol: 'APYS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x510b29a93ebf098f3fC24A16541aAA0114D07056',\n    },\n    token: tokens.apys,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 344,\n    lpSymbol: 'HOO-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3e42C1f7239231E3752B507764445dd8e6A570d5',\n    },\n    token: tokens.hoo,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 342,\n    lpSymbol: 'EASY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x20c6De8983Fb2D641c55004646aEF40b4EA66E18',\n    },\n    token: tokens.easy,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 341,\n    lpSymbol: 'NRV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE482249Cd295C0d1e9D2baAEE71e66de21024C68',\n    },\n    token: tokens.nrv,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 340,\n    lpSymbol: 'DEGO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF1Ec67fA1881796BFf63Db3E1A301cE9cb787Fad',\n    },\n    token: tokens.dego,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 339,\n    lpSymbol: 'GUM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x28Ea5894D4DBbE90bB58eE3BAB2869387d711c87',\n    },\n    token: tokens.gum,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 338,\n    lpSymbol: 'pBTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0362ba706DFE8ED12Ec1470aB171d8Dcb1C72B8D',\n    },\n    token: tokens.pbtc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 337,\n    lpSymbol: 'DFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x24d3B0eD4C444A4f6882d527cBF67aDc8c026582',\n    },\n    token: tokens.dft,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 336,\n    lpSymbol: 'SWTH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x123D475E13aA54A43a7421d94CAa4459dA021c77',\n    },\n    token: tokens.swth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 334,\n    lpSymbol: 'ZIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6A97867a4b7Eb7646ffB1F359ad582e9903aa1C2',\n    },\n    token: tokens.zil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 333,\n    lpSymbol: 'pCWS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6615CE60D71513aA4849269dD63821D324A23F8C',\n    },\n    token: tokens.pcws,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 332,\n    lpSymbol: 'bBADGER-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5A58609dA96469E9dEf3fE344bC39B00d18eb9A5',\n    },\n    token: tokens.bbadger,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 331,\n    lpSymbol: 'bDIGG-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x81d776C90c89B8d51E9497D58338933127e2fA80',\n    },\n    token: tokens.bdigg,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 330,\n    lpSymbol: 'LTO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa5Bb44c6F5fD9B836E5a654c8AbbCCc96A15deE5',\n    },\n    token: tokens.lto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 329,\n    lpSymbol: 'MIR-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x89666d026696660e93Bf6edf57B71A68615768B7',\n    },\n    token: tokens.mir,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 328,\n    lpSymbol: 'TRADE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8F6baf368E7A4f6e2C9c995f22702d5e654A0237',\n    },\n    token: tokens.trade,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 327,\n    lpSymbol: 'DUSK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x678EDb8B268e73dB57b7694c163e1dc296b6e219',\n    },\n    token: tokens.dusk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 326,\n    lpSymbol: 'BIFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3f1A9f3D9aaD8bD339eD4853F345d2eF89fbfE0c',\n    },\n    token: tokens.bifi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 325,\n    lpSymbol: 'TXL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1434BB50196A0C7eA825940b1DFd8aAd25d79817',\n    },\n    token: tokens.txl,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 324,\n    lpSymbol: 'COS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe98585bBb2dc81854fF100A3d9D7B0F53E0dafEd',\n    },\n    token: tokens.cos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 323,\n    lpSymbol: 'BUNNY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5aFEf8567414F29f0f927A0F2787b188624c10E2',\n    },\n    token: tokens.bunny,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 322,\n    lpSymbol: 'ALICE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcAD7019D6d84a3294b0494aEF02e73BD0f2572Eb',\n    },\n    token: tokens.alice,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 321,\n    lpSymbol: 'FOR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE60B4e87645093A42fa9dcC5d0C8Df6E67f1f9d2',\n    },\n    token: tokens.for,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 320,\n    lpSymbol: 'BUX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x222C3CbB89647bF77822435Bd4c234A04272A77A',\n    },\n    token: tokens.bux,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 319,\n    lpSymbol: 'NULS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x853784B7BDe87d858555715c0123374242db7943',\n    },\n    token: tokens.nuls,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 318,\n    lpSymbol: 'BELT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF3Bc6FC080ffCC30d93dF48BFA2aA14b869554bb',\n    },\n    token: tokens.belt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 317,\n    lpSymbol: 'RAMP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE834bf723f5bDff34a5D1129F3c31Ea4787Bc76a',\n    },\n    token: tokens.ramp,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 316,\n    lpSymbol: 'BFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x153Ad7d25B0b810497483d0cEE8AF42Fc533FeC8',\n    },\n    token: tokens.bfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 315,\n    lpSymbol: 'DEXE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3578B1f9BCE98D2F4D293b422d8850fdf48B1f21',\n    },\n    token: tokens.dexe,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 314,\n    lpSymbol: 'BEL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x69DEE989c30b5fFe40867f5FC14F00E4bCE7B681',\n    },\n    token: tokens.bel,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 313,\n    lpSymbol: 'TPT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6D0c831254221ba121fB53fb44Df289A6558867d',\n    },\n    token: tokens.tpt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 312,\n    lpSymbol: 'WATCH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x13321AcfF4A27f3d2bcA64b8bEaC6e5FdAAAf12C',\n    },\n    token: tokens.watch,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 309,\n    lpSymbol: 'IOTX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc13aA76AAc067c86aE38028019F414D731b3D86A',\n    },\n    token: tokens.iotx,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 308,\n    lpSymbol: 'BOR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe094c686aD6cDda57b9564457F541FBF099B948A',\n    },\n    token: tokens.bor,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 307,\n    lpSymbol: 'bOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc7A9c2af263ebB86139Cca9349e49b17129Ba033',\n    },\n    token: tokens.bopen,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 306,\n    lpSymbol: 'SUSHI-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x16aFc4F2Ad82986bbE2a4525601F8199AB9c832D',\n    },\n    token: tokens.sushi,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 305,\n    lpSymbol: 'DODO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA9986Fcbdb23c2E8B11AB40102990a08f8E58f06',\n    },\n    token: tokens.dodo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 303,\n    lpSymbol: 'BRY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x21dD71aB78EDE3033c976948f769D506E4F489eE',\n    },\n    token: tokens.bry,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 302,\n    lpSymbol: 'ZEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8e799cB0737525CeB8A6C6Ad07f748535fF6377B',\n    },\n    token: tokens.zee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 301,\n    lpSymbol: 'SWGb-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x856f9AD94cA8680B899214Bb1EB3d235a3C33Afe',\n    },\n    token: tokens.swgb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 300,\n    lpSymbol: 'COMP-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x37908620dEf1491Dd591b5a2d16022A33cDDA415',\n    },\n    token: tokens.comp,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 299,\n    lpSymbol: 'SFP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x942b294e59a8c47a0F7F20DF105B082710F7C305',\n    },\n    token: tokens.sfp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 298,\n    lpSymbol: 'LINA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC5768c5371568Cf1114cddD52CAeD163A42626Ed',\n    },\n    token: tokens.lina,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 297,\n    lpSymbol: 'LIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1F37d4226d23d09044B8005c127C0517BD7e94fD',\n    },\n    token: tokens.lit,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 295,\n    lpSymbol: 'BDO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4288706624e3dD839b069216eB03B8B9819C10d2',\n    },\n    token: tokens.bdo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 294,\n    lpSymbol: 'EGLD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcD68856b6E72E99b5eEaAE7d41Bb4A3b484c700D',\n    },\n    token: tokens.egld,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 293,\n    lpSymbol: 'UST-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x05faf555522Fa3F93959F86B41A3808666093210',\n    },\n    token: tokens.ust,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 292,\n    lpSymbol: 'mAMZN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC05654C66756eBB82c518598c5f1ea1a0199a563',\n    },\n    token: tokens.mamzn,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 291,\n    lpSymbol: 'mGOOGL-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA3BfBbAd526C6B856B1Fdf73F99BCD894761fbf3',\n    },\n    token: tokens.mgoogl,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 290,\n    lpSymbol: 'mNFLX-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x91417426C3FEaA3Ca795921eB9FdD9715ad92537',\n    },\n    token: tokens.mnflx,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 289,\n    lpSymbol: 'mTSLA-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xEc6b56a736859AE8ea4bEdA16279Ecd8c60dA7EA',\n    },\n    token: tokens.mtsla,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 288,\n    lpSymbol: 'wSOTE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7653D2c31440f04d2c6520D482dC5DbD7650f70a',\n    },\n    token: tokens.wsote,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 287,\n    lpSymbol: 'FRONT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC6b668548aA4A56792e8002A920d3159728121D5',\n    },\n    token: tokens.front,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 286,\n    lpSymbol: 'Helmet-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC869A9943b702B03770B6A92d2b2d25cf3a3f571',\n    },\n    token: tokens.helmet,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 285,\n    lpSymbol: 'BTCST-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB2678C414ebC63c9CC6d1a0fC45f43E249B50fdE',\n    },\n    token: tokens.btcst,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 284,\n    lpSymbol: 'LTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\n    },\n    token: tokens.ltc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 283,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1',\n    },\n    token: tokens.usdc,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 282,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489',\n    },\n    token: tokens.dai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 281,\n    lpSymbol: 'BSCX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x47C42b0A056A9C6e9C65b9Ef79020Af518e767A5',\n    },\n    token: tokens.bscx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 280,\n    lpSymbol: 'TEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1B415C3ec8095AfBF9d78882b3a6263c4ad141B5',\n    },\n    token: tokens.ten,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 279,\n    lpSymbol: 'bALBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x24EB18bA412701f278B172ef96697c4622b19da6',\n    },\n    token: tokens.balbt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 278,\n    lpSymbol: 'REEF-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd63b5CecB1f40d626307B92706Df357709D05827',\n    },\n    token: tokens.reef,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 277,\n    lpSymbol: 'Ditto-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8645148dE4E339964bA480AE3478653b5bc6E211',\n    },\n    token: tokens.ditto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 276,\n    lpSymbol: 'VAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x133ee93FE93320e1182923E1a640912eDE17C90C',\n    },\n    token: tokens.vai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 275,\n    lpSymbol: 'BLK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x356Dd24BfF8e23BdE0430f00ad0C290E33438bD7',\n    },\n    token: tokens.blink,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 274,\n    lpSymbol: 'UNFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x44EA47F2765fd5D26b7eF0222736AD6FD6f61950',\n    },\n    token: tokens.unfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 273,\n    lpSymbol: 'HARD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x73566ca86248bD12F0979793e4671e99a40299A7',\n    },\n    token: tokens.hard,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 272,\n    lpSymbol: 'CTK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x460b4193Ec4C1a17372Aa5FDcd44c520ba658646',\n    },\n    token: tokens.ctk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 271,\n    lpSymbol: 'SXP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD8E2F8b6Db204c405543953Ef6359912FE3A88d6',\n    },\n    token: tokens.sxp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 270,\n    lpSymbol: 'INJ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1BdCebcA3b93af70b58C41272AEa2231754B23ca',\n    },\n    token: tokens.inj,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 269,\n    lpSymbol: 'FIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD9bCcbbbDFd9d67BEb5d2273102CE0762421D1e3',\n    },\n    token: tokens.fil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 268,\n    lpSymbol: 'UNI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x014608E87AF97a054C9a49f81E1473076D51d9a3',\n    },\n    token: tokens.uni,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 267,\n    lpSymbol: 'YFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xCE383277847f8217392eeA98C5a8B4a7D27811b0',\n    },\n    token: tokens.yfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 266,\n    lpSymbol: 'ATOM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x468b2DC8DC75990eE3E9dc0648965Ad6294E7914',\n    },\n    token: tokens.atom,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 265,\n    lpSymbol: 'XRP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x03F18135c44C64ebFdCBad8297fe5bDafdBbdd86',\n    },\n    token: tokens.xrp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 264,\n    lpSymbol: 'USDT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 263,\n    lpSymbol: 'ALPHA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xACF47CBEaab5c8A6Ee99263cfE43995f89fB3206',\n    },\n    token: tokens.alpha,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 262,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082',\n    },\n    token: tokens.btcb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 261,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 260,\n    lpSymbol: 'XVS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7EB5D86FD78f3852a3e0e064f2842d45a3dB6EA2',\n    },\n    token: tokens.xvs,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 259,\n    lpSymbol: 'TWT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3DcB1787a95D2ea0Eb7d00887704EeBF0D79bb13',\n    },\n    token: tokens.twt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 258,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 257,\n    lpSymbol: 'LINK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x824eb9faDFb377394430d2744fa7C42916DE3eCe',\n    },\n    token: tokens.link,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 256,\n    lpSymbol: 'EOS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB6e34b5C65Eda51bb1BD4ea5F79d385Fb94b9504',\n    },\n    token: tokens.eos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 255,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF',\n    },\n    token: tokens.dot,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 254,\n    lpSymbol: 'BAND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x168B273278F3A8d302De5E879aA30690B7E6c28f',\n    },\n    token: tokens.band,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 253,\n    lpSymbol: 'ADA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x28415ff2C35b65B9E5c7de82126b4015ab9d031F',\n    },\n    token: tokens.ada,\n    quoteToken: tokens.wbnb,\n  },\n  /**\n   * V2 farms, set to be removed once unstaked\n   */\n  {\n    pid: 139,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFB7E9FE9D13561AdA7131Fa746942a14F7dd4Cf6',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 250,\n    lpSymbol: 'τBTC-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFD09CDbd6A7dCAd8AC47df4F139443a729264763',\n    },\n    token: tokens.τbtc,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 193,\n    lpSymbol: 'SWINGBY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA0e3F72BAFcc5d52F0052a39165FD40D3d4d34Fc',\n    },\n    token: tokens.swingby,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 249,\n    lpSymbol: 'XED-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xBbE20dA99db94Fa1077F1C9A5d256761dAf89C60',\n    },\n    token: tokens.xed,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 248,\n    lpSymbol: 'HAKKA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9ed1ca73AA8F1ccdc3c3a174E77014f8900411CE',\n    },\n    token: tokens.hakka,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 247,\n    lpSymbol: 'CGG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB9aA8B0d67DE546aaa82091065a64B7F1C4B1a1F',\n    },\n    token: tokens.cgg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 246,\n    lpSymbol: 'SUTER-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6f41c9226fa89a552009c3AC087BA74b83772C52',\n    },\n    token: tokens.suter,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 245,\n    lpSymbol: 'bROOBEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5Ac5184eA06dE24ce8ED2133f58b4Aa2CEd2dC3b',\n    },\n    token: tokens.broobee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 244,\n    lpSymbol: 'HZN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF7fcD7e7B3853bf59bCA9183476F218ED07eD3B0',\n    },\n    token: tokens.hzn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 243,\n    lpSymbol: 'ALPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xBB41898A3051A6b6D4A36a1c43e906b05799B744',\n    },\n    token: tokens.alpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 242,\n    lpSymbol: 'PERL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB1C2e08A992a619DA570425E78828A8508654f4F',\n    },\n    token: tokens.perl,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 241,\n    lpSymbol: 'TLM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x25f15Cb3D3B3753702E1d5c4E5f6F0720b197843',\n    },\n    token: tokens.tlm,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 240,\n    lpSymbol: 'JGN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8fD5ca41B2B44e4713590584f97c85f9FF59F00D',\n    },\n    token: tokens.jgn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 239,\n    lpSymbol: 'EPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x43bc6C256240e657Ad84aFb86825E21B48FEDe78',\n    },\n    token: tokens.eps,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 238,\n    lpSymbol: 'ARPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD55e5A7b886aE9657b95641c6A7dc5A662EcAbF3',\n    },\n    token: tokens.arpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 237,\n    lpSymbol: 'ITAM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3e78b0eD211a49e263fF9b3F0B410932a021E368',\n    },\n    token: tokens.itam,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 236,\n    lpSymbol: 'BONDLY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2205a6424ec4D74a7588450fB71ffd0C4A3Ead65',\n    },\n    token: tokens.bondly,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 235,\n    lpSymbol: 'TKO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc43EdF4a7e89160135C2553E9868446fef9C18DD',\n    },\n    token: tokens.tko,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 234,\n    lpSymbol: 'APYS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7A5523f50a80790cAD011167E20bD21056A2f04A',\n    },\n    token: tokens.apys,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 233,\n    lpSymbol: 'HOO-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc12dAD966505443b5aad7b0C55716c13d285B520',\n    },\n    token: tokens.hoo,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 232,\n    lpSymbol: 'ODDZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3B0a7d1030bcDFf45ABB7B03C04110FcCc8095BC',\n    },\n    token: tokens.oddz,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 231,\n    lpSymbol: 'EASY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4b0ec41404a7FF59BaE33C8Dc420804c58B7bF24',\n    },\n    token: tokens.easy,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 230,\n    lpSymbol: 'NRV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x25dea33a42c7775F6945fae22A8fFBfAC9fB22CD',\n    },\n    token: tokens.nrv,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 229,\n    lpSymbol: 'DEGO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6108aBd546AF17D8f7aFAe59EBfb4A01132A11Bb',\n    },\n    token: tokens.dego,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 228,\n    lpSymbol: 'GUM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA99d1926a3c15DC4Fb83aB3Fafd63B6C3E87CF22',\n    },\n    token: tokens.gum,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 227,\n    lpSymbol: 'pBTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xaccd6673FFc24cD56B080D71384327f78fD92496',\n    },\n    token: tokens.pbtc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 226,\n    lpSymbol: 'DFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe86d075051f20eb8c741007Cb8e262f4519944ee',\n    },\n    token: tokens.dft,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 225,\n    lpSymbol: 'SWTH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4f6dfFc9795d35dc1D92c2a7B23Cb7d6EF190B33',\n    },\n    token: tokens.swth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 224,\n    lpSymbol: 'LIEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbe7BDE4aD1c136038Dc9f57ef94d1d16e6F9CbF7',\n    },\n    token: tokens.lien,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 223,\n    lpSymbol: 'ZIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcBDf499db66Df19A66aB48F16C790FF9eE872add',\n    },\n    token: tokens.zil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 222,\n    lpSymbol: 'pCWS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe3D941e74141311436F82523817EBaa26462967d',\n    },\n    token: tokens.pcws,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 221,\n    lpSymbol: 'bBADGER-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x87Ae7b5c43D4e160cDB9427a78BA87B9503ee37b',\n    },\n    token: tokens.bbadger,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 220,\n    lpSymbol: 'bDIGG-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfbfa92e037e37F946c0105902640914E3aCe6752',\n    },\n    token: tokens.bdigg,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 219,\n    lpSymbol: 'LTO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF62e92292772F24EAa6B6B8a105c9FC7B8F31EC5',\n    },\n    token: tokens.lto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 218,\n    lpSymbol: 'MIR-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x905186a70ba3Eb50090d1d0f6914F5460B4DdB40',\n    },\n    token: tokens.mir,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 217,\n    lpSymbol: 'TRADE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x52fCfB6d91Bcf1F1f6d375D0f6c303688b0E8550',\n    },\n    token: tokens.trade,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 216,\n    lpSymbol: 'DUSK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x69773f622cE228Ca7dEd42D8C34Eba8582e85dcA',\n    },\n    token: tokens.dusk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 215,\n    lpSymbol: 'BIFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x01956F08A55e4FF9775bc01aF6ACb09144564837',\n    },\n    token: tokens.bifi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 214,\n    lpSymbol: 'TXL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8Ba7eB4056338fd7271E1b7431C8ca3827eF907c',\n    },\n    token: tokens.txl,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 213,\n    lpSymbol: 'COS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xAfB2e729A24629aBdE8E55CEB0e1f899bEe0f70f',\n    },\n    token: tokens.cos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 212,\n    lpSymbol: 'BUNNY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x283FA8d459Da6e3165B2faF7FA0DD0137503DECf',\n    },\n    token: tokens.bunny,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 211,\n    lpSymbol: 'ALICE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9e1BB5033d47BF8F16FC017CEC0959De7FF00833',\n    },\n    token: tokens.alice,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 210,\n    lpSymbol: 'FOR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xaBB817B07663521Cf64B006EC9D0FF185b65cfE5',\n    },\n    token: tokens.for,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 209,\n    lpSymbol: 'BUX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7aA4eb5c3bF33e3AD41A47e26b3Bd9b902984610',\n    },\n    token: tokens.bux,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 208,\n    lpSymbol: 'NULS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xaB46737CAAFbB99999f8b91E4D3C6D4D28E10e05',\n    },\n    token: tokens.nuls,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 207,\n    lpSymbol: 'BELT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x446ff2C0F5350bF2dadD0e0F1AaAA573b362CA6B',\n    },\n    token: tokens.belt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 206,\n    lpSymbol: 'RAMP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6ED589e69D1927AC45054cBb6E57877879384d6F',\n    },\n    token: tokens.ramp,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 205,\n    lpSymbol: 'BFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFFA2357f1E6f48d74b1c18c363c3Fe58A032405a',\n    },\n    token: tokens.bfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 204,\n    lpSymbol: 'DEXE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x534b0b0700c0cfF9785852707f07f60E7C0bc07E',\n    },\n    token: tokens.dexe,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 203,\n    lpSymbol: 'BEL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2013265224E3cB6A53C67130F9Fe53Ae36CFcfdd',\n    },\n    token: tokens.bel,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 202,\n    lpSymbol: 'TPT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC14c2dd21d6aEA3C2068A1F8e58d41D3c28F9288',\n    },\n    token: tokens.tpt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 201,\n    lpSymbol: 'WATCH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD5fBfFf5faB9d29f614d9bd50AF9b1356C53049C',\n    },\n    token: tokens.watch,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 200,\n    lpSymbol: 'xMARK-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x601aE41C5a65b2089a6af2CcfaF984896a1f52AD',\n    },\n    token: tokens.xmark,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 199,\n    lpSymbol: 'bMXX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x037d38c7DfF5732DAA5f8C05478Eb75cdf24f42B',\n    },\n    token: tokens.bmxx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 198,\n    lpSymbol: 'IOTX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8503462D0d4D3ce73e857bCC7D0Ef1125B0d66fF',\n    },\n    token: tokens.iotx,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 197,\n    lpSymbol: 'BOR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE0243Ce3b50bd551168cE6964F178507d0a1acD5',\n    },\n    token: tokens.bor,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 196,\n    lpSymbol: 'bOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD2FcF98EaeD2c08e9BcA854802C07b93D27913aC',\n    },\n    token: tokens.bopen,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 195,\n    lpSymbol: 'SUSHI-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3BECbb09F622187B544C0892EeDeB58C004117e1',\n    },\n    token: tokens.sushi,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 194,\n    lpSymbol: 'DODO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x220e34306a93002fB7947C9Fc633d6f538bd5032',\n    },\n    token: tokens.dodo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 192,\n    lpSymbol: 'BRY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC3E303647cbD43EC22989275e7ecFA8952A6BA02',\n    },\n    token: tokens.bry,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 191,\n    lpSymbol: 'ZEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6d1299B158bd13F4B50e951aaBf2Aa501FD87E52',\n    },\n    token: tokens.zee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 190,\n    lpSymbol: 'SWGb-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd2A5008d555371e97F30B6dD71597b4F1eDB0f20',\n    },\n    token: tokens.swgb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 189,\n    lpSymbol: 'COMP-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6A55a9176f11c1118f01CBaf6c4033a5c1B22a81',\n    },\n    token: tokens.comp,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 188,\n    lpSymbol: 'SFP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x01744B868fe98dB669EBf4e9CA557462BAA6097c',\n    },\n    token: tokens.sfp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 187,\n    lpSymbol: 'LINA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb923A2Beeb0834528D20b8973A2c69088571aA9E',\n    },\n    token: tokens.lina,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 186,\n    lpSymbol: 'LIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x41D69Beda3AFF2FFE48E715e2f4248Cb272cFf30',\n    },\n    token: tokens.lit,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 185,\n    lpSymbol: 'HGET-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x239aD1874114B2235485e34b14c48dB73CCA3ffb',\n    },\n    token: tokens.hget,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 184,\n    lpSymbol: 'BDO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF7045D7dE334a3F6c1254f98167b2af130eEA8E6',\n    },\n    token: tokens.bdo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 183,\n    lpSymbol: 'EGLD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB4670bBEce2D02c4D30786D173985A984686042C',\n    },\n    token: tokens.egld,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 182,\n    lpSymbol: 'UST-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1719606031F1E0B3CCaCa11A2CF550Ef8feBEB0F',\n    },\n    token: tokens.ust,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 181,\n    lpSymbol: 'mAMZN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2c065E42B464ef38480778B0624A207A09042481',\n    },\n    token: tokens.mamzn,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 180,\n    lpSymbol: 'mGOOGL-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74d8Dbac5053d31E904a821A3B4C411Bd4dd2307',\n    },\n    token: tokens.mgoogl,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 179,\n    lpSymbol: 'mNFLX-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe1d76359FE4Eb7f0dAd1D719256c22890864718E',\n    },\n    token: tokens.mnflx,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 178,\n    lpSymbol: 'mTSLA-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x36285DDD149949f366b5aFb3f41Cea71d35B8c9e',\n    },\n    token: tokens.mtsla,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 177,\n    lpSymbol: 'wSOTE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe5909de3822d589c220Fb4FA1660A0Fd251Fa87d',\n    },\n    token: tokens.wsote,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 176,\n    lpSymbol: 'FRONT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x84Df48B3e900C79539F6c523D6F528802BeAa713',\n    },\n    token: tokens.front,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 175,\n    lpSymbol: 'Helmet-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD09648792d7e77523ae311Fa5A8F38E4684A5f15',\n    },\n    token: tokens.helmet,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 174,\n    lpSymbol: 'BTCST-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf967845A6D30C44b555C49C50530076dF5D7fd75',\n    },\n    token: tokens.btcst,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 173,\n    lpSymbol: 'LTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x286E8d71722c585c9A82876B1B2FB4dEe9fc536E',\n    },\n    token: tokens.ltc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 172,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x05FC2ac8a4FA697501087C916c87b8a5dc4f7b46',\n    },\n    token: tokens.usdc,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 171,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdaFE10aA3AB6758596aDAC70f6873C49F5a9bf86',\n    },\n    token: tokens.dai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 170,\n    lpSymbol: 'BSCX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5fE5394BBc394345737b8e6e48be2804E89eC0eB',\n    },\n    token: tokens.bscx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 169,\n    lpSymbol: 'TEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x003C4d60de42eAD30739dD204BD153fE69E20Fb2',\n    },\n    token: tokens.ten,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 168,\n    lpSymbol: 'bALBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1B8ab50d894CfE793B44057F681A950E87Bd0331',\n    },\n    token: tokens.balbt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 167,\n    lpSymbol: 'REEF-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x074ed2De503580887073A0F788E035C0fbe13F48',\n    },\n    token: tokens.reef,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 166,\n    lpSymbol: 'Ditto-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb33D432eACe45DF62F0145228B550b214DCaA6D4',\n    },\n    token: tokens.ditto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 165,\n    lpSymbol: 'VAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9d95063661fa34B67E0Be0cc71Cf92fc6126aF37',\n    },\n    token: tokens.vai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 164,\n    lpSymbol: 'BLK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdA5a79fFe24739876a52AEF0d419aBB3b2517922',\n    },\n    token: tokens.blink,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 163,\n    lpSymbol: 'UNFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x029f944CD3afa7c229122b19c706d8B7c01e062a',\n    },\n    token: tokens.unfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 162,\n    lpSymbol: 'HARD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x158e337e7Dcfcd8FC512840208BB522d122bB19d',\n    },\n    token: tokens.hard,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 161,\n    lpSymbol: 'CTK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcbb3fCE7134aF9ef2f3DCe0EAE96db68961b1337',\n    },\n    token: tokens.ctk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 160,\n    lpSymbol: 'SXP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6294D8518b7321dc22E32AA907A89B1DAfc1aDbB',\n    },\n    token: tokens.sxp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 159,\n    lpSymbol: 'INJ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0444712EE8DFF8913B2b44CB1D2a0273b4CDaBe9',\n    },\n    token: tokens.inj,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 158,\n    lpSymbol: 'FIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD027c0B352578b1Cf57f472107591CaE5fa27Eb1',\n    },\n    token: tokens.fil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 157,\n    lpSymbol: 'UNI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2937202a53C82E36bC8beCFBe79795bedF284804',\n    },\n    token: tokens.uni,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 156,\n    lpSymbol: 'YFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfffad7374c894E65b498BDBD489a9a5324A59F60',\n    },\n    token: tokens.yfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 155,\n    lpSymbol: 'YFII-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x237E7016Ff50D3B704A7e07571aE08628909A116',\n    },\n    token: tokens.yfii,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 154,\n    lpSymbol: 'ATOM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7DD05eF533b1eBCE7815c90678D4B7344E32b8c9',\n    },\n    token: tokens.atom,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 153,\n    lpSymbol: 'XRP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0F640E3ec77415Fd810D18B3ac000cD8a172E22f',\n    },\n    token: tokens.xrp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 152,\n    lpSymbol: 'USDT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4160910ca32eAD83B6d4b32107974397D2579c2d',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 151,\n    lpSymbol: 'ALPHA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0edAA38Bd263E83fAECbC8476822800F30eE6028',\n    },\n    token: tokens.alpha,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 150,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x356b7d0d3c54F22C82B7a670C6Ba9E2381b0624c',\n    },\n    token: tokens.btcb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 149,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4D7078a6B348766E7a16cD6e6fCb3064721bc6a6',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 148,\n    lpSymbol: 'XVS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x77B5dB64fD4Cf5B699855420fF2608B2EA6708B3',\n    },\n    token: tokens.xvs,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 147,\n    lpSymbol: 'TWT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x34910518Faf5bfd3a4D15ccFE104B63f06ee3d85',\n    },\n    token: tokens.twt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 146,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x28b81C6b155fd9152AE4A09c4eeB7E7F1C114FaC',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 145,\n    lpSymbol: 'LINK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x380941fFd7b7cbf4AEbBfa8A26aa80c2f6570909',\n    },\n    token: tokens.link,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 144,\n    lpSymbol: 'EOS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x082A80b3a55BD3B320a16678784186a979882b21',\n    },\n    token: tokens.eos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 143,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3aFfc4dd05286ed6B7206Fc85219d222130e35a9',\n    },\n    token: tokens.dot,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 142,\n    lpSymbol: 'BAND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x473390697036E7611a670575eA9141583471fF47',\n    },\n    token: tokens.band,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 141,\n    lpSymbol: 'ADA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xec0C5719cC100DfB6c6F371bb48d3D079ab6A6D2',\n    },\n    token: tokens.ada,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 140,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9bdEdb0c876fC0Da79D945DF28942b898Af89Fc7',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n  /**\n   * All farms below here are from v1 and are to be set to 0x\n   */\n  {\n    pid: 1,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n      56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 136,\n    lpSymbol: 'τBTC-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2d4e52c48fd18ee06d3959e82ab0f773c41b9277',\n    },\n    token: tokens.τbtc,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 76,\n    lpSymbol: 'SWINGBY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4576C456AF93a37a096235e5d83f812AC9aeD027',\n    },\n    token: tokens.swingby,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 135,\n    lpSymbol: 'XED-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x718d3baa161e1a38758bb0f1fe751e401f431ac4',\n    },\n    token: tokens.xed,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 134,\n    lpSymbol: 'HAKKA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x56bc8de6e90a8454cb2614b33e750d960aecdf12',\n    },\n    token: tokens.hakka,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 133,\n    lpSymbol: 'CGG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x484c60f6202c8043DCA0236bB3101ada7ec50AD4',\n    },\n    token: tokens.cgg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 132,\n    lpSymbol: 'SUTER-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6Ff75C20656A0E4745E7c114972D361F483AFa5f',\n    },\n    token: tokens.suter,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 131,\n    lpSymbol: 'bROOBEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9e6f9f3382f9edc683203b528222c554c92382c2',\n    },\n    token: tokens.broobee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 130,\n    lpSymbol: 'HZN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xee4ca18e91012bf87fefde3dd6723a8834347a4d',\n    },\n    token: tokens.hzn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 129,\n    lpSymbol: 'ALPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x837cd42282801e340f1f17aadf3166fee99fb07c',\n    },\n    token: tokens.alpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 128,\n    lpSymbol: 'PERL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x044e9985c14a547d478b1e3d4a4e562e69c8f936',\n    },\n    token: tokens.perl,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 127,\n    lpSymbol: 'TLM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x34e821e785A93261B697eBD2797988B3AA78ca33',\n    },\n    token: tokens.tlm,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 125,\n    lpSymbol: 'JGN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x890479844484D67e34B99e1BBc1468231b254c08',\n    },\n    token: tokens.jgn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 124,\n    lpSymbol: 'EPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf9045866e7b372def1eff3712ce55fac1a98daf0',\n    },\n    token: tokens.eps,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 123,\n    lpSymbol: 'ARPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfb29fca952b478ddcb8a43f57176161e498225b1',\n    },\n    token: tokens.arpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 122,\n    lpSymbol: 'ITAM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xCdC53345192D0e31eEAD03D7E9e008Ee659FAEbE',\n    },\n    token: tokens.itam,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 121,\n    lpSymbol: 'BONDLY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x67581bfb4fc13bb73c71489b504e9b5354769063',\n    },\n    token: tokens.bondly,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 120,\n    lpSymbol: 'TKO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x496a8b716A3A3410B16e71E3c906968CE4488e52',\n    },\n    token: tokens.tko,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 119,\n    lpSymbol: 'APYS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE5783Cc9dFb3E7e474B81B07369a008e80F1cEdb',\n    },\n    token: tokens.apys,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 118,\n    lpSymbol: 'HOO-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3c9e55edbd937ae0ad8c084a1a8302110612a371',\n    },\n    token: tokens.hoo,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 117,\n    lpSymbol: 'ODDZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x61376b56ff33c618b115131712a4138f98810a6a',\n    },\n    token: tokens.oddz,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 116,\n    lpSymbol: 'EASY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbd1ec00b0d1cca9d5b28fbe0bb7d664238af2ffa',\n    },\n    token: tokens.easy,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 115,\n    lpSymbol: 'NRV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5a805994a2e30ac710e7376ccc0211285bd4dd92',\n    },\n    token: tokens.nrv,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 114,\n    lpSymbol: 'DEGO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x17F0b998B81cE75074a7CDAdAe6D63Da3cb23572',\n    },\n    token: tokens.dego,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 113,\n    lpSymbol: 'GUM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x155645cDF8e4B28d5B7790b65d9f79efc222740C',\n    },\n    token: tokens.gum,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 112,\n    lpSymbol: 'pBTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb5f6f7dad23132d40d778085d795bd0fd4b859cd',\n    },\n    token: tokens.pbtc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 111,\n    lpSymbol: 'DFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8FbCbD7e30b1733965a8980bf7Ae2ca1c0C456cc',\n    },\n    token: tokens.dft,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 110,\n    lpSymbol: 'SWTH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8c5cFfad6cddb96Ee33DA685D0d50a37e030E115',\n    },\n    token: tokens.swth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 109,\n    lpSymbol: 'LIEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcd14855150335AAE984aa6D281E090c27035C692',\n    },\n    token: tokens.lien,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 108,\n    lpSymbol: 'ZIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc746337b5f800a0e19ed4eb3bda03ff1401b8167',\n    },\n    token: tokens.zil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 107,\n    lpSymbol: 'pCWS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x889e81d25bffba437b2a5d3e0e4fc58a0e2749c5',\n    },\n    token: tokens.pcws,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 106,\n    lpSymbol: 'bBADGER-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x10F461CEAC7A17F59e249954Db0784d42EfF5DB5',\n    },\n    token: tokens.bbadger,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 104,\n    lpSymbol: 'bDIGG-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE1E33459505bB3763843a426F7Fd9933418184ae',\n    },\n    token: tokens.bdigg,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 103,\n    lpSymbol: 'LTO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x85644fcd00c401e1a0a0a10d2ae6bbe04a73e4ab',\n    },\n    token: tokens.lto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 102,\n    lpSymbol: 'MIR-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf64a269F0A06dA07D23F43c1Deb217101ee6Bee7',\n    },\n    token: tokens.mir,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 101,\n    lpSymbol: 'TRADE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2562f94E90dE6D9eb4fB6B3b8Eab56b15Aa4FC72',\n    },\n    token: tokens.trade,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 100,\n    lpSymbol: 'DUSK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB7918560273FD56e50E9c215CC0DFE8D764C36C5',\n    },\n    token: tokens.dusk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 99,\n    lpSymbol: 'BIFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd132D2C24F29EE8ABb64a66559d1b7aa627Bd7fD',\n    },\n    token: tokens.bifi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 98,\n    lpSymbol: 'TXL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD20E0BcCa8B29409bf5726CB24DD779Fe337020e',\n    },\n    token: tokens.txl,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 97,\n    lpSymbol: 'COS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b1e440240B220244761C9D9A3B07fbA1995BD84',\n    },\n    token: tokens.cos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 96,\n    lpSymbol: 'BUNNY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7Bb89460599Dbf32ee3Aa50798BBcEae2A5F7f6a',\n    },\n    token: tokens.bunny,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 95,\n    lpSymbol: 'ALICE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe022baa3E5E87658f789c9132B10d7425Fd3a389',\n    },\n    token: tokens.alice,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 94,\n    lpSymbol: 'FOR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfEc200A5E3adDD4a7915a556DDe3F5850e644020',\n    },\n    token: tokens.for,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 93,\n    lpSymbol: 'BUX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0F556f4E47513d1a19Be456a9aF778d7e1A226B9',\n    },\n    token: tokens.bux,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 92,\n    lpSymbol: 'NULS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xCA01F5D89d5b1d24ca5D6Ecc856D21e8a61DAFCc',\n    },\n    token: tokens.nuls,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 91,\n    lpSymbol: 'NULS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xad7e515409e5a7d516411a85acc88c5e993f570a',\n    },\n    token: tokens.nuls,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 90,\n    lpSymbol: 'BELT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x83B92D283cd279fF2e057BD86a95BdEfffED6faa',\n    },\n    token: tokens.belt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 89,\n    lpSymbol: 'RAMP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbF36959939982D0D34B37Fb3f3425da9676C13a3',\n    },\n    token: tokens.ramp,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 88,\n    lpSymbol: 'BFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x45a9e8d48bc560416008d122c9437927fed50e7d',\n    },\n    token: tokens.bfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 87,\n    lpSymbol: 'DEXE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x69ab367bc1bea1d2c0fb4dbaec6b7197951da56c',\n    },\n    token: tokens.dexe,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 86,\n    lpSymbol: 'BEL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xAB97952a2806D5c92b7046c7aB13a72A87e0097b',\n    },\n    token: tokens.bel,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 85,\n    lpSymbol: 'TPT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4db28767d1527ba545ca5bbda1c96a94ed6ff242',\n    },\n    token: tokens.tpt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 84,\n    lpSymbol: 'WATCH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdc6c130299e53acd2cc2d291fa10552ca2198a6b',\n    },\n    token: tokens.watch,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 83,\n    lpSymbol: 'xMARK-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x292ca56ed5b3330a19037f835af4a9c0098ea6fa',\n    },\n    token: tokens.xmark,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 82,\n    lpSymbol: 'bMXX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4D5aA94Ce6BbB1BC4eb73207a5a5d4D052cFcD67',\n    },\n    token: tokens.bmxx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 81,\n    lpSymbol: 'IOTX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x36b8b28d37f93372188f2aa2507b68a5cd8b2664',\n    },\n    token: tokens.iotx,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 80,\n    lpSymbol: 'BOR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x86e650350c40a5178a5d014ba37fe8556232b898',\n    },\n    token: tokens.bor,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 79,\n    lpSymbol: 'bOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9d8b7e4a9d53654d82f12c83448d8f92732bc761',\n    },\n    token: tokens.bopen,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 78,\n    lpSymbol: 'SUSHI-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x17580340f3daedae871a8c21d15911742ec79e0f',\n    },\n    token: tokens.sushi,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 77,\n    lpSymbol: 'DODO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9e642d174b14faea31d842dc83037c42b53236e6',\n    },\n    token: tokens.dodo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 75,\n    lpSymbol: 'BRY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5E3CD27F36932Bc0314aC4e2510585798C34a2fC',\n    },\n    token: tokens.bry,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 74,\n    lpSymbol: 'ZEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb5ab3996808c7e489dcdc0f1af2ab212ae0059af',\n    },\n    token: tokens.zee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 73,\n    lpSymbol: 'SWGb-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc1800c29cf91954357cd0bf3f0accaada3d0109c',\n    },\n    token: tokens.swgb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 72,\n    lpSymbol: 'COMP-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0392957571f28037607c14832d16f8b653edd472',\n    },\n    token: tokens.comp,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 71,\n    lpSymbol: 'SFP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcbe2cf3bd012e9c1ade2ee4d41db3dac763e78f3',\n    },\n    token: tokens.sfp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 70,\n    lpSymbol: 'BETH-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x99d865ed50d2c32c1493896810fa386c1ce81d91',\n    },\n    token: tokens.beth,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 69,\n    lpSymbol: 'LINA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xeb325a8ea1c5abf40c7ceaf645596c1f943d0948',\n    },\n    token: tokens.lina,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 68,\n    lpSymbol: 'LIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x60bB03D1010b99CEAdD0dd209b64bC8bd83da161',\n    },\n    token: tokens.lit,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 67,\n    lpSymbol: 'HGET-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x66b9e1eac8a81f3752f7f3a5e95de460688a17ee',\n    },\n    token: tokens.hget,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 66,\n    lpSymbol: 'BDO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74690f829fec83ea424ee1f1654041b2491a7be9',\n    },\n    token: tokens.bdo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 65,\n    lpSymbol: 'EGLD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3ef4952c7a9afbe374ea02d1bf5ed5a0015b7716',\n    },\n    token: tokens.egld,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 63,\n    lpSymbol: 'UST-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD1F12370b2ba1C79838337648F820a87eDF5e1e6',\n    },\n    token: tokens.ust,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 62,\n    lpSymbol: 'mAMZN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc92Dc34665c8a21f98E1E38474580b61b4f3e1b9',\n    },\n    token: tokens.mamzn,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 61,\n    lpSymbol: 'mGOOGL-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x852A68181f789AE6d1Da3dF101740a59A071004f',\n    },\n    token: tokens.mgoogl,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 60,\n    lpSymbol: 'mNFLX-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF609ade3846981825776068a8eD7746470029D1f',\n    },\n    token: tokens.mnflx,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 59,\n    lpSymbol: 'mTSLA-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD5664D2d15cdffD597515f1c0D945c6c1D3Bf85B',\n    },\n    token: tokens.mtsla,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 58,\n    lpSymbol: 'wSOTE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xffb9e2d5ce4378f1a89b29bf53f80804cc078102',\n    },\n    token: tokens.wsote,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 57,\n    lpSymbol: 'FRONT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x36b7d2e5c7877392fb17f9219efad56f3d794700',\n    },\n    token: tokens.front,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 56,\n    lpSymbol: 'Helmet-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6411310c07d8c48730172146fd6f31fa84034a8b',\n    },\n    token: tokens.helmet,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 55,\n    lpSymbol: 'BTCST-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x91589786D36fEe5B27A5539CfE638a5fc9834665',\n    },\n    token: tokens.btcst,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 54,\n    lpSymbol: 'LTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbc765fd113c5bdb2ebc25f711191b56bb8690aec',\n    },\n    token: tokens.ltc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 53,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\n    },\n    token: tokens.usdc,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 52,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3aB77e40340AB084c3e23Be8e5A6f7afed9D41DC',\n    },\n    token: tokens.dai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 51,\n    lpSymbol: 'BSCX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x20781bc3701c5309ac75291f5d09bdc23d7b7fa8',\n    },\n    token: tokens.bscx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 50,\n    lpSymbol: 'TEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x01ecc44ddd2d104f44d2aa1a2bd9dfbc91ae8275',\n    },\n    token: tokens.ten,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 49,\n    lpSymbol: 'bALBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbe14f3a89a4f7f279af9d99554cf12e8c29db921',\n    },\n    token: tokens.balbt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 46,\n    lpSymbol: 'OG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x64373608f2e93ea97ad4d8ca2cce6b2575db2f55',\n    },\n    token: tokens.og,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 47,\n    lpSymbol: 'ASR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd6b900d5308356317299dafe303e661271aa12f1',\n    },\n    token: tokens.asr,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 48,\n    lpSymbol: 'ATM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd5b3ebf1a85d32c73a82b40f75e1cd929caf4029',\n    },\n    token: tokens.atm,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 45,\n    lpSymbol: 'REEF-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58B58cab6C5cF158f63A2390b817710826d116D0',\n    },\n    token: tokens.reef,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 44,\n    lpSymbol: 'Ditto-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x470bc451810b312bbb1256f96b0895d95ea659b1',\n    },\n    token: tokens.ditto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 43,\n    lpSymbol: 'JUV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x51a2ffa5b7de506f9a22549e48b33f6cf0d9030e',\n    },\n    token: tokens.juv,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 42,\n    lpSymbol: 'PSG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9c4f6a5050cf863e67a402e8b377973b4e3372c1',\n    },\n    token: tokens.psg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 39,\n    lpSymbol: 'UNFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbEA35584b9a88107102ABEf0BDeE2c4FaE5D8c31',\n    },\n    token: tokens.unfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 41,\n    lpSymbol: 'VAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xff17ff314925dff772b71abdff2782bc913b3575',\n    },\n    token: tokens.vai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 40,\n    lpSymbol: 'BLK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC743Dc05F03D25E1aF8eC5F8228f4BD25513c8d0',\n    },\n    token: tokens.blink,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 37,\n    lpSymbol: 'HARD-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x9f40e8a2fcaa267a0c374b6c661e0b372264cc3d',\n    },\n    token: tokens.hard,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 3,\n    lpSymbol: 'ADA-BNB LP',\n    lpAddresses: {\n      97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n      56: '0xba51d1ab95756ca4eab8737ecd450cd8f05384cf',\n    },\n    token: tokens.ada,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 4,\n    lpSymbol: 'BAND-BNB LP',\n    lpAddresses: {\n      97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n      56: '0xc639187ef82271d8f517de6feae4faf5b517533c',\n    },\n    token: tokens.band,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 5,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xbcd62661a6b1ded703585d3af7d7649ef4dcdb5c',\n    },\n    token: tokens.dot,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 6,\n    lpSymbol: 'EOS-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x981d2ba1b298888408d342c39c2ab92e8991691e',\n    },\n    token: tokens.eos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 7,\n    lpSymbol: 'LINK-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xaebe45e3a03b734c68e5557ae04bfc76917b4686',\n    },\n    token: tokens.link,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 11,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xc15fa3E22c912A276550F3E5FE3b0Deb87B55aCd',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 12,\n    lpSymbol: 'TWT-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x610e7a287c27dfFcaC0F0a94f547Cc1B770cF483',\n    },\n    token: tokens.twt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 13,\n    lpSymbol: 'XVS-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x41182c32F854dd97bA0e0B1816022e0aCB2fc0bb',\n    },\n    token: tokens.xvs,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 14,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x70D8929d04b60Af4fb9B58713eBcf18765aDE422',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 15,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7561EEe90e24F3b348E1087A005F78B4c8453524',\n    },\n    token: tokens.btcb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 16,\n    lpSymbol: 'ALPHA-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x4e0f3385d932F7179DeE045369286FFa6B03d887',\n    },\n    token: tokens.alpha,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 17,\n    lpSymbol: 'USDT-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x20bcc3b8a0091ddac2d0bc30f68e6cbb97de59cd',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 18,\n    lpSymbol: 'XRP-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xc7b4b32a3be2cb6572a1c9959401f832ce47a6d2',\n    },\n    token: tokens.xrp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 19,\n    lpSymbol: 'ATOM-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x2333c77fc0b2875c11409cdcd3c75d42d402e834',\n    },\n    token: tokens.atom,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 20,\n    lpSymbol: 'YFII-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x574a978c2d0d36d707a05e459466c7a1054f1210',\n    },\n    token: tokens.yfii,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 21,\n    lpSymbol: 'DAI-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x56c77d59e82f33c712f919d09fceddf49660a829',\n    },\n    token: tokens.dai,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 22,\n    lpSymbol: 'XTZ-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x5acac332f0f49c8badc7afd0134ad19d3db972e6',\n    },\n    token: tokens.xtz,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 23,\n    lpSymbol: 'BCH-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x54edd846db17f43b6e43296134ecd96284671e81',\n    },\n    token: tokens.bch,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 24,\n    lpSymbol: 'YFI-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x68Ff2ca47D27db5Ac0b5c46587645835dD51D3C1',\n    },\n    token: tokens.yfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 25,\n    lpSymbol: 'UNI-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x4269e7F43A63CEA1aD7707Be565a94a9189967E9',\n    },\n    token: tokens.uni,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 26,\n    lpSymbol: 'FIL-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x35fe9787f0ebf2a200bac413d3030cf62d312774',\n    },\n    token: tokens.fil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 27,\n    lpSymbol: 'INJ-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7a34bd64d18e44CfdE3ef4B81b87BAf3EB3315B6',\n    },\n    token: tokens.inj,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 29,\n    lpSymbol: 'USDC-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x30479874f9320a62bce3bc0e315c920e1d73e278',\n    },\n    token: tokens.usdc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 30,\n    lpSymbol: 'SXP-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x752E713fB70E3FA1Ac08bCF34485F14A986956c4',\n    },\n    token: tokens.sxp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 32,\n    lpSymbol: 'CTK-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7793870484647a7278907498ec504879d6971EAb',\n    },\n    token: tokens.ctk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 34,\n    lpSymbol: 'STAX-CAKE LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7cd05f8b960ba071fdf69c750c0e5a57c8366500',\n    },\n    token: tokens.stax,\n    quoteToken: tokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 35,\n    lpSymbol: 'NAR-CAKE LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x745c4fd226e169d6da959283275a8e0ecdd7f312',\n    },\n    token: tokens.nar,\n    quoteToken: tokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 36,\n    lpSymbol: 'NYA-CAKE LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x2730bf486d658838464a4ef077880998d944252d',\n    },\n    token: tokens.nya,\n    quoteToken: tokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 38,\n    lpSymbol: 'bROOBEE-CAKE LP',\n    lpAddresses: {\n      97: '',\n      56: '0x970858016C963b780E06f7DCfdEf8e809919BcE8',\n    },\n    token: tokens.broobee,\n    quoteToken: tokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 8,\n    lpSymbol: 'BAKE-BNB Bakery LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xc2eed0f5a0dc28cfa895084bc0a9b8b8279ae492',\n    },\n    token: tokens.bake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 9,\n    lpSymbol: 'BURGER-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xd937FB9E6e47F3805981453BFB277a49FFfE04D7',\n    },\n    token: tokens.burger,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 10,\n    lpSymbol: 'BAKE-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x3Da30727ed0626b78C212e81B37B97A8eF8A25bB',\n    },\n    token: tokens.bake,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default farms\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n"],"sourceRoot":""}