{"version":3,"sources":["views/Profile/components/HeaderWrapper.tsx","views/Teams/components/NoProfileCard.tsx","views/Teams/components/TeamHeader.tsx","views/Teams/components/TeamListCard.tsx","views/Teams/index.tsx"],"names":["HeaderWrapper","styled","div","theme","colors","textSubtle","NoProfileCard","t","useTranslation","mb","isActive","alignItems","justifyContent","flexDirection","scale","as","Link","to","mt","TeamHeader","useProfile","isInitialized","profile","showProfileCallout","color","bold","TeamRank","isDark","getBackground","Body","mediaQueries","md","Info","Avatar","img","TeamName","Heading","attrs","MobileAvatar","DesktopAvatar","StyledTeamCard","Card","TeamCard","rank","team","avatar","src","images","alt","fontSize","name","pr","description","width","mr","style","alignSelf","points","toLocaleString","ml","users","id","variant","Teams","useTeams","teams","isLoading","teamList","Object","values","topTeams","orderBy","Page","spin","map","index","TeamListCard","key"],"mappings":"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","file":"static/js/13.282667ef.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst HeaderWrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nexport default HeaderWrapper\n","import React from 'react'\nimport { Button, Card, CardBody, Flex, Heading, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Link } from 'react-router-dom'\n\nconst NoProfileCard = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Card mb=\"32px\" isActive>\n      <CardBody>\n        <Flex\n          alignItems={['start', null, 'center']}\n          justifyContent={['start', null, 'space-between']}\n          flexDirection={['column', null, 'row']}\n        >\n          <div>\n            <Heading scale=\"lg\" mb=\"8px\">\n              {t('You havenâ€™t set up your profile yet!')}\n            </Heading>\n            <Text>{t('You can do this at any time by clicking on your profile picture in the menu')}</Text>\n          </div>\n          <Button as={Link} to=\"/profile\" mt={['16px', null, 0]}>\n            {t('Set up now')}\n          </Button>\n        </Flex>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default NoProfileCard\n","import React from 'react'\nimport { Heading, Text } from '@pancakeswap/uikit'\nimport { useProfile } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport HeaderWrapper from 'views/Profile/components/HeaderWrapper'\nimport NoProfileCard from './NoProfileCard'\n\nconst TeamHeader = () => {\n  const { t } = useTranslation()\n  const { isInitialized, profile } = useProfile()\n  const showProfileCallout = isInitialized && !profile\n\n  return (\n    <>\n      {showProfileCallout && <NoProfileCard />}\n      <HeaderWrapper>\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\">\n          {t('Teams & Profiles')}\n        </Heading>\n        <Text bold>\n          {t('Show off your stats and collectibles with your unique profile. Team features will be revealed soon!')}\n        </Text>\n      </HeaderWrapper>\n    </>\n  )\n}\n\nexport default TeamHeader\n","import React from 'react'\nimport styled, { DefaultTheme } from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { Button, Card, CommunityIcon, Flex, Heading, PrizeIcon, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Team } from 'config/constants/types'\n\ninterface TeamCardProps {\n  rank: number\n  team: Team\n}\n\nconst getBackground = (theme: DefaultTheme) => {\n  if (theme.isDark) {\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\n  }\n\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\n}\n\nconst TeamRank = styled.div`\n  align-self: stretch;\n  background: ${({ theme }) => getBackground(theme)};\n  flex: none;\n  padding: 16px 0;\n  text-align: center;\n  width: 56px;\n`\n\nconst Body = styled.div`\n  align-items: start;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  padding: 24px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    align-items: center;\n    flex-direction: row;\n    font-size: 40px;\n  }\n`\n\nconst Info = styled.div`\n  flex: 1;\n`\n\nconst Avatar = styled.img`\n  border-radius: 50%;\n`\n\nconst TeamName = styled(Heading).attrs({ as: 'h3' })`\n  font-size: 24px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 40px;\n  }\n`\n\nconst MobileAvatar = styled.div`\n  flex: none;\n  margin-right: 8px;\n\n  ${Avatar} {\n    height: 64px;\n    width: 64px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst DesktopAvatar = styled.div`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n    margin-left: 24px;\n\n    ${Avatar} {\n      height: 128px;\n      width: 128px;\n    }\n  }\n`\n\nconst StyledTeamCard = styled(Card)`\n  display: flex;\n  margin-bottom: 16px;\n`\n\nconst TeamCard: React.FC<TeamCardProps> = ({ rank, team }) => {\n  const { t } = useTranslation()\n  const avatar = <Avatar src={`/images/teams/${team.images.md}`} alt=\"team avatar\" />\n\n  return (\n    <StyledTeamCard>\n      <TeamRank>\n        <Text bold fontSize=\"24px\">\n          {rank}\n        </Text>\n      </TeamRank>\n      <Body>\n        <Info>\n          <Flex alignItems=\"center\" mb=\"16px\">\n            <MobileAvatar>{avatar}</MobileAvatar>\n            <TeamName>{team.name}</TeamName>\n          </Flex>\n          <Text as=\"p\" color=\"textSubtle\" pr=\"24px\" mb=\"16px\">\n            {t(team.description)}\n          </Text>\n          <Flex>\n            <Flex>\n              {/* alignSelf for Safari fix */}\n              <PrizeIcon width=\"24px\" mr=\"8px\" style={{ alignSelf: 'center' }} />\n              <Text fontSize=\"24px\" bold>\n                {team.points.toLocaleString()}\n              </Text>\n            </Flex>\n            <Flex ml=\"24px\">\n              {/* alignSelf for Safari fix */}\n              <CommunityIcon width=\"24px\" mr=\"8px\" style={{ alignSelf: 'center' }} />\n              <Text fontSize=\"24px\" bold>\n                {team.users.toLocaleString()}\n              </Text>\n            </Flex>\n          </Flex>\n        </Info>\n        <Button as={Link} to={`/teams/${team?.id}`} variant=\"secondary\" scale=\"sm\">\n          {t('See More')}\n        </Button>\n        <DesktopAvatar>{avatar}</DesktopAvatar>\n      </Body>\n    </StyledTeamCard>\n  )\n}\n\nexport default TeamCard\n","import React from 'react'\nimport { AutoRenewIcon, Flex, Heading } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport { useTeams } from 'state/hooks'\nimport Page from 'components/layout/Page'\nimport { useTranslation } from 'contexts/Localization'\nimport TeamListCard from './components/TeamListCard'\nimport TeamHeader from './components/TeamHeader'\n\nconst Teams = () => {\n  const { t } = useTranslation()\n  const { teams, isLoading } = useTeams()\n  const teamList = Object.values(teams)\n  const topTeams = orderBy(teamList, ['points', 'id', 'name'], ['desc', 'asc', 'asc'])\n\n  return (\n    <Page>\n      <TeamHeader />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"32px\">\n        <Heading scale=\"xl\">{t('Teams')}</Heading>\n        {isLoading && <AutoRenewIcon spin />}\n      </Flex>\n      {topTeams.map((team, index) => (\n        <TeamListCard key={team.id} rank={index + 1} team={team} />\n      ))}\n    </Page>\n  )\n}\n\nexport default Teams\n"],"sourceRoot":""}